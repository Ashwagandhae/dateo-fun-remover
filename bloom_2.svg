<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="29761"><g><title>libsystem_malloc.dylib`0x7ff81a20b7de (6 samples, 0.02%)</title><rect x="0.1008%" y="85" width="0.0202%" height="15" fill="rgb(227,0,7)" fg:x="30" fg:w="6"/><text x="0.3508%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7a0 (10 samples, 0.03%)</title><rect x="0.0907%" y="117" width="0.0336%" height="15" fill="rgb(217,0,24)" fg:x="27" fg:w="10"/><text x="0.3407%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a464 (10 samples, 0.03%)</title><rect x="0.0907%" y="101" width="0.0336%" height="15" fill="rgb(221,193,54)" fg:x="27" fg:w="10"/><text x="0.3407%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (16 samples, 0.05%)</title><rect x="0.0840%" y="133" width="0.0538%" height="15" fill="rgb(248,212,6)" fg:x="25" fg:w="16"/><text x="0.3340%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.08%)</title><rect x="0.0638%" y="181" width="0.0773%" height="15" fill="rgb(208,68,35)" fg:x="19" fg:w="23"/><text x="0.3138%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (23 samples, 0.08%)</title><rect x="0.0638%" y="165" width="0.0773%" height="15" fill="rgb(232,128,0)" fg:x="19" fg:w="23"/><text x="0.3138%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (17 samples, 0.06%)</title><rect x="0.0840%" y="149" width="0.0571%" height="15" fill="rgb(207,160,47)" fg:x="25" fg:w="17"/><text x="0.3340%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20e006 (5 samples, 0.02%)</title><rect x="0.1579%" y="181" width="0.0168%" height="15" fill="rgb(228,23,34)" fg:x="47" fg:w="5"/><text x="0.4079%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 0.17%)</title><rect x="0.0269%" y="197" width="0.1680%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="50"/><text x="0.2769%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::hashing::HashIter as core::iter::traits::iterator::Iterator&gt;::next (220 samples, 0.74%)</title><rect x="0.1949%" y="197" width="0.7392%" height="15" fill="rgb(220,122,19)" fg:x="58" fg:w="220"/><text x="0.4449%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.06%)</title><rect x="0.9341%" y="197" width="0.0638%" height="15" fill="rgb(250,228,42)" fg:x="278" fg:w="19"/><text x="1.1841%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (24 samples, 0.08%)</title><rect x="1.0013%" y="197" width="0.0806%" height="15" fill="rgb(240,193,28)" fg:x="298" fg:w="24"/><text x="1.2513%" y="207.50"></text></g><g><title>dateo_fun_remover`bloom::hashing::HashIter::from (29 samples, 0.10%)</title><rect x="1.0920%" y="197" width="0.0974%" height="15" fill="rgb(216,20,37)" fg:x="325" fg:w="29"/><text x="1.3420%" y="207.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (17 samples, 0.06%)</title><rect x="1.1895%" y="165" width="0.0571%" height="15" fill="rgb(206,188,39)" fg:x="354" fg:w="17"/><text x="1.4395%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (4 samples, 0.01%)</title><rect x="1.2332%" y="149" width="0.0134%" height="15" fill="rgb(217,207,13)" fg:x="367" fg:w="4"/><text x="1.4832%" y="159.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (29 samples, 0.10%)</title><rect x="1.1895%" y="181" width="0.0974%" height="15" fill="rgb(231,73,38)" fg:x="354" fg:w="29"/><text x="1.4395%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (6 samples, 0.02%)</title><rect x="1.2668%" y="165" width="0.0202%" height="15" fill="rgb(225,20,46)" fg:x="377" fg:w="6"/><text x="1.5168%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (9 samples, 0.03%)</title><rect x="1.3004%" y="181" width="0.0302%" height="15" fill="rgb(210,31,41)" fg:x="387" fg:w="9"/><text x="1.5504%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (7 samples, 0.02%)</title><rect x="1.3440%" y="181" width="0.0235%" height="15" fill="rgb(221,200,47)" fg:x="400" fg:w="7"/><text x="1.5940%" y="191.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (54 samples, 0.18%)</title><rect x="1.1895%" y="197" width="0.1814%" height="15" fill="rgb(226,26,5)" fg:x="354" fg:w="54"/><text x="1.4395%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (6 samples, 0.02%)</title><rect x="1.4381%" y="117" width="0.0202%" height="15" fill="rgb(249,33,26)" fg:x="428" fg:w="6"/><text x="1.6881%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (11 samples, 0.04%)</title><rect x="1.4314%" y="133" width="0.0370%" height="15" fill="rgb(235,183,28)" fg:x="426" fg:w="11"/><text x="1.6814%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_if_limit (3 samples, 0.01%)</title><rect x="1.4583%" y="117" width="0.0101%" height="15" fill="rgb(221,5,38)" fg:x="434" fg:w="3"/><text x="1.7083%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (19 samples, 0.06%)</title><rect x="1.4180%" y="149" width="0.0638%" height="15" fill="rgb(247,18,42)" fg:x="422" fg:w="19"/><text x="1.6680%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (23 samples, 0.08%)</title><rect x="1.4112%" y="165" width="0.0773%" height="15" fill="rgb(241,131,45)" fg:x="420" fg:w="23"/><text x="1.6612%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_if_limit (3 samples, 0.01%)</title><rect x="1.4885%" y="165" width="0.0101%" height="15" fill="rgb(249,31,29)" fg:x="443" fg:w="3"/><text x="1.7385%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (33 samples, 0.11%)</title><rect x="1.3944%" y="181" width="0.1109%" height="15" fill="rgb(225,111,53)" fg:x="415" fg:w="33"/><text x="1.6444%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::test (42 samples, 0.14%)</title><rect x="1.3709%" y="197" width="0.1411%" height="15" fill="rgb(238,160,17)" fg:x="408" fg:w="42"/><text x="1.6209%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::bloom::BloomFilter&lt;R,S&gt; as bloom::ASMS&gt;::insert (11 samples, 0.04%)</title><rect x="21.8608%" y="181" width="0.0370%" height="15" fill="rgb(214,148,48)" fg:x="6506" fg:w="11"/><text x="22.1108%" y="191.50"></text></g><g><title>dateo_fun_remover`bloom::hashing::HashIter::from (6 samples, 0.02%)</title><rect x="21.8776%" y="165" width="0.0202%" height="15" fill="rgb(232,36,49)" fg:x="6511" fg:w="6"/><text x="22.1276%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::hashing::HashIter as core::iter::traits::iterator::Iterator&gt;::next (268 samples, 0.90%)</title><rect x="21.8978%" y="181" width="0.9005%" height="15" fill="rgb(209,103,24)" fg:x="6517" fg:w="268"/><text x="22.1478%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="22.7983%" y="181" width="0.0134%" height="15" fill="rgb(229,88,8)" fg:x="6785" fg:w="4"/><text x="23.0483%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="22.7983%" y="165" width="0.0134%" height="15" fill="rgb(213,181,19)" fg:x="6785" fg:w="4"/><text x="23.0483%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (4 samples, 0.01%)</title><rect x="22.7983%" y="149" width="0.0134%" height="15" fill="rgb(254,191,54)" fg:x="6785" fg:w="4"/><text x="23.0483%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (4 samples, 0.01%)</title><rect x="22.7983%" y="133" width="0.0134%" height="15" fill="rgb(241,83,37)" fg:x="6785" fg:w="4"/><text x="23.0483%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (4 samples, 0.01%)</title><rect x="22.7983%" y="117" width="0.0134%" height="15" fill="rgb(233,36,39)" fg:x="6785" fg:w="4"/><text x="23.0483%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="22.7983%" y="101" width="0.0134%" height="15" fill="rgb(226,3,54)" fg:x="6785" fg:w="4"/><text x="23.0483%" y="111.50"></text></g><g><title>dateo_fun_remover`core::hash::Hasher::write_u64 (1,062 samples, 3.57%)</title><rect x="30.0158%" y="165" width="3.5684%" height="15" fill="rgb(245,192,40)" fg:x="8933" fg:w="1062"/><text x="30.2658%" y="175.50">date..</text></g><g><title>dateo_fun_remover`bloom::hashing::HashIter::from (3,640 samples, 12.23%)</title><rect x="22.8117%" y="181" width="12.2308%" height="15" fill="rgb(238,167,29)" fg:x="6789" fg:w="3640"/><text x="23.0617%" y="191.50">dateo_fun_remover`..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (434 samples, 1.46%)</title><rect x="33.5842%" y="165" width="1.4583%" height="15" fill="rgb(232,182,51)" fg:x="9995" fg:w="434"/><text x="33.8342%" y="175.50"></text></g><g><title>dateo_fun_remover`core::hash::Hasher::write_u64 (50 samples, 0.17%)</title><rect x="35.0425%" y="181" width="0.1680%" height="15" fill="rgb(231,60,39)" fg:x="10429" fg:w="50"/><text x="35.2925%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (201 samples, 0.68%)</title><rect x="35.2105%" y="181" width="0.6754%" height="15" fill="rgb(208,69,12)" fg:x="10479" fg:w="201"/><text x="35.4605%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (10,298 samples, 34.60%)</title><rect x="1.5120%" y="197" width="34.6023%" height="15" fill="rgb(235,93,37)" fg:x="450" fg:w="10298"/><text x="1.7620%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::fin..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (66 samples, 0.22%)</title><rect x="35.8926%" y="181" width="0.2218%" height="15" fill="rgb(213,116,39)" fg:x="10682" fg:w="66"/><text x="36.1426%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (7 samples, 0.02%)</title><rect x="36.1144%" y="181" width="0.0235%" height="15" fill="rgb(222,207,29)" fg:x="10748" fg:w="7"/><text x="36.3644%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (7 samples, 0.02%)</title><rect x="36.1413%" y="165" width="0.0235%" height="15" fill="rgb(206,96,30)" fg:x="10756" fg:w="7"/><text x="36.3913%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="36.1648%" y="165" width="0.0202%" height="15" fill="rgb(218,138,4)" fg:x="10763" fg:w="6"/><text x="36.4148%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="36.1749%" y="149" width="0.0101%" height="15" fill="rgb(250,191,14)" fg:x="10766" fg:w="3"/><text x="36.4249%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (17 samples, 0.06%)</title><rect x="36.1379%" y="181" width="0.0571%" height="15" fill="rgb(239,60,40)" fg:x="10755" fg:w="17"/><text x="36.3879%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (34 samples, 0.11%)</title><rect x="36.1144%" y="197" width="0.1142%" height="15" fill="rgb(206,27,48)" fg:x="10748" fg:w="34"/><text x="36.3644%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.03%)</title><rect x="36.1950%" y="181" width="0.0336%" height="15" fill="rgb(225,35,8)" fg:x="10772" fg:w="10"/><text x="36.4450%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="36.2152%" y="165" width="0.0134%" height="15" fill="rgb(250,213,24)" fg:x="10778" fg:w="4"/><text x="36.4652%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::fill_map_rec (16 samples, 0.05%)</title><rect x="36.2286%" y="197" width="0.0538%" height="15" fill="rgb(247,123,22)" fg:x="10782" fg:w="16"/><text x="36.4786%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="36.2622%" y="181" width="0.0202%" height="15" fill="rgb(231,138,38)" fg:x="10792" fg:w="6"/><text x="36.5122%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="36.2656%" y="165" width="0.0168%" height="15" fill="rgb(231,145,46)" fg:x="10793" fg:w="5"/><text x="36.5156%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (5 samples, 0.02%)</title><rect x="36.3093%" y="165" width="0.0168%" height="15" fill="rgb(251,118,11)" fg:x="10806" fg:w="5"/><text x="36.5593%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (11 samples, 0.04%)</title><rect x="36.2958%" y="181" width="0.0370%" height="15" fill="rgb(217,147,25)" fg:x="10802" fg:w="11"/><text x="36.5458%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (6 samples, 0.02%)</title><rect x="36.3597%" y="165" width="0.0202%" height="15" fill="rgb(247,81,37)" fg:x="10821" fg:w="6"/><text x="36.6097%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;dateo_fun_remover::finder::atom::Atom as core::clone::Clone&gt;::clone (17 samples, 0.06%)</title><rect x="36.3966%" y="149" width="0.0571%" height="15" fill="rgb(209,12,38)" fg:x="10832" fg:w="17"/><text x="36.6466%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (38 samples, 0.13%)</title><rect x="36.3429%" y="181" width="0.1277%" height="15" fill="rgb(227,1,9)" fg:x="10816" fg:w="38"/><text x="36.5929%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (25 samples, 0.08%)</title><rect x="36.3865%" y="165" width="0.0840%" height="15" fill="rgb(248,47,43)" fg:x="10829" fg:w="25"/><text x="36.6365%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (59 samples, 0.20%)</title><rect x="36.2824%" y="197" width="0.1982%" height="15" fill="rgb(221,10,30)" fg:x="10798" fg:w="59"/><text x="36.5324%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.14%)</title><rect x="39.9415%" y="181" width="0.1445%" height="15" fill="rgb(210,229,1)" fg:x="11887" fg:w="43"/><text x="40.1915%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,140 samples, 7.19%)</title><rect x="40.0860%" y="181" width="7.1906%" height="15" fill="rgb(222,148,37)" fg:x="11930" fg:w="2140"/><text x="40.3360%" y="191.50">dateo_fun_..</text></g><g><title>dateo_fun_remover`__rdl_dealloc (24 samples, 0.08%)</title><rect x="47.2834%" y="181" width="0.0806%" height="15" fill="rgb(234,67,33)" fg:x="14072" fg:w="24"/><text x="47.5334%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d794 (5 samples, 0.02%)</title><rect x="47.3741%" y="117" width="0.0168%" height="15" fill="rgb(247,98,35)" fg:x="14099" fg:w="5"/><text x="47.6241%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (5 samples, 0.02%)</title><rect x="47.3741%" y="101" width="0.0168%" height="15" fill="rgb(247,138,52)" fg:x="14099" fg:w="5"/><text x="47.6241%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="47.3741%" y="85" width="0.0168%" height="15" fill="rgb(213,79,30)" fg:x="14099" fg:w="5"/><text x="47.6241%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (65 samples, 0.22%)</title><rect x="47.3707%" y="181" width="0.2184%" height="15" fill="rgb(246,177,23)" fg:x="14098" fg:w="65"/><text x="47.6207%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (65 samples, 0.22%)</title><rect x="47.3707%" y="165" width="0.2184%" height="15" fill="rgb(230,62,27)" fg:x="14098" fg:w="65"/><text x="47.6207%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (65 samples, 0.22%)</title><rect x="47.3707%" y="149" width="0.2184%" height="15" fill="rgb(216,154,8)" fg:x="14098" fg:w="65"/><text x="47.6207%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (65 samples, 0.22%)</title><rect x="47.3707%" y="133" width="0.2184%" height="15" fill="rgb(244,35,45)" fg:x="14098" fg:w="65"/><text x="47.6207%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (58 samples, 0.19%)</title><rect x="47.3942%" y="117" width="0.1949%" height="15" fill="rgb(251,115,12)" fg:x="14105" fg:w="58"/><text x="47.6442%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (58 samples, 0.19%)</title><rect x="47.3942%" y="101" width="0.1949%" height="15" fill="rgb(240,54,50)" fg:x="14105" fg:w="58"/><text x="47.6442%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (58 samples, 0.19%)</title><rect x="47.3942%" y="85" width="0.1949%" height="15" fill="rgb(233,84,52)" fg:x="14105" fg:w="58"/><text x="47.6442%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (58 samples, 0.19%)</title><rect x="47.3942%" y="69" width="0.1949%" height="15" fill="rgb(207,117,47)" fg:x="14105" fg:w="58"/><text x="47.6442%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (58 samples, 0.19%)</title><rect x="47.3942%" y="53" width="0.1949%" height="15" fill="rgb(249,43,39)" fg:x="14105" fg:w="58"/><text x="47.6442%" y="63.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="47.5992%" y="165" width="0.0168%" height="15" fill="rgb(209,38,44)" fg:x="14166" fg:w="5"/><text x="47.8492%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="47.5992%" y="149" width="0.0168%" height="15" fill="rgb(236,212,23)" fg:x="14166" fg:w="5"/><text x="47.8492%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (5 samples, 0.02%)</title><rect x="47.5992%" y="133" width="0.0168%" height="15" fill="rgb(242,79,21)" fg:x="14166" fg:w="5"/><text x="47.8492%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (5 samples, 0.02%)</title><rect x="47.5992%" y="117" width="0.0168%" height="15" fill="rgb(211,96,35)" fg:x="14166" fg:w="5"/><text x="47.8492%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (4 samples, 0.01%)</title><rect x="47.6026%" y="101" width="0.0134%" height="15" fill="rgb(253,215,40)" fg:x="14167" fg:w="4"/><text x="47.8526%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="47.6026%" y="85" width="0.0134%" height="15" fill="rgb(211,81,21)" fg:x="14167" fg:w="4"/><text x="47.8526%" y="95.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="47.6160%" y="149" width="0.0101%" height="15" fill="rgb(208,190,38)" fg:x="14171" fg:w="3"/><text x="47.8660%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (4 samples, 0.01%)</title><rect x="47.6160%" y="165" width="0.0134%" height="15" fill="rgb(235,213,38)" fg:x="14171" fg:w="4"/><text x="47.8660%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (5 samples, 0.02%)</title><rect x="47.6294%" y="165" width="0.0168%" height="15" fill="rgb(237,122,38)" fg:x="14175" fg:w="5"/><text x="47.8794%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (4 samples, 0.01%)</title><rect x="47.6328%" y="149" width="0.0134%" height="15" fill="rgb(244,218,35)" fg:x="14176" fg:w="4"/><text x="47.8828%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="47.6328%" y="133" width="0.0134%" height="15" fill="rgb(240,68,47)" fg:x="14176" fg:w="4"/><text x="47.8828%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="47.6328%" y="117" width="0.0134%" height="15" fill="rgb(210,16,53)" fg:x="14176" fg:w="4"/><text x="47.8828%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="47.6362%" y="101" width="0.0101%" height="15" fill="rgb(235,124,12)" fg:x="14177" fg:w="3"/><text x="47.8862%" y="111.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (19 samples, 0.06%)</title><rect x="47.5891%" y="181" width="0.0638%" height="15" fill="rgb(224,169,11)" fg:x="14163" fg:w="19"/><text x="47.8391%" y="191.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (29 samples, 0.10%)</title><rect x="57.3200%" y="133" width="0.0974%" height="15" fill="rgb(250,166,2)" fg:x="17059" fg:w="29"/><text x="57.5700%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (653 samples, 2.19%)</title><rect x="57.4174%" y="133" width="2.1941%" height="15" fill="rgb(242,216,29)" fg:x="17088" fg:w="653"/><text x="57.6674%" y="143.50">d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (57 samples, 0.19%)</title><rect x="59.6116%" y="133" width="0.1915%" height="15" fill="rgb(230,116,27)" fg:x="17741" fg:w="57"/><text x="59.8616%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,742 samples, 5.85%)</title><rect x="54.2287%" y="149" width="5.8533%" height="15" fill="rgb(228,99,48)" fg:x="16139" fg:w="1742"/><text x="54.4787%" y="159.50">dateo_f..</text></g><g><title>libsystem_m.dylib`trunc (83 samples, 0.28%)</title><rect x="59.8031%" y="133" width="0.2789%" height="15" fill="rgb(253,11,6)" fg:x="17798" fg:w="83"/><text x="60.0531%" y="143.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (9 samples, 0.03%)</title><rect x="60.0820%" y="149" width="0.0302%" height="15" fill="rgb(247,143,39)" fg:x="17881" fg:w="9"/><text x="60.3320%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (534 samples, 1.79%)</title><rect x="60.1122%" y="149" width="1.7943%" height="15" fill="rgb(236,97,10)" fg:x="17890" fg:w="534"/><text x="60.3622%" y="159.50">d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (52 samples, 0.17%)</title><rect x="61.9065%" y="149" width="0.1747%" height="15" fill="rgb(233,208,19)" fg:x="18424" fg:w="52"/><text x="62.1565%" y="159.50"></text></g><g><title>libsystem_m.dylib`trunc (26 samples, 0.09%)</title><rect x="62.0812%" y="149" width="0.0874%" height="15" fill="rgb(216,164,2)" fg:x="18476" fg:w="26"/><text x="62.3312%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (24 samples, 0.08%)</title><rect x="62.1686%" y="149" width="0.0806%" height="15" fill="rgb(220,129,5)" fg:x="18502" fg:w="24"/><text x="62.4186%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209397 (3 samples, 0.01%)</title><rect x="62.2560%" y="149" width="0.0101%" height="15" fill="rgb(242,17,10)" fg:x="18528" fg:w="3"/><text x="62.5060%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (16 samples, 0.05%)</title><rect x="62.2661%" y="149" width="0.0538%" height="15" fill="rgb(242,107,0)" fg:x="18531" fg:w="16"/><text x="62.5161%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (17 samples, 0.06%)</title><rect x="62.3265%" y="149" width="0.0571%" height="15" fill="rgb(251,28,31)" fg:x="18549" fg:w="17"/><text x="62.5765%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (11 samples, 0.04%)</title><rect x="62.3904%" y="149" width="0.0370%" height="15" fill="rgb(233,223,10)" fg:x="18568" fg:w="11"/><text x="62.6404%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (13 samples, 0.04%)</title><rect x="62.4374%" y="149" width="0.0437%" height="15" fill="rgb(215,21,27)" fg:x="18582" fg:w="13"/><text x="62.6874%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (14 samples, 0.05%)</title><rect x="62.4878%" y="149" width="0.0470%" height="15" fill="rgb(232,23,21)" fg:x="18597" fg:w="14"/><text x="62.7378%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (58 samples, 0.19%)</title><rect x="62.5349%" y="149" width="0.1949%" height="15" fill="rgb(244,5,23)" fg:x="18611" fg:w="58"/><text x="62.7849%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (262 samples, 0.88%)</title><rect x="62.7331%" y="149" width="0.8803%" height="15" fill="rgb(226,81,46)" fg:x="18670" fg:w="262"/><text x="62.9831%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (14 samples, 0.05%)</title><rect x="63.6135%" y="149" width="0.0470%" height="15" fill="rgb(247,70,30)" fg:x="18932" fg:w="14"/><text x="63.8635%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (15 samples, 0.05%)</title><rect x="63.6605%" y="149" width="0.0504%" height="15" fill="rgb(212,68,19)" fg:x="18946" fg:w="15"/><text x="63.9105%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (80 samples, 0.27%)</title><rect x="63.7143%" y="149" width="0.2688%" height="15" fill="rgb(240,187,13)" fg:x="18962" fg:w="80"/><text x="63.9643%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (14 samples, 0.05%)</title><rect x="63.9831%" y="149" width="0.0470%" height="15" fill="rgb(223,113,26)" fg:x="19042" fg:w="14"/><text x="64.2331%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (17 samples, 0.06%)</title><rect x="64.0335%" y="149" width="0.0571%" height="15" fill="rgb(206,192,2)" fg:x="19057" fg:w="17"/><text x="64.2835%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (35 samples, 0.12%)</title><rect x="64.0906%" y="149" width="0.1176%" height="15" fill="rgb(241,108,4)" fg:x="19074" fg:w="35"/><text x="64.3406%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (11 samples, 0.04%)</title><rect x="64.2149%" y="149" width="0.0370%" height="15" fill="rgb(247,173,49)" fg:x="19111" fg:w="11"/><text x="64.4649%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (20 samples, 0.07%)</title><rect x="64.2519%" y="149" width="0.0672%" height="15" fill="rgb(224,114,35)" fg:x="19122" fg:w="20"/><text x="64.5019%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20943e (4 samples, 0.01%)</title><rect x="64.3191%" y="149" width="0.0134%" height="15" fill="rgb(245,159,27)" fg:x="19142" fg:w="4"/><text x="64.5691%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (5 samples, 0.02%)</title><rect x="64.3325%" y="149" width="0.0168%" height="15" fill="rgb(245,172,44)" fg:x="19146" fg:w="5"/><text x="64.5825%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (17 samples, 0.06%)</title><rect x="64.3493%" y="149" width="0.0571%" height="15" fill="rgb(236,23,11)" fg:x="19151" fg:w="17"/><text x="64.5993%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (22 samples, 0.07%)</title><rect x="64.4064%" y="149" width="0.0739%" height="15" fill="rgb(205,117,38)" fg:x="19168" fg:w="22"/><text x="64.6564%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (20 samples, 0.07%)</title><rect x="64.4871%" y="149" width="0.0672%" height="15" fill="rgb(237,72,25)" fg:x="19192" fg:w="20"/><text x="64.7371%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (12 samples, 0.04%)</title><rect x="64.5543%" y="149" width="0.0403%" height="15" fill="rgb(244,70,9)" fg:x="19212" fg:w="12"/><text x="64.8043%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (22 samples, 0.07%)</title><rect x="64.5980%" y="149" width="0.0739%" height="15" fill="rgb(217,125,39)" fg:x="19225" fg:w="22"/><text x="64.8480%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (12 samples, 0.04%)</title><rect x="64.6752%" y="149" width="0.0403%" height="15" fill="rgb(235,36,10)" fg:x="19248" fg:w="12"/><text x="64.9252%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094c1 (4 samples, 0.01%)</title><rect x="64.7189%" y="149" width="0.0134%" height="15" fill="rgb(251,123,47)" fg:x="19261" fg:w="4"/><text x="64.9689%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (95 samples, 0.32%)</title><rect x="64.7357%" y="149" width="0.3192%" height="15" fill="rgb(221,13,13)" fg:x="19266" fg:w="95"/><text x="64.9857%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d0 (5 samples, 0.02%)</title><rect x="65.0549%" y="149" width="0.0168%" height="15" fill="rgb(238,131,9)" fg:x="19361" fg:w="5"/><text x="65.3049%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (12 samples, 0.04%)</title><rect x="65.0717%" y="149" width="0.0403%" height="15" fill="rgb(211,50,8)" fg:x="19366" fg:w="12"/><text x="65.3217%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (5 samples, 0.02%)</title><rect x="65.1154%" y="149" width="0.0168%" height="15" fill="rgb(245,182,24)" fg:x="19379" fg:w="5"/><text x="65.3654%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (10 samples, 0.03%)</title><rect x="65.1322%" y="149" width="0.0336%" height="15" fill="rgb(242,14,37)" fg:x="19384" fg:w="10"/><text x="65.3822%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (52 samples, 0.17%)</title><rect x="65.1658%" y="149" width="0.1747%" height="15" fill="rgb(246,228,12)" fg:x="19394" fg:w="52"/><text x="65.4158%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (12 samples, 0.04%)</title><rect x="65.3439%" y="149" width="0.0403%" height="15" fill="rgb(213,55,15)" fg:x="19447" fg:w="12"/><text x="65.5939%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (14 samples, 0.05%)</title><rect x="65.3842%" y="149" width="0.0470%" height="15" fill="rgb(209,9,3)" fg:x="19459" fg:w="14"/><text x="65.6342%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (18 samples, 0.06%)</title><rect x="65.4313%" y="149" width="0.0605%" height="15" fill="rgb(230,59,30)" fg:x="19473" fg:w="18"/><text x="65.6813%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (155 samples, 0.52%)</title><rect x="65.4918%" y="149" width="0.5208%" height="15" fill="rgb(209,121,21)" fg:x="19491" fg:w="155"/><text x="65.7418%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (4 samples, 0.01%)</title><rect x="66.0126%" y="149" width="0.0134%" height="15" fill="rgb(220,109,13)" fg:x="19646" fg:w="4"/><text x="66.2626%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (11 samples, 0.04%)</title><rect x="66.0394%" y="149" width="0.0370%" height="15" fill="rgb(232,18,1)" fg:x="19654" fg:w="11"/><text x="66.2894%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (13 samples, 0.04%)</title><rect x="66.0798%" y="149" width="0.0437%" height="15" fill="rgb(215,41,42)" fg:x="19666" fg:w="13"/><text x="66.3298%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b6 (3 samples, 0.01%)</title><rect x="66.1268%" y="149" width="0.0101%" height="15" fill="rgb(224,123,36)" fg:x="19680" fg:w="3"/><text x="66.3768%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (10 samples, 0.03%)</title><rect x="66.1369%" y="149" width="0.0336%" height="15" fill="rgb(240,125,3)" fg:x="19683" fg:w="10"/><text x="66.3869%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (8 samples, 0.03%)</title><rect x="66.1705%" y="149" width="0.0269%" height="15" fill="rgb(205,98,50)" fg:x="19693" fg:w="8"/><text x="66.4205%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (14 samples, 0.05%)</title><rect x="66.2007%" y="149" width="0.0470%" height="15" fill="rgb(205,185,37)" fg:x="19702" fg:w="14"/><text x="66.4507%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,183 samples, 17.42%)</title><rect x="48.8458%" y="165" width="17.4154%" height="15" fill="rgb(238,207,15)" fg:x="14537" fg:w="5183"/><text x="49.0958%" y="175.50">dateo_fun_remover`&lt;alloc::v..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="66.2612%" y="165" width="0.0437%" height="15" fill="rgb(213,199,42)" fg:x="19720" fg:w="13"/><text x="66.5112%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (44 samples, 0.15%)</title><rect x="66.3116%" y="165" width="0.1478%" height="15" fill="rgb(235,201,11)" fg:x="19735" fg:w="44"/><text x="66.5616%" y="175.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (8 samples, 0.03%)</title><rect x="66.4595%" y="165" width="0.0269%" height="15" fill="rgb(207,46,11)" fg:x="19779" fg:w="8"/><text x="66.7095%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (5 samples, 0.02%)</title><rect x="66.4897%" y="133" width="0.0168%" height="15" fill="rgb(241,35,35)" fg:x="19788" fg:w="5"/><text x="66.7397%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (5 samples, 0.02%)</title><rect x="66.4897%" y="117" width="0.0168%" height="15" fill="rgb(243,32,47)" fg:x="19788" fg:w="5"/><text x="66.7397%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="66.4863%" y="149" width="0.0235%" height="15" fill="rgb(247,202,23)" fg:x="19787" fg:w="7"/><text x="66.7363%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.03%)</title><rect x="66.4863%" y="165" width="0.0269%" height="15" fill="rgb(219,102,11)" fg:x="19787" fg:w="8"/><text x="66.7363%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (53 samples, 0.18%)</title><rect x="66.5132%" y="165" width="0.1781%" height="15" fill="rgb(243,110,44)" fg:x="19795" fg:w="53"/><text x="66.7632%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (8 samples, 0.03%)</title><rect x="66.6913%" y="165" width="0.0269%" height="15" fill="rgb(222,74,54)" fg:x="19848" fg:w="8"/><text x="66.9413%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (27 samples, 0.09%)</title><rect x="66.7182%" y="165" width="0.0907%" height="15" fill="rgb(216,99,12)" fg:x="19856" fg:w="27"/><text x="66.9682%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209390 (3 samples, 0.01%)</title><rect x="66.8156%" y="165" width="0.0101%" height="15" fill="rgb(226,22,26)" fg:x="19885" fg:w="3"/><text x="67.0656%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (19 samples, 0.06%)</title><rect x="66.8257%" y="165" width="0.0638%" height="15" fill="rgb(217,163,10)" fg:x="19888" fg:w="19"/><text x="67.0757%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (10 samples, 0.03%)</title><rect x="66.8896%" y="165" width="0.0336%" height="15" fill="rgb(213,25,53)" fg:x="19907" fg:w="10"/><text x="67.1396%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (13 samples, 0.04%)</title><rect x="66.9366%" y="165" width="0.0437%" height="15" fill="rgb(252,105,26)" fg:x="19921" fg:w="13"/><text x="67.1866%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (12 samples, 0.04%)</title><rect x="66.9836%" y="165" width="0.0403%" height="15" fill="rgb(220,39,43)" fg:x="19935" fg:w="12"/><text x="67.2336%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (8 samples, 0.03%)</title><rect x="67.0307%" y="165" width="0.0269%" height="15" fill="rgb(229,68,48)" fg:x="19949" fg:w="8"/><text x="67.2807%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (8 samples, 0.03%)</title><rect x="67.0609%" y="165" width="0.0269%" height="15" fill="rgb(252,8,32)" fg:x="19958" fg:w="8"/><text x="67.3109%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (7 samples, 0.02%)</title><rect x="67.0945%" y="165" width="0.0235%" height="15" fill="rgb(223,20,43)" fg:x="19968" fg:w="7"/><text x="67.3445%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (9 samples, 0.03%)</title><rect x="67.1214%" y="165" width="0.0302%" height="15" fill="rgb(229,81,49)" fg:x="19976" fg:w="9"/><text x="67.3714%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (5 samples, 0.02%)</title><rect x="67.1516%" y="165" width="0.0168%" height="15" fill="rgb(236,28,36)" fg:x="19985" fg:w="5"/><text x="67.4016%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (12 samples, 0.04%)</title><rect x="67.1684%" y="165" width="0.0403%" height="15" fill="rgb(249,185,26)" fg:x="19990" fg:w="12"/><text x="67.4184%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (15 samples, 0.05%)</title><rect x="67.2088%" y="165" width="0.0504%" height="15" fill="rgb(249,174,33)" fg:x="20002" fg:w="15"/><text x="67.4588%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (10 samples, 0.03%)</title><rect x="67.2592%" y="165" width="0.0336%" height="15" fill="rgb(233,201,37)" fg:x="20017" fg:w="10"/><text x="67.5092%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (9 samples, 0.03%)</title><rect x="67.3062%" y="165" width="0.0302%" height="15" fill="rgb(221,78,26)" fg:x="20031" fg:w="9"/><text x="67.5562%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (4 samples, 0.01%)</title><rect x="67.3364%" y="165" width="0.0134%" height="15" fill="rgb(250,127,30)" fg:x="20040" fg:w="4"/><text x="67.5864%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (12 samples, 0.04%)</title><rect x="67.3532%" y="165" width="0.0403%" height="15" fill="rgb(230,49,44)" fg:x="20045" fg:w="12"/><text x="67.6032%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (6 samples, 0.02%)</title><rect x="67.3936%" y="165" width="0.0202%" height="15" fill="rgb(229,67,23)" fg:x="20057" fg:w="6"/><text x="67.6436%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (8 samples, 0.03%)</title><rect x="67.4204%" y="165" width="0.0269%" height="15" fill="rgb(249,83,47)" fg:x="20065" fg:w="8"/><text x="67.6704%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (4 samples, 0.01%)</title><rect x="67.4541%" y="165" width="0.0134%" height="15" fill="rgb(215,43,3)" fg:x="20075" fg:w="4"/><text x="67.7041%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (341 samples, 1.15%)</title><rect x="67.4675%" y="165" width="1.1458%" height="15" fill="rgb(238,154,13)" fg:x="20079" fg:w="341"/><text x="67.7175%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (3 samples, 0.01%)</title><rect x="68.6133%" y="165" width="0.0101%" height="15" fill="rgb(219,56,2)" fg:x="20420" fg:w="3"/><text x="68.8633%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (6 samples, 0.02%)</title><rect x="68.6267%" y="165" width="0.0202%" height="15" fill="rgb(233,0,4)" fg:x="20424" fg:w="6"/><text x="68.8767%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (8 samples, 0.03%)</title><rect x="68.6469%" y="165" width="0.0269%" height="15" fill="rgb(235,30,7)" fg:x="20430" fg:w="8"/><text x="68.8969%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (5 samples, 0.02%)</title><rect x="68.6738%" y="165" width="0.0168%" height="15" fill="rgb(250,79,13)" fg:x="20438" fg:w="5"/><text x="68.9238%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (58 samples, 0.19%)</title><rect x="68.6973%" y="165" width="0.1949%" height="15" fill="rgb(211,146,34)" fg:x="20445" fg:w="58"/><text x="68.9473%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (57 samples, 0.19%)</title><rect x="68.7006%" y="149" width="0.1915%" height="15" fill="rgb(228,22,38)" fg:x="20446" fg:w="57"/><text x="68.9506%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223908 (4 samples, 0.01%)</title><rect x="68.8955%" y="165" width="0.0134%" height="15" fill="rgb(235,168,5)" fg:x="20504" fg:w="4"/><text x="69.1455%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (4 samples, 0.01%)</title><rect x="68.9090%" y="165" width="0.0134%" height="15" fill="rgb(221,155,16)" fg:x="20508" fg:w="4"/><text x="69.1590%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (4 samples, 0.01%)</title><rect x="68.9359%" y="165" width="0.0134%" height="15" fill="rgb(215,215,53)" fg:x="20516" fg:w="4"/><text x="69.1859%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22392b (4 samples, 0.01%)</title><rect x="68.9527%" y="165" width="0.0134%" height="15" fill="rgb(223,4,10)" fg:x="20521" fg:w="4"/><text x="69.2027%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223932 (10 samples, 0.03%)</title><rect x="68.9661%" y="165" width="0.0336%" height="15" fill="rgb(234,103,6)" fg:x="20525" fg:w="10"/><text x="69.2161%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223945 (8 samples, 0.03%)</title><rect x="69.0199%" y="165" width="0.0269%" height="15" fill="rgb(227,97,0)" fg:x="20541" fg:w="8"/><text x="69.2699%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223953 (4 samples, 0.01%)</title><rect x="69.0568%" y="165" width="0.0134%" height="15" fill="rgb(234,150,53)" fg:x="20552" fg:w="4"/><text x="69.3068%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223959 (6 samples, 0.02%)</title><rect x="69.0703%" y="165" width="0.0202%" height="15" fill="rgb(228,201,54)" fg:x="20556" fg:w="6"/><text x="69.3203%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (3 samples, 0.01%)</title><rect x="69.1005%" y="165" width="0.0101%" height="15" fill="rgb(222,22,37)" fg:x="20565" fg:w="3"/><text x="69.3505%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (3 samples, 0.01%)</title><rect x="69.1173%" y="165" width="0.0101%" height="15" fill="rgb(237,53,32)" fg:x="20570" fg:w="3"/><text x="69.3673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223996 (3 samples, 0.01%)</title><rect x="69.1274%" y="165" width="0.0101%" height="15" fill="rgb(233,25,53)" fg:x="20573" fg:w="3"/><text x="69.3774%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223999 (6 samples, 0.02%)</title><rect x="69.1375%" y="165" width="0.0202%" height="15" fill="rgb(210,40,34)" fg:x="20576" fg:w="6"/><text x="69.3875%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (151 samples, 0.51%)</title><rect x="69.1576%" y="165" width="0.5074%" height="15" fill="rgb(241,220,44)" fg:x="20582" fg:w="151"/><text x="69.4076%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a0 (4 samples, 0.01%)</title><rect x="69.6650%" y="165" width="0.0134%" height="15" fill="rgb(235,28,35)" fg:x="20733" fg:w="4"/><text x="69.9150%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (10 samples, 0.03%)</title><rect x="69.6852%" y="165" width="0.0336%" height="15" fill="rgb(210,56,17)" fg:x="20739" fg:w="10"/><text x="69.9352%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (4 samples, 0.01%)</title><rect x="69.7188%" y="165" width="0.0134%" height="15" fill="rgb(224,130,29)" fg:x="20749" fg:w="4"/><text x="69.9688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (217 samples, 0.73%)</title><rect x="69.7322%" y="165" width="0.7291%" height="15" fill="rgb(235,212,8)" fg:x="20753" fg:w="217"/><text x="69.9822%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f6 (3 samples, 0.01%)</title><rect x="70.4613%" y="165" width="0.0101%" height="15" fill="rgb(223,33,50)" fg:x="20970" fg:w="3"/><text x="70.7113%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (13 samples, 0.04%)</title><rect x="70.4714%" y="165" width="0.0437%" height="15" fill="rgb(219,149,13)" fg:x="20973" fg:w="13"/><text x="70.7214%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (8 samples, 0.03%)</title><rect x="70.5218%" y="165" width="0.0269%" height="15" fill="rgb(250,156,29)" fg:x="20988" fg:w="8"/><text x="70.7718%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (14 samples, 0.05%)</title><rect x="70.5487%" y="165" width="0.0470%" height="15" fill="rgb(216,193,19)" fg:x="20996" fg:w="14"/><text x="70.7987%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225ce9 (3 samples, 0.01%)</title><rect x="70.5991%" y="165" width="0.0101%" height="15" fill="rgb(216,135,14)" fg:x="21011" fg:w="3"/><text x="70.8491%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (17 samples, 0.06%)</title><rect x="70.6092%" y="165" width="0.0571%" height="15" fill="rgb(241,47,5)" fg:x="21014" fg:w="17"/><text x="70.8592%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfd (4 samples, 0.01%)</title><rect x="70.6663%" y="165" width="0.0134%" height="15" fill="rgb(233,42,35)" fg:x="21031" fg:w="4"/><text x="70.9163%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (24 samples, 0.08%)</title><rect x="70.6797%" y="165" width="0.0806%" height="15" fill="rgb(231,13,6)" fg:x="21035" fg:w="24"/><text x="70.9297%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (24 samples, 0.08%)</title><rect x="70.7638%" y="165" width="0.0806%" height="15" fill="rgb(207,181,40)" fg:x="21060" fg:w="24"/><text x="71.0138%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (15 samples, 0.05%)</title><rect x="70.8511%" y="165" width="0.0504%" height="15" fill="rgb(254,173,49)" fg:x="21086" fg:w="15"/><text x="71.1011%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (14 samples, 0.05%)</title><rect x="70.9183%" y="165" width="0.0470%" height="15" fill="rgb(221,1,38)" fg:x="21106" fg:w="14"/><text x="71.1683%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (14 samples, 0.05%)</title><rect x="70.9654%" y="165" width="0.0470%" height="15" fill="rgb(206,124,46)" fg:x="21120" fg:w="14"/><text x="71.2154%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (12 samples, 0.04%)</title><rect x="71.0124%" y="165" width="0.0403%" height="15" fill="rgb(249,21,11)" fg:x="21134" fg:w="12"/><text x="71.2624%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (15 samples, 0.05%)</title><rect x="71.0527%" y="165" width="0.0504%" height="15" fill="rgb(222,201,40)" fg:x="21146" fg:w="15"/><text x="71.3027%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (7,056 samples, 23.71%)</title><rect x="47.6530%" y="181" width="23.7089%" height="15" fill="rgb(235,61,29)" fg:x="14182" fg:w="7056"/><text x="47.9030%" y="191.50">dateo_fun_remover`dateo_fun_remover::f..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (77 samples, 0.26%)</title><rect x="71.1031%" y="165" width="0.2587%" height="15" fill="rgb(219,207,3)" fg:x="21161" fg:w="77"/><text x="71.3531%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,156 samples, 3.88%)</title><rect x="71.4862%" y="165" width="3.8843%" height="15" fill="rgb(222,56,46)" fg:x="21275" fg:w="1156"/><text x="71.7362%" y="175.50">date..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d671 (6 samples, 0.02%)</title><rect x="75.3705%" y="101" width="0.0202%" height="15" fill="rgb(239,76,54)" fg:x="22431" fg:w="6"/><text x="75.6205%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ddf (6 samples, 0.02%)</title><rect x="75.3705%" y="85" width="0.0202%" height="15" fill="rgb(231,124,27)" fg:x="22431" fg:w="6"/><text x="75.6205%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (6 samples, 0.02%)</title><rect x="75.3705%" y="69" width="0.0202%" height="15" fill="rgb(249,195,6)" fg:x="22431" fg:w="6"/><text x="75.6205%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (6 samples, 0.02%)</title><rect x="75.3705%" y="53" width="0.0202%" height="15" fill="rgb(237,174,47)" fg:x="22431" fg:w="6"/><text x="75.6205%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (4 samples, 0.01%)</title><rect x="75.3973%" y="101" width="0.0134%" height="15" fill="rgb(206,201,31)" fg:x="22439" fg:w="4"/><text x="75.6473%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="75.3973%" y="85" width="0.0134%" height="15" fill="rgb(231,57,52)" fg:x="22439" fg:w="4"/><text x="75.6473%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.05%)</title><rect x="75.3705%" y="165" width="0.0504%" height="15" fill="rgb(248,177,22)" fg:x="22431" fg:w="15"/><text x="75.6205%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (15 samples, 0.05%)</title><rect x="75.3705%" y="149" width="0.0504%" height="15" fill="rgb(215,211,37)" fg:x="22431" fg:w="15"/><text x="75.6205%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (15 samples, 0.05%)</title><rect x="75.3705%" y="133" width="0.0504%" height="15" fill="rgb(241,128,51)" fg:x="22431" fg:w="15"/><text x="75.6205%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (15 samples, 0.05%)</title><rect x="75.3705%" y="117" width="0.0504%" height="15" fill="rgb(227,165,31)" fg:x="22431" fg:w="15"/><text x="75.6205%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (3 samples, 0.01%)</title><rect x="75.4108%" y="101" width="0.0101%" height="15" fill="rgb(228,167,24)" fg:x="22443" fg:w="3"/><text x="75.6608%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (3 samples, 0.01%)</title><rect x="75.4108%" y="85" width="0.0101%" height="15" fill="rgb(228,143,12)" fg:x="22443" fg:w="3"/><text x="75.6608%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (3 samples, 0.01%)</title><rect x="75.4108%" y="69" width="0.0101%" height="15" fill="rgb(249,149,8)" fg:x="22443" fg:w="3"/><text x="75.6608%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (3 samples, 0.01%)</title><rect x="75.4108%" y="53" width="0.0101%" height="15" fill="rgb(243,35,44)" fg:x="22443" fg:w="3"/><text x="75.6608%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.01%)</title><rect x="75.4108%" y="37" width="0.0101%" height="15" fill="rgb(246,89,9)" fg:x="22443" fg:w="3"/><text x="75.6608%" y="47.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="75.4209%" y="133" width="0.0202%" height="15" fill="rgb(233,213,13)" fg:x="22446" fg:w="6"/><text x="75.6709%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all (7 samples, 0.02%)</title><rect x="75.4209%" y="165" width="0.0235%" height="15" fill="rgb(233,141,41)" fg:x="22446" fg:w="7"/><text x="75.6709%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="75.4209%" y="149" width="0.0235%" height="15" fill="rgb(239,167,4)" fg:x="22446" fg:w="7"/><text x="75.6709%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.07%)</title><rect x="76.0660%" y="133" width="0.0739%" height="15" fill="rgb(209,217,16)" fg:x="22638" fg:w="22"/><text x="76.3160%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (7 samples, 0.02%)</title><rect x="80.1956%" y="101" width="0.0235%" height="15" fill="rgb(219,88,35)" fg:x="23867" fg:w="7"/><text x="80.4456%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209397 (3 samples, 0.01%)</title><rect x="80.2258%" y="101" width="0.0101%" height="15" fill="rgb(220,193,23)" fg:x="23876" fg:w="3"/><text x="80.4758%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (8 samples, 0.03%)</title><rect x="80.2359%" y="101" width="0.0269%" height="15" fill="rgb(230,90,52)" fg:x="23879" fg:w="8"/><text x="80.4859%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (14 samples, 0.05%)</title><rect x="80.2695%" y="101" width="0.0470%" height="15" fill="rgb(252,106,19)" fg:x="23889" fg:w="14"/><text x="80.5195%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (6 samples, 0.02%)</title><rect x="80.3266%" y="101" width="0.0202%" height="15" fill="rgb(206,74,20)" fg:x="23906" fg:w="6"/><text x="80.5766%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (6 samples, 0.02%)</title><rect x="80.3535%" y="101" width="0.0202%" height="15" fill="rgb(230,138,44)" fg:x="23914" fg:w="6"/><text x="80.6035%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d3 (4 samples, 0.01%)</title><rect x="80.3736%" y="101" width="0.0134%" height="15" fill="rgb(235,182,43)" fg:x="23920" fg:w="4"/><text x="80.6236%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (10 samples, 0.03%)</title><rect x="80.3871%" y="101" width="0.0336%" height="15" fill="rgb(242,16,51)" fg:x="23924" fg:w="10"/><text x="80.6371%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (35 samples, 0.12%)</title><rect x="80.4207%" y="101" width="0.1176%" height="15" fill="rgb(248,9,4)" fg:x="23934" fg:w="35"/><text x="80.6707%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (145 samples, 0.49%)</title><rect x="80.5383%" y="101" width="0.4872%" height="15" fill="rgb(210,31,22)" fg:x="23969" fg:w="145"/><text x="80.7883%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (10 samples, 0.03%)</title><rect x="81.0255%" y="101" width="0.0336%" height="15" fill="rgb(239,54,39)" fg:x="24114" fg:w="10"/><text x="81.2755%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (7 samples, 0.02%)</title><rect x="81.0591%" y="101" width="0.0235%" height="15" fill="rgb(230,99,41)" fg:x="24124" fg:w="7"/><text x="81.3091%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (53 samples, 0.18%)</title><rect x="81.0826%" y="101" width="0.1781%" height="15" fill="rgb(253,106,12)" fg:x="24131" fg:w="53"/><text x="81.3326%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (9 samples, 0.03%)</title><rect x="81.2607%" y="101" width="0.0302%" height="15" fill="rgb(213,46,41)" fg:x="24184" fg:w="9"/><text x="81.5107%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (8 samples, 0.03%)</title><rect x="81.2943%" y="101" width="0.0269%" height="15" fill="rgb(215,133,35)" fg:x="24194" fg:w="8"/><text x="81.5443%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (20 samples, 0.07%)</title><rect x="81.3212%" y="101" width="0.0672%" height="15" fill="rgb(213,28,5)" fg:x="24202" fg:w="20"/><text x="81.5712%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (13 samples, 0.04%)</title><rect x="81.3951%" y="101" width="0.0437%" height="15" fill="rgb(215,77,49)" fg:x="24224" fg:w="13"/><text x="81.6451%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (21 samples, 0.07%)</title><rect x="81.4388%" y="101" width="0.0706%" height="15" fill="rgb(248,100,22)" fg:x="24237" fg:w="21"/><text x="81.6888%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20943e (5 samples, 0.02%)</title><rect x="81.5161%" y="101" width="0.0168%" height="15" fill="rgb(208,67,9)" fg:x="24260" fg:w="5"/><text x="81.7661%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (5 samples, 0.02%)</title><rect x="81.5329%" y="101" width="0.0168%" height="15" fill="rgb(219,133,21)" fg:x="24265" fg:w="5"/><text x="81.7829%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (6 samples, 0.02%)</title><rect x="81.5497%" y="101" width="0.0202%" height="15" fill="rgb(246,46,29)" fg:x="24270" fg:w="6"/><text x="81.7997%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (6 samples, 0.02%)</title><rect x="81.5698%" y="101" width="0.0202%" height="15" fill="rgb(246,185,52)" fg:x="24276" fg:w="6"/><text x="81.8198%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (6 samples, 0.02%)</title><rect x="81.5900%" y="101" width="0.0202%" height="15" fill="rgb(252,136,11)" fg:x="24282" fg:w="6"/><text x="81.8400%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (12 samples, 0.04%)</title><rect x="81.6102%" y="101" width="0.0403%" height="15" fill="rgb(219,138,53)" fg:x="24288" fg:w="12"/><text x="81.8602%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (7 samples, 0.02%)</title><rect x="81.6538%" y="101" width="0.0235%" height="15" fill="rgb(211,51,23)" fg:x="24301" fg:w="7"/><text x="81.9038%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (10 samples, 0.03%)</title><rect x="81.6774%" y="101" width="0.0336%" height="15" fill="rgb(247,221,28)" fg:x="24308" fg:w="10"/><text x="81.9274%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (42 samples, 0.14%)</title><rect x="81.7278%" y="101" width="0.1411%" height="15" fill="rgb(251,222,45)" fg:x="24323" fg:w="42"/><text x="81.9778%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (8 samples, 0.03%)</title><rect x="81.8722%" y="101" width="0.0269%" height="15" fill="rgb(217,162,53)" fg:x="24366" fg:w="8"/><text x="82.1222%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (4 samples, 0.01%)</title><rect x="81.8991%" y="101" width="0.0134%" height="15" fill="rgb(229,93,14)" fg:x="24374" fg:w="4"/><text x="82.1491%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (5 samples, 0.02%)</title><rect x="81.9126%" y="101" width="0.0168%" height="15" fill="rgb(209,67,49)" fg:x="24378" fg:w="5"/><text x="82.1626%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (30 samples, 0.10%)</title><rect x="81.9294%" y="101" width="0.1008%" height="15" fill="rgb(213,87,29)" fg:x="24383" fg:w="30"/><text x="82.1794%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (6 samples, 0.02%)</title><rect x="82.0302%" y="101" width="0.0202%" height="15" fill="rgb(205,151,52)" fg:x="24413" fg:w="6"/><text x="82.2802%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (5 samples, 0.02%)</title><rect x="82.0503%" y="101" width="0.0168%" height="15" fill="rgb(253,215,39)" fg:x="24419" fg:w="5"/><text x="82.3003%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (9 samples, 0.03%)</title><rect x="82.0671%" y="101" width="0.0302%" height="15" fill="rgb(221,220,41)" fg:x="24424" fg:w="9"/><text x="82.3171%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (123 samples, 0.41%)</title><rect x="82.0974%" y="101" width="0.4133%" height="15" fill="rgb(218,133,21)" fg:x="24433" fg:w="123"/><text x="82.3474%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (5 samples, 0.02%)</title><rect x="82.5107%" y="101" width="0.0168%" height="15" fill="rgb(221,193,43)" fg:x="24556" fg:w="5"/><text x="82.7607%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (9 samples, 0.03%)</title><rect x="82.5409%" y="101" width="0.0302%" height="15" fill="rgb(240,128,52)" fg:x="24565" fg:w="9"/><text x="82.7909%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (6 samples, 0.02%)</title><rect x="82.5712%" y="101" width="0.0202%" height="15" fill="rgb(253,114,12)" fg:x="24574" fg:w="6"/><text x="82.8212%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (3 samples, 0.01%)</title><rect x="82.5980%" y="101" width="0.0101%" height="15" fill="rgb(215,223,47)" fg:x="24582" fg:w="3"/><text x="82.8480%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (3 samples, 0.01%)</title><rect x="82.6081%" y="101" width="0.0101%" height="15" fill="rgb(248,225,23)" fg:x="24585" fg:w="3"/><text x="82.8581%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,507 samples, 5.06%)</title><rect x="77.5814%" y="117" width="5.0637%" height="15" fill="rgb(250,108,0)" fg:x="23089" fg:w="1507"/><text x="77.8314%" y="127.50">dateo_..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (8 samples, 0.03%)</title><rect x="82.6182%" y="101" width="0.0269%" height="15" fill="rgb(228,208,7)" fg:x="24588" fg:w="8"/><text x="82.8682%" y="111.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (22 samples, 0.07%)</title><rect x="82.6484%" y="117" width="0.0739%" height="15" fill="rgb(244,45,10)" fg:x="24597" fg:w="22"/><text x="82.8984%" y="127.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (3 samples, 0.01%)</title><rect x="82.7224%" y="117" width="0.0101%" height="15" fill="rgb(207,125,25)" fg:x="24619" fg:w="3"/><text x="82.9724%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (20 samples, 0.07%)</title><rect x="82.7324%" y="117" width="0.0672%" height="15" fill="rgb(210,195,18)" fg:x="24622" fg:w="20"/><text x="82.9824%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (6 samples, 0.02%)</title><rect x="82.8064%" y="117" width="0.0202%" height="15" fill="rgb(249,80,12)" fg:x="24644" fg:w="6"/><text x="83.0564%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (9 samples, 0.03%)</title><rect x="82.8299%" y="117" width="0.0302%" height="15" fill="rgb(221,65,9)" fg:x="24651" fg:w="9"/><text x="83.0799%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (7 samples, 0.02%)</title><rect x="82.8601%" y="117" width="0.0235%" height="15" fill="rgb(235,49,36)" fg:x="24660" fg:w="7"/><text x="83.1101%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (8 samples, 0.03%)</title><rect x="82.8904%" y="117" width="0.0269%" height="15" fill="rgb(225,32,20)" fg:x="24669" fg:w="8"/><text x="83.1404%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (12 samples, 0.04%)</title><rect x="82.9240%" y="117" width="0.0403%" height="15" fill="rgb(215,141,46)" fg:x="24679" fg:w="12"/><text x="83.1740%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223746 (3 samples, 0.01%)</title><rect x="82.9676%" y="117" width="0.0101%" height="15" fill="rgb(250,160,47)" fg:x="24692" fg:w="3"/><text x="83.2176%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (7 samples, 0.02%)</title><rect x="82.9777%" y="117" width="0.0235%" height="15" fill="rgb(216,222,40)" fg:x="24695" fg:w="7"/><text x="83.2277%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (8 samples, 0.03%)</title><rect x="83.0046%" y="117" width="0.0269%" height="15" fill="rgb(234,217,39)" fg:x="24703" fg:w="8"/><text x="83.2546%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ef (3 samples, 0.01%)</title><rect x="83.0315%" y="117" width="0.0101%" height="15" fill="rgb(207,178,40)" fg:x="24711" fg:w="3"/><text x="83.2815%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (8 samples, 0.03%)</title><rect x="83.0416%" y="117" width="0.0269%" height="15" fill="rgb(221,136,13)" fg:x="24714" fg:w="8"/><text x="83.2916%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (6 samples, 0.02%)</title><rect x="83.0684%" y="117" width="0.0202%" height="15" fill="rgb(249,199,10)" fg:x="24722" fg:w="6"/><text x="83.3184%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (11 samples, 0.04%)</title><rect x="83.0886%" y="117" width="0.0370%" height="15" fill="rgb(249,222,13)" fg:x="24728" fg:w="11"/><text x="83.3386%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (4 samples, 0.01%)</title><rect x="83.1323%" y="117" width="0.0134%" height="15" fill="rgb(244,185,38)" fg:x="24741" fg:w="4"/><text x="83.3823%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223820 (3 samples, 0.01%)</title><rect x="83.1457%" y="117" width="0.0101%" height="15" fill="rgb(236,202,9)" fg:x="24745" fg:w="3"/><text x="83.3957%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (7 samples, 0.02%)</title><rect x="83.1558%" y="117" width="0.0235%" height="15" fill="rgb(250,229,37)" fg:x="24748" fg:w="7"/><text x="83.4058%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (5 samples, 0.02%)</title><rect x="83.1894%" y="117" width="0.0168%" height="15" fill="rgb(206,174,23)" fg:x="24758" fg:w="5"/><text x="83.4394%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (9 samples, 0.03%)</title><rect x="83.2129%" y="117" width="0.0302%" height="15" fill="rgb(211,33,43)" fg:x="24765" fg:w="9"/><text x="83.4629%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223866 (3 samples, 0.01%)</title><rect x="83.2465%" y="117" width="0.0101%" height="15" fill="rgb(245,58,50)" fg:x="24775" fg:w="3"/><text x="83.4965%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (7 samples, 0.02%)</title><rect x="83.2566%" y="117" width="0.0235%" height="15" fill="rgb(244,68,36)" fg:x="24778" fg:w="7"/><text x="83.5066%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223870 (3 samples, 0.01%)</title><rect x="83.2801%" y="117" width="0.0101%" height="15" fill="rgb(232,229,15)" fg:x="24785" fg:w="3"/><text x="83.5301%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (9 samples, 0.03%)</title><rect x="83.2936%" y="117" width="0.0302%" height="15" fill="rgb(254,30,23)" fg:x="24789" fg:w="9"/><text x="83.5436%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223884 (3 samples, 0.01%)</title><rect x="83.3305%" y="117" width="0.0101%" height="15" fill="rgb(235,160,14)" fg:x="24800" fg:w="3"/><text x="83.5805%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (7 samples, 0.02%)</title><rect x="83.3406%" y="117" width="0.0235%" height="15" fill="rgb(212,155,44)" fg:x="24803" fg:w="7"/><text x="83.5906%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (193 samples, 0.65%)</title><rect x="83.3709%" y="117" width="0.6485%" height="15" fill="rgb(226,2,50)" fg:x="24812" fg:w="193"/><text x="83.6209%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (4 samples, 0.01%)</title><rect x="84.0194%" y="117" width="0.0134%" height="15" fill="rgb(234,177,6)" fg:x="25005" fg:w="4"/><text x="84.2694%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c6 (3 samples, 0.01%)</title><rect x="84.0328%" y="117" width="0.0101%" height="15" fill="rgb(217,24,9)" fg:x="25009" fg:w="3"/><text x="84.2828%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (9 samples, 0.03%)</title><rect x="84.0429%" y="117" width="0.0302%" height="15" fill="rgb(220,13,46)" fg:x="25012" fg:w="9"/><text x="84.2929%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d5 (6 samples, 0.02%)</title><rect x="84.0731%" y="117" width="0.0202%" height="15" fill="rgb(239,221,27)" fg:x="25021" fg:w="6"/><text x="84.3231%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (6 samples, 0.02%)</title><rect x="84.0933%" y="117" width="0.0202%" height="15" fill="rgb(222,198,25)" fg:x="25027" fg:w="6"/><text x="84.3433%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (7 samples, 0.02%)</title><rect x="84.1134%" y="117" width="0.0235%" height="15" fill="rgb(211,99,13)" fg:x="25033" fg:w="7"/><text x="84.3634%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f5 (5 samples, 0.02%)</title><rect x="84.1370%" y="117" width="0.0168%" height="15" fill="rgb(232,111,31)" fg:x="25040" fg:w="5"/><text x="84.3870%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (112 samples, 0.38%)</title><rect x="84.1571%" y="117" width="0.3763%" height="15" fill="rgb(245,82,37)" fg:x="25046" fg:w="112"/><text x="84.4071%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (102 samples, 0.34%)</title><rect x="84.1907%" y="101" width="0.3427%" height="15" fill="rgb(227,149,46)" fg:x="25056" fg:w="102"/><text x="84.4407%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223908 (3 samples, 0.01%)</title><rect x="84.5334%" y="117" width="0.0101%" height="15" fill="rgb(218,36,50)" fg:x="25158" fg:w="3"/><text x="84.7834%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (8 samples, 0.03%)</title><rect x="84.5435%" y="117" width="0.0269%" height="15" fill="rgb(226,80,48)" fg:x="25161" fg:w="8"/><text x="84.7935%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (9 samples, 0.03%)</title><rect x="84.5704%" y="117" width="0.0302%" height="15" fill="rgb(238,224,15)" fg:x="25169" fg:w="9"/><text x="84.8204%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (4 samples, 0.01%)</title><rect x="84.6007%" y="117" width="0.0134%" height="15" fill="rgb(241,136,10)" fg:x="25178" fg:w="4"/><text x="84.8507%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (9 samples, 0.03%)</title><rect x="84.6141%" y="117" width="0.0302%" height="15" fill="rgb(208,32,45)" fg:x="25182" fg:w="9"/><text x="84.8641%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (6 samples, 0.02%)</title><rect x="84.6477%" y="117" width="0.0202%" height="15" fill="rgb(207,135,9)" fg:x="25192" fg:w="6"/><text x="84.8977%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (11 samples, 0.04%)</title><rect x="84.6679%" y="117" width="0.0370%" height="15" fill="rgb(206,86,44)" fg:x="25198" fg:w="11"/><text x="84.9179%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (9 samples, 0.03%)</title><rect x="84.7082%" y="117" width="0.0302%" height="15" fill="rgb(245,177,15)" fg:x="25210" fg:w="9"/><text x="84.9582%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396c (11 samples, 0.04%)</title><rect x="84.7418%" y="117" width="0.0370%" height="15" fill="rgb(206,64,50)" fg:x="25220" fg:w="11"/><text x="84.9918%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (37 samples, 0.12%)</title><rect x="84.7922%" y="117" width="0.1243%" height="15" fill="rgb(234,36,40)" fg:x="25235" fg:w="37"/><text x="85.0422%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399b (4 samples, 0.01%)</title><rect x="84.9199%" y="117" width="0.0134%" height="15" fill="rgb(213,64,8)" fg:x="25273" fg:w="4"/><text x="85.1699%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (76 samples, 0.26%)</title><rect x="84.9333%" y="117" width="0.2554%" height="15" fill="rgb(210,75,36)" fg:x="25277" fg:w="76"/><text x="85.1833%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a0 (4 samples, 0.01%)</title><rect x="85.1887%" y="117" width="0.0134%" height="15" fill="rgb(229,88,21)" fg:x="25353" fg:w="4"/><text x="85.4387%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a2 (3 samples, 0.01%)</title><rect x="85.2021%" y="117" width="0.0101%" height="15" fill="rgb(252,204,47)" fg:x="25357" fg:w="3"/><text x="85.4521%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (9 samples, 0.03%)</title><rect x="85.2122%" y="117" width="0.0302%" height="15" fill="rgb(208,77,27)" fg:x="25360" fg:w="9"/><text x="85.4622%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (7 samples, 0.02%)</title><rect x="85.2424%" y="117" width="0.0235%" height="15" fill="rgb(221,76,26)" fg:x="25369" fg:w="7"/><text x="85.4924%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (117 samples, 0.39%)</title><rect x="85.2660%" y="117" width="0.3931%" height="15" fill="rgb(225,139,18)" fg:x="25376" fg:w="117"/><text x="85.5160%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (5 samples, 0.02%)</title><rect x="85.6658%" y="117" width="0.0168%" height="15" fill="rgb(230,137,11)" fg:x="25495" fg:w="5"/><text x="85.9158%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f6 (3 samples, 0.01%)</title><rect x="85.6826%" y="117" width="0.0101%" height="15" fill="rgb(212,28,1)" fg:x="25500" fg:w="3"/><text x="85.9326%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (7 samples, 0.02%)</title><rect x="85.6927%" y="117" width="0.0235%" height="15" fill="rgb(248,164,17)" fg:x="25503" fg:w="7"/><text x="85.9427%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (12 samples, 0.04%)</title><rect x="85.7162%" y="117" width="0.0403%" height="15" fill="rgb(222,171,42)" fg:x="25510" fg:w="12"/><text x="85.9662%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (13 samples, 0.04%)</title><rect x="85.7565%" y="117" width="0.0437%" height="15" fill="rgb(243,84,45)" fg:x="25522" fg:w="13"/><text x="86.0065%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (12 samples, 0.04%)</title><rect x="85.8069%" y="117" width="0.0403%" height="15" fill="rgb(252,49,23)" fg:x="25537" fg:w="12"/><text x="86.0569%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfd (7 samples, 0.02%)</title><rect x="85.8472%" y="117" width="0.0235%" height="15" fill="rgb(215,19,7)" fg:x="25549" fg:w="7"/><text x="86.0972%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (13 samples, 0.04%)</title><rect x="85.8708%" y="117" width="0.0437%" height="15" fill="rgb(238,81,41)" fg:x="25556" fg:w="13"/><text x="86.1208%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (9 samples, 0.03%)</title><rect x="85.9145%" y="117" width="0.0302%" height="15" fill="rgb(210,199,37)" fg:x="25569" fg:w="9"/><text x="86.1645%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (10 samples, 0.03%)</title><rect x="85.9514%" y="117" width="0.0336%" height="15" fill="rgb(244,192,49)" fg:x="25580" fg:w="10"/><text x="86.2014%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d1d (3 samples, 0.01%)</title><rect x="85.9850%" y="117" width="0.0101%" height="15" fill="rgb(226,211,11)" fg:x="25590" fg:w="3"/><text x="86.2350%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (5 samples, 0.02%)</title><rect x="85.9985%" y="117" width="0.0168%" height="15" fill="rgb(236,162,54)" fg:x="25594" fg:w="5"/><text x="86.2485%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (13 samples, 0.04%)</title><rect x="86.0186%" y="117" width="0.0437%" height="15" fill="rgb(220,229,9)" fg:x="25600" fg:w="13"/><text x="86.2686%" y="127.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (12 samples, 0.04%)</title><rect x="86.0623%" y="117" width="0.0403%" height="15" fill="rgb(250,87,22)" fg:x="25613" fg:w="12"/><text x="86.3123%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,972 samples, 9.99%)</title><rect x="76.1399%" y="133" width="9.9862%" height="15" fill="rgb(239,43,17)" fg:x="22660" fg:w="2972"/><text x="76.3899%" y="143.50">dateo_fun_remo..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.02%)</title><rect x="86.1026%" y="117" width="0.0235%" height="15" fill="rgb(231,177,25)" fg:x="25625" fg:w="7"/><text x="86.3526%" y="127.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (22 samples, 0.07%)</title><rect x="86.1362%" y="133" width="0.0739%" height="15" fill="rgb(219,179,1)" fg:x="25635" fg:w="22"/><text x="86.3862%" y="143.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (10 samples, 0.03%)</title><rect x="86.2101%" y="133" width="0.0336%" height="15" fill="rgb(238,219,53)" fg:x="25657" fg:w="10"/><text x="86.4601%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (3 samples, 0.01%)</title><rect x="86.3378%" y="117" width="0.0101%" height="15" fill="rgb(232,167,36)" fg:x="25695" fg:w="3"/><text x="86.5878%" y="127.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (14 samples, 0.05%)</title><rect x="86.3949%" y="101" width="0.0470%" height="15" fill="rgb(244,19,51)" fg:x="25712" fg:w="14"/><text x="86.6449%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e96 (3 samples, 0.01%)</title><rect x="86.4420%" y="101" width="0.0101%" height="15" fill="rgb(224,6,22)" fg:x="25726" fg:w="3"/><text x="86.6920%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f7b (9 samples, 0.03%)</title><rect x="86.4890%" y="101" width="0.0302%" height="15" fill="rgb(224,145,5)" fg:x="25740" fg:w="9"/><text x="86.7390%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fb6 (4 samples, 0.01%)</title><rect x="86.5428%" y="101" width="0.0134%" height="15" fill="rgb(234,130,49)" fg:x="25756" fg:w="4"/><text x="86.7928%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fd7 (3 samples, 0.01%)</title><rect x="86.5596%" y="101" width="0.0101%" height="15" fill="rgb(254,6,2)" fg:x="25761" fg:w="3"/><text x="86.8096%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (51 samples, 0.17%)</title><rect x="86.5764%" y="101" width="0.1714%" height="15" fill="rgb(208,96,46)" fg:x="25766" fg:w="51"/><text x="86.8264%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a026 (3 samples, 0.01%)</title><rect x="86.7545%" y="101" width="0.0101%" height="15" fill="rgb(239,3,39)" fg:x="25819" fg:w="3"/><text x="87.0045%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b104 (5 samples, 0.02%)</title><rect x="86.7646%" y="101" width="0.0168%" height="15" fill="rgb(233,210,1)" fg:x="25822" fg:w="5"/><text x="87.0146%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b20d (3 samples, 0.01%)</title><rect x="86.8217%" y="101" width="0.0101%" height="15" fill="rgb(244,137,37)" fg:x="25839" fg:w="3"/><text x="87.0717%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b227 (3 samples, 0.01%)</title><rect x="86.8318%" y="101" width="0.0101%" height="15" fill="rgb(240,136,2)" fg:x="25842" fg:w="3"/><text x="87.0818%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c657 (4 samples, 0.01%)</title><rect x="86.8418%" y="85" width="0.0134%" height="15" fill="rgb(239,18,37)" fg:x="25845" fg:w="4"/><text x="87.0918%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c667 (3 samples, 0.01%)</title><rect x="86.8586%" y="85" width="0.0101%" height="15" fill="rgb(218,185,22)" fg:x="25850" fg:w="3"/><text x="87.1086%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c67b (6 samples, 0.02%)</title><rect x="86.8687%" y="85" width="0.0202%" height="15" fill="rgb(225,218,4)" fg:x="25853" fg:w="6"/><text x="87.1187%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a120 (4 samples, 0.01%)</title><rect x="86.9225%" y="69" width="0.0134%" height="15" fill="rgb(230,182,32)" fg:x="25869" fg:w="4"/><text x="87.1725%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1b2 (3 samples, 0.01%)</title><rect x="86.9729%" y="69" width="0.0101%" height="15" fill="rgb(242,56,43)" fg:x="25884" fg:w="3"/><text x="87.2229%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (44 samples, 0.15%)</title><rect x="86.9897%" y="69" width="0.1478%" height="15" fill="rgb(233,99,24)" fg:x="25889" fg:w="44"/><text x="87.2397%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7f0 (3 samples, 0.01%)</title><rect x="87.1678%" y="69" width="0.0101%" height="15" fill="rgb(234,209,42)" fg:x="25942" fg:w="3"/><text x="87.4178%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c84d (3 samples, 0.01%)</title><rect x="87.1779%" y="69" width="0.0101%" height="15" fill="rgb(227,7,12)" fg:x="25945" fg:w="3"/><text x="87.4279%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (5 samples, 0.02%)</title><rect x="87.1879%" y="53" width="0.0168%" height="15" fill="rgb(245,203,43)" fg:x="25948" fg:w="5"/><text x="87.4379%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (4 samples, 0.01%)</title><rect x="87.2215%" y="53" width="0.0134%" height="15" fill="rgb(238,205,33)" fg:x="25958" fg:w="4"/><text x="87.4715%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (31 samples, 0.10%)</title><rect x="87.2350%" y="53" width="0.1042%" height="15" fill="rgb(231,56,7)" fg:x="25962" fg:w="31"/><text x="87.4850%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (4 samples, 0.01%)</title><rect x="87.3391%" y="53" width="0.0134%" height="15" fill="rgb(244,186,29)" fg:x="25993" fg:w="4"/><text x="87.5891%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (14 samples, 0.05%)</title><rect x="87.3559%" y="53" width="0.0470%" height="15" fill="rgb(234,111,31)" fg:x="25998" fg:w="14"/><text x="87.6059%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (8 samples, 0.03%)</title><rect x="87.4097%" y="53" width="0.0269%" height="15" fill="rgb(241,149,10)" fg:x="26014" fg:w="8"/><text x="87.6597%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (3 samples, 0.01%)</title><rect x="87.4366%" y="53" width="0.0101%" height="15" fill="rgb(249,206,44)" fg:x="26022" fg:w="3"/><text x="87.6866%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (4 samples, 0.01%)</title><rect x="87.4601%" y="53" width="0.0134%" height="15" fill="rgb(251,153,30)" fg:x="26029" fg:w="4"/><text x="87.7101%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (21 samples, 0.07%)</title><rect x="87.4870%" y="53" width="0.0706%" height="15" fill="rgb(239,152,38)" fg:x="26037" fg:w="21"/><text x="87.7370%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (10 samples, 0.03%)</title><rect x="87.5609%" y="53" width="0.0336%" height="15" fill="rgb(249,139,47)" fg:x="26059" fg:w="10"/><text x="87.8109%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (21 samples, 0.07%)</title><rect x="87.6046%" y="53" width="0.0706%" height="15" fill="rgb(244,64,35)" fg:x="26072" fg:w="21"/><text x="87.8546%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (3 samples, 0.01%)</title><rect x="87.6751%" y="53" width="0.0101%" height="15" fill="rgb(216,46,15)" fg:x="26093" fg:w="3"/><text x="87.9251%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (155 samples, 0.52%)</title><rect x="87.1879%" y="69" width="0.5208%" height="15" fill="rgb(250,74,19)" fg:x="25948" fg:w="155"/><text x="87.4379%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c85d (3 samples, 0.01%)</title><rect x="87.7087%" y="69" width="0.0101%" height="15" fill="rgb(249,42,33)" fg:x="26103" fg:w="3"/><text x="87.9587%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (17 samples, 0.06%)</title><rect x="87.7289%" y="69" width="0.0571%" height="15" fill="rgb(242,149,17)" fg:x="26109" fg:w="17"/><text x="87.9789%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.06%)</title><rect x="87.7289%" y="53" width="0.0571%" height="15" fill="rgb(244,29,21)" fg:x="26109" fg:w="17"/><text x="87.9789%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223809 (3 samples, 0.01%)</title><rect x="87.8465%" y="53" width="0.0101%" height="15" fill="rgb(220,130,37)" fg:x="26144" fg:w="3"/><text x="88.0965%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223870 (4 samples, 0.01%)</title><rect x="87.8768%" y="53" width="0.0134%" height="15" fill="rgb(211,67,2)" fg:x="26153" fg:w="4"/><text x="88.1268%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (42 samples, 0.14%)</title><rect x="87.8969%" y="53" width="0.1411%" height="15" fill="rgb(235,68,52)" fg:x="26159" fg:w="42"/><text x="88.1469%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238de (3 samples, 0.01%)</title><rect x="88.0448%" y="53" width="0.0101%" height="15" fill="rgb(246,142,3)" fg:x="26203" fg:w="3"/><text x="88.2948%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (20 samples, 0.07%)</title><rect x="88.0683%" y="53" width="0.0672%" height="15" fill="rgb(241,25,7)" fg:x="26210" fg:w="20"/><text x="88.3183%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (20 samples, 0.07%)</title><rect x="88.0683%" y="37" width="0.0672%" height="15" fill="rgb(242,119,39)" fg:x="26210" fg:w="20"/><text x="88.3183%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (6 samples, 0.02%)</title><rect x="88.1691%" y="53" width="0.0202%" height="15" fill="rgb(241,98,45)" fg:x="26240" fg:w="6"/><text x="88.4191%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (10 samples, 0.03%)</title><rect x="88.1926%" y="53" width="0.0336%" height="15" fill="rgb(254,28,30)" fg:x="26247" fg:w="10"/><text x="88.4426%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (39 samples, 0.13%)</title><rect x="88.2363%" y="53" width="0.1310%" height="15" fill="rgb(241,142,54)" fg:x="26260" fg:w="39"/><text x="88.4863%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (175 samples, 0.59%)</title><rect x="87.7894%" y="69" width="0.5880%" height="15" fill="rgb(222,85,15)" fg:x="26127" fg:w="175"/><text x="88.0394%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c88c (5 samples, 0.02%)</title><rect x="88.3841%" y="69" width="0.0168%" height="15" fill="rgb(210,85,47)" fg:x="26304" fg:w="5"/><text x="88.6341%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f9 (3 samples, 0.01%)</title><rect x="88.4076%" y="69" width="0.0101%" height="15" fill="rgb(224,206,25)" fg:x="26311" fg:w="3"/><text x="88.6576%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (3 samples, 0.01%)</title><rect x="88.4177%" y="69" width="0.0101%" height="15" fill="rgb(243,201,19)" fg:x="26314" fg:w="3"/><text x="88.6677%" y="79.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (3 samples, 0.01%)</title><rect x="88.4278%" y="69" width="0.0101%" height="15" fill="rgb(236,59,4)" fg:x="26317" fg:w="3"/><text x="88.6778%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (463 samples, 1.56%)</title><rect x="86.8922%" y="85" width="1.5557%" height="15" fill="rgb(254,179,45)" fg:x="25860" fg:w="463"/><text x="87.1422%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="88.4379%" y="69" width="0.0101%" height="15" fill="rgb(226,14,10)" fg:x="26320" fg:w="3"/><text x="88.6879%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6c2 (4 samples, 0.01%)</title><rect x="88.4648%" y="85" width="0.0134%" height="15" fill="rgb(244,27,41)" fg:x="26328" fg:w="4"/><text x="88.7148%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c736 (6 samples, 0.02%)</title><rect x="88.4782%" y="85" width="0.0202%" height="15" fill="rgb(235,35,32)" fg:x="26332" fg:w="6"/><text x="88.7282%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c740 (3 samples, 0.01%)</title><rect x="88.4984%" y="85" width="0.0101%" height="15" fill="rgb(218,68,31)" fg:x="26338" fg:w="3"/><text x="88.7484%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (499 samples, 1.68%)</title><rect x="86.8418%" y="101" width="1.6767%" height="15" fill="rgb(207,120,37)" fg:x="25845" fg:w="499"/><text x="87.0918%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c750 (3 samples, 0.01%)</title><rect x="88.5085%" y="85" width="0.0101%" height="15" fill="rgb(227,98,0)" fg:x="26341" fg:w="3"/><text x="88.7585%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (649 samples, 2.18%)</title><rect x="86.3479%" y="117" width="2.1807%" height="15" fill="rgb(207,7,3)" fg:x="25698" fg:w="649"/><text x="86.5979%" y="127.50">d..</text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (684 samples, 2.30%)</title><rect x="86.2437%" y="133" width="2.2983%" height="15" fill="rgb(206,98,19)" fg:x="25667" fg:w="684"/><text x="86.4937%" y="143.50">d..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b100 (4 samples, 0.01%)</title><rect x="88.5286%" y="117" width="0.0134%" height="15" fill="rgb(217,5,26)" fg:x="26347" fg:w="4"/><text x="88.7786%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f20470 (136 samples, 0.46%)</title><rect x="88.5488%" y="133" width="0.4570%" height="15" fill="rgb(235,190,38)" fg:x="26353" fg:w="136"/><text x="88.7988%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (246 samples, 0.83%)</title><rect x="89.0057%" y="133" width="0.8266%" height="15" fill="rgb(247,86,24)" fg:x="26489" fg:w="246"/><text x="89.2557%" y="143.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (4 samples, 0.01%)</title><rect x="89.8323%" y="133" width="0.0134%" height="15" fill="rgb(205,101,16)" fg:x="26735" fg:w="4"/><text x="90.0823%" y="143.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (3 samples, 0.01%)</title><rect x="89.8458%" y="133" width="0.0101%" height="15" fill="rgb(246,168,33)" fg:x="26739" fg:w="3"/><text x="90.0958%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (5 samples, 0.02%)</title><rect x="89.8794%" y="133" width="0.0168%" height="15" fill="rgb(231,114,1)" fg:x="26749" fg:w="5"/><text x="90.1294%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (15 samples, 0.05%)</title><rect x="89.8962%" y="133" width="0.0504%" height="15" fill="rgb(207,184,53)" fg:x="26754" fg:w="15"/><text x="90.1462%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (3 samples, 0.01%)</title><rect x="89.9499%" y="133" width="0.0101%" height="15" fill="rgb(224,95,51)" fg:x="26770" fg:w="3"/><text x="90.1999%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (3 samples, 0.01%)</title><rect x="89.9667%" y="133" width="0.0101%" height="15" fill="rgb(212,188,45)" fg:x="26775" fg:w="3"/><text x="90.2167%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (3 samples, 0.01%)</title><rect x="89.9835%" y="133" width="0.0101%" height="15" fill="rgb(223,154,38)" fg:x="26780" fg:w="3"/><text x="90.2335%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (5 samples, 0.02%)</title><rect x="90.0272%" y="133" width="0.0168%" height="15" fill="rgb(251,22,52)" fg:x="26793" fg:w="5"/><text x="90.2772%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (6 samples, 0.02%)</title><rect x="90.0541%" y="133" width="0.0202%" height="15" fill="rgb(229,209,22)" fg:x="26801" fg:w="6"/><text x="90.3041%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (15 samples, 0.05%)</title><rect x="90.0944%" y="133" width="0.0504%" height="15" fill="rgb(234,138,34)" fg:x="26813" fg:w="15"/><text x="90.3444%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (15 samples, 0.05%)</title><rect x="90.1482%" y="133" width="0.0504%" height="15" fill="rgb(212,95,11)" fg:x="26829" fg:w="15"/><text x="90.3982%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (9 samples, 0.03%)</title><rect x="90.1986%" y="133" width="0.0302%" height="15" fill="rgb(240,179,47)" fg:x="26844" fg:w="9"/><text x="90.4486%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e4d (4 samples, 0.01%)</title><rect x="90.2288%" y="133" width="0.0134%" height="15" fill="rgb(240,163,11)" fg:x="26853" fg:w="4"/><text x="90.4788%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (9 samples, 0.03%)</title><rect x="90.2423%" y="133" width="0.0302%" height="15" fill="rgb(236,37,12)" fg:x="26857" fg:w="9"/><text x="90.4923%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (5 samples, 0.02%)</title><rect x="90.2725%" y="133" width="0.0168%" height="15" fill="rgb(232,164,16)" fg:x="26866" fg:w="5"/><text x="90.5225%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e6c (3 samples, 0.01%)</title><rect x="90.2893%" y="133" width="0.0101%" height="15" fill="rgb(244,205,15)" fg:x="26871" fg:w="3"/><text x="90.5393%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (15 samples, 0.05%)</title><rect x="90.2994%" y="133" width="0.0504%" height="15" fill="rgb(223,117,47)" fg:x="26874" fg:w="15"/><text x="90.5494%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (7 samples, 0.02%)</title><rect x="90.3531%" y="133" width="0.0235%" height="15" fill="rgb(244,107,35)" fg:x="26890" fg:w="7"/><text x="90.6031%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (8 samples, 0.03%)</title><rect x="90.3800%" y="133" width="0.0269%" height="15" fill="rgb(205,140,8)" fg:x="26898" fg:w="8"/><text x="90.6300%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,445 samples, 14.94%)</title><rect x="75.4914%" y="149" width="14.9357%" height="15" fill="rgb(228,84,46)" fg:x="22467" fg:w="4445"/><text x="75.7414%" y="159.50">dateo_fun_remover`&lt;allo..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (6 samples, 0.02%)</title><rect x="90.4069%" y="133" width="0.0202%" height="15" fill="rgb(254,188,9)" fg:x="26906" fg:w="6"/><text x="90.6569%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.04%)</title><rect x="90.4271%" y="149" width="0.0370%" height="15" fill="rgb(206,112,54)" fg:x="26912" fg:w="11"/><text x="90.6771%" y="159.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (4 samples, 0.01%)</title><rect x="90.4640%" y="149" width="0.0134%" height="15" fill="rgb(216,84,49)" fg:x="26923" fg:w="4"/><text x="90.7140%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (3 samples, 0.01%)</title><rect x="90.4842%" y="149" width="0.0101%" height="15" fill="rgb(214,194,35)" fg:x="26929" fg:w="3"/><text x="90.7342%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (3 samples, 0.01%)</title><rect x="90.4976%" y="149" width="0.0101%" height="15" fill="rgb(249,28,3)" fg:x="26933" fg:w="3"/><text x="90.7476%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (4,489 samples, 15.08%)</title><rect x="75.4444%" y="165" width="15.0835%" height="15" fill="rgb(222,56,52)" fg:x="22453" fg:w="4489"/><text x="75.6944%" y="175.50">dateo_fun_remover`dateo..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (27 samples, 0.09%)</title><rect x="90.5984%" y="165" width="0.0907%" height="15" fill="rgb(245,217,50)" fg:x="26963" fg:w="27"/><text x="90.8484%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (6 samples, 0.02%)</title><rect x="90.7127%" y="165" width="0.0202%" height="15" fill="rgb(213,201,24)" fg:x="26997" fg:w="6"/><text x="90.9627%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="90.7127%" y="149" width="0.0202%" height="15" fill="rgb(248,116,28)" fg:x="26997" fg:w="6"/><text x="90.9627%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (3 samples, 0.01%)</title><rect x="90.7429%" y="165" width="0.0101%" height="15" fill="rgb(219,72,43)" fg:x="27006" fg:w="3"/><text x="90.9929%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (10 samples, 0.03%)</title><rect x="90.7765%" y="165" width="0.0336%" height="15" fill="rgb(209,138,14)" fg:x="27016" fg:w="10"/><text x="91.0265%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (3 samples, 0.01%)</title><rect x="90.8135%" y="165" width="0.0101%" height="15" fill="rgb(222,18,33)" fg:x="27027" fg:w="3"/><text x="91.0635%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (3 samples, 0.01%)</title><rect x="90.8269%" y="165" width="0.0101%" height="15" fill="rgb(213,199,7)" fg:x="27031" fg:w="3"/><text x="91.0769%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (5 samples, 0.02%)</title><rect x="90.8504%" y="165" width="0.0168%" height="15" fill="rgb(250,110,10)" fg:x="27038" fg:w="5"/><text x="91.1004%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (5,806 samples, 19.51%)</title><rect x="71.3618%" y="181" width="19.5088%" height="15" fill="rgb(248,123,6)" fg:x="21238" fg:w="5806"/><text x="71.6118%" y="191.50">dateo_fun_remover`dateo_fun_rem..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (12 samples, 0.04%)</title><rect x="90.8706%" y="181" width="0.0403%" height="15" fill="rgb(206,91,31)" fg:x="27044" fg:w="12"/><text x="91.1206%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (12 samples, 0.04%)</title><rect x="90.9143%" y="181" width="0.0403%" height="15" fill="rgb(211,154,13)" fg:x="27057" fg:w="12"/><text x="91.1643%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (8 samples, 0.03%)</title><rect x="90.9613%" y="181" width="0.0269%" height="15" fill="rgb(225,148,7)" fg:x="27071" fg:w="8"/><text x="91.2113%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (16 samples, 0.05%)</title><rect x="90.9949%" y="181" width="0.0538%" height="15" fill="rgb(220,160,43)" fg:x="27081" fg:w="16"/><text x="91.2449%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (11 samples, 0.04%)</title><rect x="91.0520%" y="181" width="0.0370%" height="15" fill="rgb(213,52,39)" fg:x="27098" fg:w="11"/><text x="91.3020%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e6c (6 samples, 0.02%)</title><rect x="91.0890%" y="181" width="0.0202%" height="15" fill="rgb(243,137,7)" fg:x="27109" fg:w="6"/><text x="91.3390%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (16 samples, 0.05%)</title><rect x="91.1092%" y="181" width="0.0538%" height="15" fill="rgb(230,79,13)" fg:x="27115" fg:w="16"/><text x="91.3592%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (3 samples, 0.01%)</title><rect x="91.1629%" y="181" width="0.0101%" height="15" fill="rgb(247,105,23)" fg:x="27131" fg:w="3"/><text x="91.4129%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (143 samples, 0.48%)</title><rect x="91.1797%" y="181" width="0.4805%" height="15" fill="rgb(223,179,41)" fg:x="27136" fg:w="143"/><text x="91.4297%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (143 samples, 0.48%)</title><rect x="91.1797%" y="165" width="0.4805%" height="15" fill="rgb(218,9,34)" fg:x="27136" fg:w="143"/><text x="91.4297%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (143 samples, 0.48%)</title><rect x="91.1797%" y="149" width="0.4805%" height="15" fill="rgb(222,106,8)" fg:x="27136" fg:w="143"/><text x="91.4297%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (143 samples, 0.48%)</title><rect x="91.1797%" y="133" width="0.4805%" height="15" fill="rgb(211,220,0)" fg:x="27136" fg:w="143"/><text x="91.4297%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (11 samples, 0.04%)</title><rect x="91.6602%" y="181" width="0.0370%" height="15" fill="rgb(229,52,16)" fg:x="27279" fg:w="11"/><text x="91.9102%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (6 samples, 0.02%)</title><rect x="91.6972%" y="181" width="0.0202%" height="15" fill="rgb(212,155,18)" fg:x="27290" fg:w="6"/><text x="91.9472%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (5 samples, 0.02%)</title><rect x="91.7274%" y="181" width="0.0168%" height="15" fill="rgb(242,21,14)" fg:x="27299" fg:w="5"/><text x="91.9774%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (8 samples, 0.03%)</title><rect x="91.7442%" y="181" width="0.0269%" height="15" fill="rgb(222,19,48)" fg:x="27304" fg:w="8"/><text x="91.9942%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (9 samples, 0.03%)</title><rect x="91.7711%" y="181" width="0.0302%" height="15" fill="rgb(232,45,27)" fg:x="27312" fg:w="9"/><text x="92.0211%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (10 samples, 0.03%)</title><rect x="91.8114%" y="181" width="0.0336%" height="15" fill="rgb(249,103,42)" fg:x="27324" fg:w="10"/><text x="92.0614%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (4 samples, 0.01%)</title><rect x="91.8450%" y="181" width="0.0134%" height="15" fill="rgb(246,81,33)" fg:x="27334" fg:w="4"/><text x="92.0950%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (8 samples, 0.03%)</title><rect x="91.8585%" y="181" width="0.0269%" height="15" fill="rgb(252,33,42)" fg:x="27338" fg:w="8"/><text x="92.1085%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (15 samples, 0.05%)</title><rect x="91.8887%" y="181" width="0.0504%" height="15" fill="rgb(209,212,41)" fg:x="27347" fg:w="15"/><text x="92.1387%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (4 samples, 0.01%)</title><rect x="91.9391%" y="181" width="0.0134%" height="15" fill="rgb(207,154,6)" fg:x="27362" fg:w="4"/><text x="92.1891%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223813 (3 samples, 0.01%)</title><rect x="91.9526%" y="181" width="0.0101%" height="15" fill="rgb(223,64,47)" fg:x="27366" fg:w="3"/><text x="92.2026%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223820 (7 samples, 0.02%)</title><rect x="91.9727%" y="181" width="0.0235%" height="15" fill="rgb(211,161,38)" fg:x="27372" fg:w="7"/><text x="92.2227%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382f (5 samples, 0.02%)</title><rect x="92.0097%" y="181" width="0.0168%" height="15" fill="rgb(219,138,40)" fg:x="27383" fg:w="5"/><text x="92.2597%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (4 samples, 0.01%)</title><rect x="92.0265%" y="181" width="0.0134%" height="15" fill="rgb(241,228,46)" fg:x="27388" fg:w="4"/><text x="92.2765%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223849 (3 samples, 0.01%)</title><rect x="92.0466%" y="181" width="0.0101%" height="15" fill="rgb(223,209,38)" fg:x="27394" fg:w="3"/><text x="92.2966%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (6 samples, 0.02%)</title><rect x="92.0567%" y="181" width="0.0202%" height="15" fill="rgb(236,164,45)" fg:x="27397" fg:w="6"/><text x="92.3067%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223866 (6 samples, 0.02%)</title><rect x="92.0769%" y="181" width="0.0202%" height="15" fill="rgb(231,15,5)" fg:x="27403" fg:w="6"/><text x="92.3269%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223870 (5 samples, 0.02%)</title><rect x="92.1038%" y="181" width="0.0168%" height="15" fill="rgb(252,35,15)" fg:x="27411" fg:w="5"/><text x="92.3538%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (4 samples, 0.01%)</title><rect x="92.1239%" y="181" width="0.0134%" height="15" fill="rgb(248,181,18)" fg:x="27417" fg:w="4"/><text x="92.3739%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (162 samples, 0.54%)</title><rect x="92.1474%" y="181" width="0.5443%" height="15" fill="rgb(233,39,42)" fg:x="27424" fg:w="162"/><text x="92.3974%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (6 samples, 0.02%)</title><rect x="92.6918%" y="181" width="0.0202%" height="15" fill="rgb(238,110,33)" fg:x="27586" fg:w="6"/><text x="92.9418%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (3 samples, 0.01%)</title><rect x="92.7187%" y="181" width="0.0101%" height="15" fill="rgb(233,195,10)" fg:x="27594" fg:w="3"/><text x="92.9687%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (4 samples, 0.01%)</title><rect x="92.7287%" y="181" width="0.0134%" height="15" fill="rgb(254,105,3)" fg:x="27597" fg:w="4"/><text x="92.9787%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (7 samples, 0.02%)</title><rect x="92.7455%" y="181" width="0.0235%" height="15" fill="rgb(221,225,9)" fg:x="27602" fg:w="7"/><text x="92.9955%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (53 samples, 0.18%)</title><rect x="92.7724%" y="181" width="0.1781%" height="15" fill="rgb(224,227,45)" fg:x="27610" fg:w="53"/><text x="93.0224%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (53 samples, 0.18%)</title><rect x="92.7724%" y="165" width="0.1781%" height="15" fill="rgb(229,198,43)" fg:x="27610" fg:w="53"/><text x="93.0224%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223908 (4 samples, 0.01%)</title><rect x="92.9539%" y="181" width="0.0134%" height="15" fill="rgb(206,209,35)" fg:x="27664" fg:w="4"/><text x="93.2039%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (10 samples, 0.03%)</title><rect x="92.9673%" y="181" width="0.0336%" height="15" fill="rgb(245,195,53)" fg:x="27668" fg:w="10"/><text x="93.2173%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (5 samples, 0.02%)</title><rect x="93.0009%" y="181" width="0.0168%" height="15" fill="rgb(240,92,26)" fg:x="27678" fg:w="5"/><text x="93.2509%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (4 samples, 0.01%)</title><rect x="93.0177%" y="181" width="0.0134%" height="15" fill="rgb(207,40,23)" fg:x="27683" fg:w="4"/><text x="93.2677%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223928 (4 samples, 0.01%)</title><rect x="93.0345%" y="181" width="0.0134%" height="15" fill="rgb(223,111,35)" fg:x="27688" fg:w="4"/><text x="93.2845%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (3 samples, 0.01%)</title><rect x="93.0715%" y="181" width="0.0101%" height="15" fill="rgb(229,147,28)" fg:x="27699" fg:w="3"/><text x="93.3215%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (3 samples, 0.01%)</title><rect x="93.0883%" y="181" width="0.0101%" height="15" fill="rgb(211,29,28)" fg:x="27704" fg:w="3"/><text x="93.3383%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (51 samples, 0.17%)</title><rect x="93.1252%" y="181" width="0.1714%" height="15" fill="rgb(228,72,33)" fg:x="27715" fg:w="51"/><text x="93.3752%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (44 samples, 0.15%)</title><rect x="93.3100%" y="181" width="0.1478%" height="15" fill="rgb(205,214,31)" fg:x="27770" fg:w="44"/><text x="93.5600%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (3 samples, 0.01%)</title><rect x="93.4646%" y="181" width="0.0101%" height="15" fill="rgb(224,111,15)" fg:x="27816" fg:w="3"/><text x="93.7146%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (6 samples, 0.02%)</title><rect x="93.4747%" y="181" width="0.0202%" height="15" fill="rgb(253,21,26)" fg:x="27819" fg:w="6"/><text x="93.7247%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (63 samples, 0.21%)</title><rect x="93.4948%" y="181" width="0.2117%" height="15" fill="rgb(245,139,43)" fg:x="27825" fg:w="63"/><text x="93.7448%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239c0 (3 samples, 0.01%)</title><rect x="93.7065%" y="181" width="0.0101%" height="15" fill="rgb(252,170,7)" fg:x="27888" fg:w="3"/><text x="93.9565%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (8 samples, 0.03%)</title><rect x="93.7166%" y="181" width="0.0269%" height="15" fill="rgb(231,118,14)" fg:x="27891" fg:w="8"/><text x="93.9666%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (5 samples, 0.02%)</title><rect x="93.7435%" y="181" width="0.0168%" height="15" fill="rgb(238,83,0)" fg:x="27899" fg:w="5"/><text x="93.9935%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (11 samples, 0.04%)</title><rect x="93.7603%" y="181" width="0.0370%" height="15" fill="rgb(221,39,39)" fg:x="27904" fg:w="11"/><text x="94.0103%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (9 samples, 0.03%)</title><rect x="93.7973%" y="181" width="0.0302%" height="15" fill="rgb(222,119,46)" fg:x="27915" fg:w="9"/><text x="94.0473%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (5 samples, 0.02%)</title><rect x="93.8309%" y="181" width="0.0168%" height="15" fill="rgb(222,165,49)" fg:x="27925" fg:w="5"/><text x="94.0809%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (6 samples, 0.02%)</title><rect x="93.8477%" y="181" width="0.0202%" height="15" fill="rgb(219,113,52)" fg:x="27930" fg:w="6"/><text x="94.0977%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (13 samples, 0.04%)</title><rect x="93.8678%" y="181" width="0.0437%" height="15" fill="rgb(214,7,15)" fg:x="27936" fg:w="13"/><text x="94.1178%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (14 samples, 0.05%)</title><rect x="93.9115%" y="181" width="0.0470%" height="15" fill="rgb(235,32,4)" fg:x="27949" fg:w="14"/><text x="94.1615%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (18,732 samples, 62.94%)</title><rect x="36.4806%" y="197" width="62.9414%" height="15" fill="rgb(238,90,54)" fg:x="10857" fg:w="18732"/><text x="36.7306%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,626 samples, 5.46%)</title><rect x="93.9585%" y="181" width="5.4635%" height="15" fill="rgb(213,208,19)" fg:x="27963" fg:w="1626"/><text x="94.2085%" y="191.50">libsyst..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (15 samples, 0.05%)</title><rect x="99.4221%" y="197" width="0.0504%" height="15" fill="rgb(233,156,4)" fg:x="29589" fg:w="15"/><text x="99.6721%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="99.4725%" y="197" width="0.0202%" height="15" fill="rgb(207,194,5)" fg:x="29604" fg:w="6"/><text x="99.7225%" y="207.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (6 samples, 0.02%)</title><rect x="99.4926%" y="197" width="0.0202%" height="15" fill="rgb(206,111,30)" fg:x="29610" fg:w="6"/><text x="99.7426%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (8 samples, 0.03%)</title><rect x="99.5128%" y="197" width="0.0269%" height="15" fill="rgb(243,70,54)" fg:x="29616" fg:w="8"/><text x="99.7628%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (4 samples, 0.01%)</title><rect x="99.5397%" y="197" width="0.0134%" height="15" fill="rgb(242,28,8)" fg:x="29624" fg:w="4"/><text x="99.7897%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (15 samples, 0.05%)</title><rect x="99.5598%" y="197" width="0.0504%" height="15" fill="rgb(219,106,18)" fg:x="29630" fg:w="15"/><text x="99.8098%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (4 samples, 0.01%)</title><rect x="99.6169%" y="197" width="0.0134%" height="15" fill="rgb(244,222,10)" fg:x="29647" fg:w="4"/><text x="99.8669%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (4 samples, 0.01%)</title><rect x="99.6337%" y="197" width="0.0134%" height="15" fill="rgb(236,179,52)" fg:x="29652" fg:w="4"/><text x="99.8837%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (21 samples, 0.07%)</title><rect x="99.6539%" y="197" width="0.0706%" height="15" fill="rgb(213,23,39)" fg:x="29658" fg:w="21"/><text x="99.9039%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (6 samples, 0.02%)</title><rect x="99.7245%" y="197" width="0.0202%" height="15" fill="rgb(238,48,10)" fg:x="29679" fg:w="6"/><text x="99.9745%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b6d4 (3 samples, 0.01%)</title><rect x="99.7480%" y="181" width="0.0101%" height="15" fill="rgb(251,196,23)" fg:x="29686" fg:w="3"/><text x="99.9980%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b7de (4 samples, 0.01%)</title><rect x="99.7648%" y="181" width="0.0134%" height="15" fill="rgb(250,152,24)" fg:x="29691" fg:w="4"/><text x="100.0148%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a464 (10 samples, 0.03%)</title><rect x="99.7480%" y="197" width="0.0336%" height="15" fill="rgb(209,150,17)" fg:x="29686" fg:w="10"/><text x="99.9980%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20de86 (3 samples, 0.01%)</title><rect x="99.7850%" y="197" width="0.0101%" height="15" fill="rgb(234,202,34)" fg:x="29697" fg:w="3"/><text x="100.0350%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="99.7850%" y="181" width="0.0101%" height="15" fill="rgb(253,148,53)" fg:x="29697" fg:w="3"/><text x="100.0350%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20e006 (7 samples, 0.02%)</title><rect x="99.8018%" y="197" width="0.0235%" height="15" fill="rgb(218,129,16)" fg:x="29702" fg:w="7"/><text x="100.0518%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (9 samples, 0.03%)</title><rect x="99.8387%" y="197" width="0.0302%" height="15" fill="rgb(216,85,19)" fg:x="29713" fg:w="9"/><text x="100.0887%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (5 samples, 0.02%)</title><rect x="99.8757%" y="197" width="0.0168%" height="15" fill="rgb(235,228,7)" fg:x="29724" fg:w="5"/><text x="100.1257%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (3 samples, 0.01%)</title><rect x="99.9194%" y="197" width="0.0101%" height="15" fill="rgb(245,175,0)" fg:x="29737" fg:w="3"/><text x="100.1694%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (7 samples, 0.02%)</title><rect x="99.9294%" y="197" width="0.0235%" height="15" fill="rgb(208,168,36)" fg:x="29740" fg:w="7"/><text x="100.1794%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (5 samples, 0.02%)</title><rect x="99.9530%" y="197" width="0.0168%" height="15" fill="rgb(246,171,24)" fg:x="29747" fg:w="5"/><text x="100.2030%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (29,756 samples, 99.98%)</title><rect x="0.0034%" y="213" width="99.9832%" height="15" fill="rgb(215,142,24)" fg:x="1" fg:w="29756"/><text x="0.2534%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="99.9765%" y="197" width="0.0101%" height="15" fill="rgb(250,187,7)" fg:x="29754" fg:w="3"/><text x="100.2265%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (29,760 samples, 100.00%)</title><rect x="0.0000%" y="229" width="99.9966%" height="15" fill="rgb(228,66,33)" fg:x="0" fg:w="29760"/><text x="0.2500%" y="239.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>all (29,761 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(234,215,21)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="351.50"></text></g><g><title>dyld`start (29,761 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(222,191,20)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="335.50">dyld`start</text></g><g><title>dateo_fun_remover`main (29,761 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(245,79,54)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="319.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (29,761 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(240,10,37)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="303.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (29,761 samples, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(214,192,32)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="287.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (29,761 samples, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(209,36,54)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="271.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (29,761 samples, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(220,10,11)" fg:x="0" fg:w="29761"/><text x="0.2500%" y="255.50">dateo_fun_remover`dateo_fun_remover::main</text></g></svg></svg>