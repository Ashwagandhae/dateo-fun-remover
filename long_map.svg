<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="29696"><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.06%)</title><rect x="0.0000%" y="197" width="0.0606%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="18"/><text x="0.2500%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (19 samples, 0.06%)</title><rect x="0.0606%" y="197" width="0.0640%" height="15" fill="rgb(217,0,24)" fg:x="18" fg:w="19"/><text x="0.3106%" y="207.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (3 samples, 0.01%)</title><rect x="0.1246%" y="197" width="0.0101%" height="15" fill="rgb(221,193,54)" fg:x="37" fg:w="3"/><text x="0.3746%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::test (3 samples, 0.01%)</title><rect x="0.1347%" y="197" width="0.0101%" height="15" fill="rgb(248,212,6)" fg:x="40" fg:w="3"/><text x="0.3847%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (3 samples, 0.01%)</title><rect x="0.1347%" y="181" width="0.0101%" height="15" fill="rgb(208,68,35)" fg:x="40" fg:w="3"/><text x="0.3847%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (175 samples, 0.59%)</title><rect x="40.3388%" y="165" width="0.5893%" height="15" fill="rgb(232,128,0)" fg:x="11979" fg:w="175"/><text x="40.5888%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,251 samples, 41.25%)</title><rect x="0.1717%" y="181" width="41.2547%" height="15" fill="rgb(207,160,47)" fg:x="51" fg:w="12251"/><text x="0.4217%" y="191.50">dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::ite..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (148 samples, 0.50%)</title><rect x="40.9281%" y="165" width="0.4984%" height="15" fill="rgb(228,23,34)" fg:x="12154" fg:w="148"/><text x="41.1781%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (87 samples, 0.29%)</title><rect x="41.4265%" y="181" width="0.2930%" height="15" fill="rgb(218,30,26)" fg:x="12302" fg:w="87"/><text x="41.6765%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (87 samples, 0.29%)</title><rect x="41.4265%" y="165" width="0.2930%" height="15" fill="rgb(220,122,19)" fg:x="12302" fg:w="87"/><text x="41.6765%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.02%)</title><rect x="41.7194%" y="181" width="0.0202%" height="15" fill="rgb(250,228,42)" fg:x="12389" fg:w="6"/><text x="41.9694%" y="191.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (36 samples, 0.12%)</title><rect x="41.7396%" y="181" width="0.1212%" height="15" fill="rgb(240,193,28)" fg:x="12395" fg:w="36"/><text x="41.9896%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (12,531 samples, 42.20%)</title><rect x="0.1448%" y="197" width="42.1976%" height="15" fill="rgb(216,20,37)" fg:x="43" fg:w="12531"/><text x="0.3948%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_interse..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (142 samples, 0.48%)</title><rect x="41.8642%" y="181" width="0.4782%" height="15" fill="rgb(206,188,39)" fg:x="12432" fg:w="142"/><text x="42.1142%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (142 samples, 0.48%)</title><rect x="41.8642%" y="165" width="0.4782%" height="15" fill="rgb(217,207,13)" fg:x="12432" fg:w="142"/><text x="42.1142%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (142 samples, 0.48%)</title><rect x="41.8642%" y="149" width="0.4782%" height="15" fill="rgb(231,73,38)" fg:x="12432" fg:w="142"/><text x="42.1142%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (142 samples, 0.48%)</title><rect x="41.8642%" y="133" width="0.4782%" height="15" fill="rgb(225,20,46)" fg:x="12432" fg:w="142"/><text x="42.1142%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.14%)</title><rect x="44.4201%" y="181" width="0.1414%" height="15" fill="rgb(210,31,41)" fg:x="13191" fg:w="42"/><text x="44.6701%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,852 samples, 6.24%)</title><rect x="44.5616%" y="181" width="6.2365%" height="15" fill="rgb(221,200,47)" fg:x="13233" fg:w="1852"/><text x="44.8116%" y="191.50">dateo_fu..</text></g><g><title>dateo_fun_remover`DYLD-STUB$$memcpy (4 samples, 0.01%)</title><rect x="50.7981%" y="181" width="0.0135%" height="15" fill="rgb(226,26,5)" fg:x="15085" fg:w="4"/><text x="51.0481%" y="191.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (21 samples, 0.07%)</title><rect x="50.8116%" y="181" width="0.0707%" height="15" fill="rgb(249,33,26)" fg:x="15089" fg:w="21"/><text x="51.0616%" y="191.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (8 samples, 0.03%)</title><rect x="50.8823%" y="181" width="0.0269%" height="15" fill="rgb(235,183,28)" fg:x="15110" fg:w="8"/><text x="51.1323%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d794 (3 samples, 0.01%)</title><rect x="50.9092%" y="117" width="0.0101%" height="15" fill="rgb(221,5,38)" fg:x="15118" fg:w="3"/><text x="51.1592%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (3 samples, 0.01%)</title><rect x="50.9092%" y="101" width="0.0101%" height="15" fill="rgb(247,18,42)" fg:x="15118" fg:w="3"/><text x="51.1592%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="50.9092%" y="85" width="0.0101%" height="15" fill="rgb(241,131,45)" fg:x="15118" fg:w="3"/><text x="51.1592%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.08%)</title><rect x="50.9092%" y="181" width="0.0808%" height="15" fill="rgb(249,31,29)" fg:x="15118" fg:w="24"/><text x="51.1592%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (24 samples, 0.08%)</title><rect x="50.9092%" y="165" width="0.0808%" height="15" fill="rgb(225,111,53)" fg:x="15118" fg:w="24"/><text x="51.1592%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (24 samples, 0.08%)</title><rect x="50.9092%" y="149" width="0.0808%" height="15" fill="rgb(238,160,17)" fg:x="15118" fg:w="24"/><text x="51.1592%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (24 samples, 0.08%)</title><rect x="50.9092%" y="133" width="0.0808%" height="15" fill="rgb(214,148,48)" fg:x="15118" fg:w="24"/><text x="51.1592%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (20 samples, 0.07%)</title><rect x="50.9227%" y="117" width="0.0673%" height="15" fill="rgb(232,36,49)" fg:x="15122" fg:w="20"/><text x="51.1727%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (20 samples, 0.07%)</title><rect x="50.9227%" y="101" width="0.0673%" height="15" fill="rgb(209,103,24)" fg:x="15122" fg:w="20"/><text x="51.1727%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (20 samples, 0.07%)</title><rect x="50.9227%" y="85" width="0.0673%" height="15" fill="rgb(229,88,8)" fg:x="15122" fg:w="20"/><text x="51.1727%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (20 samples, 0.07%)</title><rect x="50.9227%" y="69" width="0.0673%" height="15" fill="rgb(213,181,19)" fg:x="15122" fg:w="20"/><text x="51.1727%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (20 samples, 0.07%)</title><rect x="50.9227%" y="53" width="0.0673%" height="15" fill="rgb(254,191,54)" fg:x="15122" fg:w="20"/><text x="51.1727%" y="63.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="50.9968%" y="165" width="0.0135%" height="15" fill="rgb(241,83,37)" fg:x="15144" fg:w="4"/><text x="51.2468%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (4 samples, 0.01%)</title><rect x="51.0136%" y="165" width="0.0135%" height="15" fill="rgb(233,36,39)" fg:x="15149" fg:w="4"/><text x="51.2636%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (6 samples, 0.02%)</title><rect x="51.0271%" y="165" width="0.0202%" height="15" fill="rgb(226,3,54)" fg:x="15153" fg:w="6"/><text x="51.2771%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (3 samples, 0.01%)</title><rect x="51.0372%" y="149" width="0.0101%" height="15" fill="rgb(245,192,40)" fg:x="15156" fg:w="3"/><text x="51.2872%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="51.0372%" y="133" width="0.0101%" height="15" fill="rgb(238,167,29)" fg:x="15156" fg:w="3"/><text x="51.2872%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="51.0372%" y="117" width="0.0101%" height="15" fill="rgb(232,182,51)" fg:x="15156" fg:w="3"/><text x="51.2872%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (17 samples, 0.06%)</title><rect x="50.9968%" y="181" width="0.0572%" height="15" fill="rgb(231,60,39)" fg:x="15144" fg:w="17"/><text x="51.2468%" y="191.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (33 samples, 0.11%)</title><rect x="60.4391%" y="133" width="0.1111%" height="15" fill="rgb(208,69,12)" fg:x="17948" fg:w="33"/><text x="60.6891%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (654 samples, 2.20%)</title><rect x="60.5502%" y="133" width="2.2023%" height="15" fill="rgb(235,93,37)" fg:x="17981" fg:w="654"/><text x="60.8002%" y="143.50">d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (47 samples, 0.16%)</title><rect x="62.7526%" y="133" width="0.1583%" height="15" fill="rgb(213,116,39)" fg:x="18635" fg:w="47"/><text x="63.0026%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,730 samples, 5.83%)</title><rect x="57.3411%" y="149" width="5.8257%" height="15" fill="rgb(222,207,29)" fg:x="17028" fg:w="1730"/><text x="57.5911%" y="159.50">dateo_f..</text></g><g><title>libsystem_m.dylib`trunc (76 samples, 0.26%)</title><rect x="62.9108%" y="133" width="0.2559%" height="15" fill="rgb(206,96,30)" fg:x="18682" fg:w="76"/><text x="63.1608%" y="143.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (12 samples, 0.04%)</title><rect x="63.1668%" y="149" width="0.0404%" height="15" fill="rgb(218,138,4)" fg:x="18758" fg:w="12"/><text x="63.4168%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (469 samples, 1.58%)</title><rect x="63.2105%" y="149" width="1.5793%" height="15" fill="rgb(250,191,14)" fg:x="18771" fg:w="469"/><text x="63.4605%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (42 samples, 0.14%)</title><rect x="64.7899%" y="149" width="0.1414%" height="15" fill="rgb(239,60,40)" fg:x="19240" fg:w="42"/><text x="65.0399%" y="159.50"></text></g><g><title>libsystem_m.dylib`trunc (23 samples, 0.08%)</title><rect x="64.9313%" y="149" width="0.0775%" height="15" fill="rgb(206,27,48)" fg:x="19282" fg:w="23"/><text x="65.1813%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (12 samples, 0.04%)</title><rect x="65.0088%" y="149" width="0.0404%" height="15" fill="rgb(225,35,8)" fg:x="19305" fg:w="12"/><text x="65.2588%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209395 (3 samples, 0.01%)</title><rect x="65.0492%" y="149" width="0.0101%" height="15" fill="rgb(250,213,24)" fg:x="19317" fg:w="3"/><text x="65.2992%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (17 samples, 0.06%)</title><rect x="65.0593%" y="149" width="0.0572%" height="15" fill="rgb(247,123,22)" fg:x="19320" fg:w="17"/><text x="65.3093%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (20 samples, 0.07%)</title><rect x="65.1165%" y="149" width="0.0673%" height="15" fill="rgb(231,138,38)" fg:x="19337" fg:w="20"/><text x="65.3665%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (16 samples, 0.05%)</title><rect x="65.1839%" y="149" width="0.0539%" height="15" fill="rgb(231,145,46)" fg:x="19357" fg:w="16"/><text x="65.4339%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (19 samples, 0.06%)</title><rect x="65.2377%" y="149" width="0.0640%" height="15" fill="rgb(251,118,11)" fg:x="19373" fg:w="19"/><text x="65.4877%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (22 samples, 0.07%)</title><rect x="65.3017%" y="149" width="0.0741%" height="15" fill="rgb(217,147,25)" fg:x="19392" fg:w="22"/><text x="65.5517%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (51 samples, 0.17%)</title><rect x="65.3758%" y="149" width="0.1717%" height="15" fill="rgb(247,81,37)" fg:x="19414" fg:w="51"/><text x="65.6258%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (238 samples, 0.80%)</title><rect x="65.5509%" y="149" width="0.8015%" height="15" fill="rgb(209,12,38)" fg:x="19466" fg:w="238"/><text x="65.8009%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (17 samples, 0.06%)</title><rect x="66.3524%" y="149" width="0.0572%" height="15" fill="rgb(227,1,9)" fg:x="19704" fg:w="17"/><text x="66.6024%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (18 samples, 0.06%)</title><rect x="66.4096%" y="149" width="0.0606%" height="15" fill="rgb(248,47,43)" fg:x="19721" fg:w="18"/><text x="66.6596%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (71 samples, 0.24%)</title><rect x="66.4702%" y="149" width="0.2391%" height="15" fill="rgb(221,10,30)" fg:x="19739" fg:w="71"/><text x="66.7202%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (15 samples, 0.05%)</title><rect x="66.7093%" y="149" width="0.0505%" height="15" fill="rgb(210,229,1)" fg:x="19810" fg:w="15"/><text x="66.9593%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (12 samples, 0.04%)</title><rect x="66.7598%" y="149" width="0.0404%" height="15" fill="rgb(222,148,37)" fg:x="19825" fg:w="12"/><text x="67.0098%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (26 samples, 0.09%)</title><rect x="66.8002%" y="149" width="0.0876%" height="15" fill="rgb(234,67,33)" fg:x="19837" fg:w="26"/><text x="67.0502%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (20 samples, 0.07%)</title><rect x="66.8912%" y="149" width="0.0673%" height="15" fill="rgb(247,98,35)" fg:x="19864" fg:w="20"/><text x="67.1412%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (7 samples, 0.02%)</title><rect x="66.9619%" y="149" width="0.0236%" height="15" fill="rgb(247,138,52)" fg:x="19885" fg:w="7"/><text x="67.2119%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (7 samples, 0.02%)</title><rect x="66.9956%" y="149" width="0.0236%" height="15" fill="rgb(213,79,30)" fg:x="19895" fg:w="7"/><text x="67.2456%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (16 samples, 0.05%)</title><rect x="67.0191%" y="149" width="0.0539%" height="15" fill="rgb(246,177,23)" fg:x="19902" fg:w="16"/><text x="67.2691%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (18 samples, 0.06%)</title><rect x="67.0730%" y="149" width="0.0606%" height="15" fill="rgb(230,62,27)" fg:x="19918" fg:w="18"/><text x="67.3230%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (15 samples, 0.05%)</title><rect x="67.1336%" y="149" width="0.0505%" height="15" fill="rgb(216,154,8)" fg:x="19936" fg:w="15"/><text x="67.3836%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (18 samples, 0.06%)</title><rect x="67.1841%" y="149" width="0.0606%" height="15" fill="rgb(244,35,45)" fg:x="19951" fg:w="18"/><text x="67.4341%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (19 samples, 0.06%)</title><rect x="67.2481%" y="149" width="0.0640%" height="15" fill="rgb(251,115,12)" fg:x="19970" fg:w="19"/><text x="67.4981%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (15 samples, 0.05%)</title><rect x="67.3121%" y="149" width="0.0505%" height="15" fill="rgb(240,54,50)" fg:x="19989" fg:w="15"/><text x="67.5621%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094c1 (11 samples, 0.04%)</title><rect x="67.3693%" y="149" width="0.0370%" height="15" fill="rgb(233,84,52)" fg:x="20006" fg:w="11"/><text x="67.6193%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (167 samples, 0.56%)</title><rect x="67.4131%" y="149" width="0.5624%" height="15" fill="rgb(207,117,47)" fg:x="20019" fg:w="167"/><text x="67.6631%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (9 samples, 0.03%)</title><rect x="67.9789%" y="149" width="0.0303%" height="15" fill="rgb(249,43,39)" fg:x="20187" fg:w="9"/><text x="68.2289%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (11 samples, 0.04%)</title><rect x="68.0159%" y="149" width="0.0370%" height="15" fill="rgb(209,38,44)" fg:x="20198" fg:w="11"/><text x="68.2659%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (43 samples, 0.14%)</title><rect x="68.0529%" y="149" width="0.1448%" height="15" fill="rgb(236,212,23)" fg:x="20209" fg:w="43"/><text x="68.3029%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (8 samples, 0.03%)</title><rect x="68.1977%" y="149" width="0.0269%" height="15" fill="rgb(242,79,21)" fg:x="20252" fg:w="8"/><text x="68.4477%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (10 samples, 0.03%)</title><rect x="68.2247%" y="149" width="0.0337%" height="15" fill="rgb(211,96,35)" fg:x="20260" fg:w="10"/><text x="68.4747%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (10 samples, 0.03%)</title><rect x="68.2584%" y="149" width="0.0337%" height="15" fill="rgb(253,215,40)" fg:x="20270" fg:w="10"/><text x="68.5084%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (140 samples, 0.47%)</title><rect x="68.2920%" y="149" width="0.4714%" height="15" fill="rgb(211,81,21)" fg:x="20280" fg:w="140"/><text x="68.5420%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20955a (8 samples, 0.03%)</title><rect x="68.7668%" y="149" width="0.0269%" height="15" fill="rgb(208,190,38)" fg:x="20421" fg:w="8"/><text x="69.0168%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209568 (5 samples, 0.02%)</title><rect x="68.8005%" y="149" width="0.0168%" height="15" fill="rgb(235,213,38)" fg:x="20431" fg:w="5"/><text x="69.0505%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (19 samples, 0.06%)</title><rect x="68.8207%" y="149" width="0.0640%" height="15" fill="rgb(237,122,38)" fg:x="20437" fg:w="19"/><text x="69.0707%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (9 samples, 0.03%)</title><rect x="68.8847%" y="149" width="0.0303%" height="15" fill="rgb(244,218,35)" fg:x="20456" fg:w="9"/><text x="69.1347%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (11 samples, 0.04%)</title><rect x="68.9150%" y="149" width="0.0370%" height="15" fill="rgb(240,68,47)" fg:x="20465" fg:w="11"/><text x="69.1650%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (7 samples, 0.02%)</title><rect x="68.9520%" y="149" width="0.0236%" height="15" fill="rgb(210,16,53)" fg:x="20476" fg:w="7"/><text x="69.2020%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (9 samples, 0.03%)</title><rect x="68.9756%" y="149" width="0.0303%" height="15" fill="rgb(235,124,12)" fg:x="20483" fg:w="9"/><text x="69.2256%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,005 samples, 16.85%)</title><rect x="52.1619%" y="165" width="16.8541%" height="15" fill="rgb(224,169,11)" fg:x="15490" fg:w="5005"/><text x="52.4119%" y="175.50">dateo_fun_remover`&lt;alloc::..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.05%)</title><rect x="69.0160%" y="165" width="0.0471%" height="15" fill="rgb(250,166,2)" fg:x="20495" fg:w="14"/><text x="69.2660%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (30 samples, 0.10%)</title><rect x="69.0632%" y="165" width="0.1010%" height="15" fill="rgb(242,216,29)" fg:x="20509" fg:w="30"/><text x="69.3132%" y="175.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (9 samples, 0.03%)</title><rect x="69.1642%" y="165" width="0.0303%" height="15" fill="rgb(230,116,27)" fg:x="20539" fg:w="9"/><text x="69.4142%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="69.1945%" y="149" width="0.0202%" height="15" fill="rgb(228,99,48)" fg:x="20548" fg:w="6"/><text x="69.4445%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (6 samples, 0.02%)</title><rect x="69.1945%" y="133" width="0.0202%" height="15" fill="rgb(253,11,6)" fg:x="20548" fg:w="6"/><text x="69.4445%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (6 samples, 0.02%)</title><rect x="69.1945%" y="117" width="0.0202%" height="15" fill="rgb(247,143,39)" fg:x="20548" fg:w="6"/><text x="69.4445%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (3 samples, 0.01%)</title><rect x="69.2046%" y="101" width="0.0101%" height="15" fill="rgb(236,97,10)" fg:x="20551" fg:w="3"/><text x="69.4546%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="69.1945%" y="165" width="0.0236%" height="15" fill="rgb(233,208,19)" fg:x="20548" fg:w="7"/><text x="69.4445%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (55 samples, 0.19%)</title><rect x="69.2181%" y="165" width="0.1852%" height="15" fill="rgb(216,164,2)" fg:x="20555" fg:w="55"/><text x="69.4681%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (6 samples, 0.02%)</title><rect x="69.4033%" y="165" width="0.0202%" height="15" fill="rgb(220,129,5)" fg:x="20610" fg:w="6"/><text x="69.6533%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (14 samples, 0.05%)</title><rect x="69.4235%" y="165" width="0.0471%" height="15" fill="rgb(242,17,10)" fg:x="20616" fg:w="14"/><text x="69.6735%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (16 samples, 0.05%)</title><rect x="69.4740%" y="165" width="0.0539%" height="15" fill="rgb(242,107,0)" fg:x="20631" fg:w="16"/><text x="69.7240%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (14 samples, 0.05%)</title><rect x="69.5312%" y="165" width="0.0471%" height="15" fill="rgb(251,28,31)" fg:x="20648" fg:w="14"/><text x="69.7812%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (3 samples, 0.01%)</title><rect x="69.5784%" y="165" width="0.0101%" height="15" fill="rgb(233,223,10)" fg:x="20662" fg:w="3"/><text x="69.8284%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (6 samples, 0.02%)</title><rect x="69.5919%" y="165" width="0.0202%" height="15" fill="rgb(215,21,27)" fg:x="20666" fg:w="6"/><text x="69.8419%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (6 samples, 0.02%)</title><rect x="69.6121%" y="165" width="0.0202%" height="15" fill="rgb(232,23,21)" fg:x="20672" fg:w="6"/><text x="69.8621%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (11 samples, 0.04%)</title><rect x="69.6424%" y="165" width="0.0370%" height="15" fill="rgb(244,5,23)" fg:x="20681" fg:w="11"/><text x="69.8924%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (11 samples, 0.04%)</title><rect x="69.6794%" y="165" width="0.0370%" height="15" fill="rgb(226,81,46)" fg:x="20692" fg:w="11"/><text x="69.9294%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (13 samples, 0.04%)</title><rect x="69.7198%" y="165" width="0.0438%" height="15" fill="rgb(247,70,30)" fg:x="20704" fg:w="13"/><text x="69.9698%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (5 samples, 0.02%)</title><rect x="69.7703%" y="165" width="0.0168%" height="15" fill="rgb(212,68,19)" fg:x="20719" fg:w="5"/><text x="70.0203%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (4 samples, 0.01%)</title><rect x="69.7939%" y="165" width="0.0135%" height="15" fill="rgb(240,187,13)" fg:x="20726" fg:w="4"/><text x="70.0439%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (9 samples, 0.03%)</title><rect x="69.8074%" y="165" width="0.0303%" height="15" fill="rgb(223,113,26)" fg:x="20730" fg:w="9"/><text x="70.0574%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (4 samples, 0.01%)</title><rect x="69.8478%" y="165" width="0.0135%" height="15" fill="rgb(206,192,2)" fg:x="20742" fg:w="4"/><text x="70.0978%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (6 samples, 0.02%)</title><rect x="69.8714%" y="165" width="0.0202%" height="15" fill="rgb(241,108,4)" fg:x="20749" fg:w="6"/><text x="70.1214%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (7 samples, 0.02%)</title><rect x="69.8949%" y="165" width="0.0236%" height="15" fill="rgb(247,173,49)" fg:x="20756" fg:w="7"/><text x="70.1449%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (5 samples, 0.02%)</title><rect x="69.9219%" y="165" width="0.0168%" height="15" fill="rgb(224,114,35)" fg:x="20764" fg:w="5"/><text x="70.1719%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (14 samples, 0.05%)</title><rect x="69.9421%" y="165" width="0.0471%" height="15" fill="rgb(245,159,27)" fg:x="20770" fg:w="14"/><text x="70.1921%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (308 samples, 1.04%)</title><rect x="69.9926%" y="165" width="1.0372%" height="15" fill="rgb(245,172,44)" fg:x="20785" fg:w="308"/><text x="70.2426%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (3 samples, 0.01%)</title><rect x="71.0298%" y="165" width="0.0101%" height="15" fill="rgb(236,23,11)" fg:x="21093" fg:w="3"/><text x="71.2798%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (7 samples, 0.02%)</title><rect x="71.0399%" y="165" width="0.0236%" height="15" fill="rgb(205,117,38)" fg:x="21096" fg:w="7"/><text x="71.2899%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (5 samples, 0.02%)</title><rect x="71.0634%" y="165" width="0.0168%" height="15" fill="rgb(237,72,25)" fg:x="21103" fg:w="5"/><text x="71.3134%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (9 samples, 0.03%)</title><rect x="71.0803%" y="165" width="0.0303%" height="15" fill="rgb(244,70,9)" fg:x="21108" fg:w="9"/><text x="71.3303%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (65 samples, 0.22%)</title><rect x="71.1106%" y="165" width="0.2189%" height="15" fill="rgb(217,125,39)" fg:x="21117" fg:w="65"/><text x="71.3606%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (65 samples, 0.22%)</title><rect x="71.1106%" y="149" width="0.2189%" height="15" fill="rgb(235,36,10)" fg:x="21117" fg:w="65"/><text x="71.3606%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (3 samples, 0.01%)</title><rect x="71.3362%" y="165" width="0.0101%" height="15" fill="rgb(251,123,47)" fg:x="21184" fg:w="3"/><text x="71.5862%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (9 samples, 0.03%)</title><rect x="71.3463%" y="165" width="0.0303%" height="15" fill="rgb(221,13,13)" fg:x="21187" fg:w="9"/><text x="71.5963%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22392b (5 samples, 0.02%)</title><rect x="71.3766%" y="165" width="0.0168%" height="15" fill="rgb(238,131,9)" fg:x="21196" fg:w="5"/><text x="71.6266%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223932 (5 samples, 0.02%)</title><rect x="71.3935%" y="165" width="0.0168%" height="15" fill="rgb(211,50,8)" fg:x="21201" fg:w="5"/><text x="71.6435%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223945 (8 samples, 0.03%)</title><rect x="71.4170%" y="165" width="0.0269%" height="15" fill="rgb(245,182,24)" fg:x="21208" fg:w="8"/><text x="71.6670%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223959 (8 samples, 0.03%)</title><rect x="71.4507%" y="165" width="0.0269%" height="15" fill="rgb(242,14,37)" fg:x="21218" fg:w="8"/><text x="71.7007%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223962 (5 samples, 0.02%)</title><rect x="71.4776%" y="165" width="0.0168%" height="15" fill="rgb(246,228,12)" fg:x="21226" fg:w="5"/><text x="71.7276%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (5 samples, 0.02%)</title><rect x="71.4945%" y="165" width="0.0168%" height="15" fill="rgb(213,55,15)" fg:x="21231" fg:w="5"/><text x="71.7445%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223999 (6 samples, 0.02%)</title><rect x="71.5180%" y="165" width="0.0202%" height="15" fill="rgb(209,9,3)" fg:x="21238" fg:w="6"/><text x="71.7680%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (125 samples, 0.42%)</title><rect x="71.5383%" y="165" width="0.4209%" height="15" fill="rgb(230,59,30)" fg:x="21244" fg:w="125"/><text x="71.7883%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (18 samples, 0.06%)</title><rect x="71.9659%" y="165" width="0.0606%" height="15" fill="rgb(209,121,21)" fg:x="21371" fg:w="18"/><text x="72.2159%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (20 samples, 0.07%)</title><rect x="72.0265%" y="165" width="0.0673%" height="15" fill="rgb(220,109,13)" fg:x="21389" fg:w="20"/><text x="72.2765%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (180 samples, 0.61%)</title><rect x="72.0939%" y="165" width="0.6061%" height="15" fill="rgb(232,18,1)" fg:x="21409" fg:w="180"/><text x="72.3439%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (8 samples, 0.03%)</title><rect x="72.7034%" y="165" width="0.0269%" height="15" fill="rgb(215,41,42)" fg:x="21590" fg:w="8"/><text x="72.9534%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (8 samples, 0.03%)</title><rect x="72.7303%" y="165" width="0.0269%" height="15" fill="rgb(224,123,36)" fg:x="21598" fg:w="8"/><text x="72.9803%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (14 samples, 0.05%)</title><rect x="72.7573%" y="165" width="0.0471%" height="15" fill="rgb(240,125,3)" fg:x="21606" fg:w="14"/><text x="73.0073%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (18 samples, 0.06%)</title><rect x="72.8044%" y="165" width="0.0606%" height="15" fill="rgb(205,98,50)" fg:x="21620" fg:w="18"/><text x="73.0544%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfd (3 samples, 0.01%)</title><rect x="72.8684%" y="165" width="0.0101%" height="15" fill="rgb(205,185,37)" fg:x="21639" fg:w="3"/><text x="73.1184%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (17 samples, 0.06%)</title><rect x="72.8785%" y="165" width="0.0572%" height="15" fill="rgb(238,207,15)" fg:x="21642" fg:w="17"/><text x="73.1285%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (14 samples, 0.05%)</title><rect x="72.9357%" y="165" width="0.0471%" height="15" fill="rgb(213,199,42)" fg:x="21659" fg:w="14"/><text x="73.1857%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (13 samples, 0.04%)</title><rect x="72.9829%" y="165" width="0.0438%" height="15" fill="rgb(235,201,11)" fg:x="21673" fg:w="13"/><text x="73.2329%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (19 samples, 0.06%)</title><rect x="73.0334%" y="165" width="0.0640%" height="15" fill="rgb(207,46,11)" fg:x="21688" fg:w="19"/><text x="73.2834%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (12 samples, 0.04%)</title><rect x="73.1008%" y="165" width="0.0404%" height="15" fill="rgb(241,35,35)" fg:x="21708" fg:w="12"/><text x="73.3508%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (10 samples, 0.03%)</title><rect x="73.1412%" y="165" width="0.0337%" height="15" fill="rgb(243,32,47)" fg:x="21720" fg:w="10"/><text x="73.3912%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.06%)</title><rect x="73.1748%" y="165" width="0.0572%" height="15" fill="rgb(247,202,23)" fg:x="21730" fg:w="17"/><text x="73.4248%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (6,652 samples, 22.40%)</title><rect x="51.0540%" y="181" width="22.4003%" height="15" fill="rgb(219,102,11)" fg:x="15161" fg:w="6652"/><text x="51.3040%" y="191.50">dateo_fun_remover`dateo_fun_remover..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (66 samples, 0.22%)</title><rect x="73.2321%" y="165" width="0.2223%" height="15" fill="rgb(243,110,44)" fg:x="21747" fg:w="66"/><text x="73.4821%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (996 samples, 3.35%)</title><rect x="73.5385%" y="165" width="3.3540%" height="15" fill="rgb(222,74,54)" fg:x="21838" fg:w="996"/><text x="73.7885%" y="175.50">dat..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d671 (4 samples, 0.01%)</title><rect x="76.8959%" y="101" width="0.0135%" height="15" fill="rgb(216,99,12)" fg:x="22835" fg:w="4"/><text x="77.1459%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ddf (3 samples, 0.01%)</title><rect x="76.8992%" y="85" width="0.0101%" height="15" fill="rgb(226,22,26)" fg:x="22836" fg:w="3"/><text x="77.1492%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (3 samples, 0.01%)</title><rect x="76.8992%" y="69" width="0.0101%" height="15" fill="rgb(217,163,10)" fg:x="22836" fg:w="3"/><text x="77.1492%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (3 samples, 0.01%)</title><rect x="76.8992%" y="53" width="0.0101%" height="15" fill="rgb(213,25,53)" fg:x="22836" fg:w="3"/><text x="77.1492%" y="63.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="76.8925%" y="165" width="0.0236%" height="15" fill="rgb(252,105,26)" fg:x="22834" fg:w="7"/><text x="77.1425%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="76.8925%" y="149" width="0.0236%" height="15" fill="rgb(220,39,43)" fg:x="22834" fg:w="7"/><text x="77.1425%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (6 samples, 0.02%)</title><rect x="76.8959%" y="133" width="0.0202%" height="15" fill="rgb(229,68,48)" fg:x="22835" fg:w="6"/><text x="77.1459%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (6 samples, 0.02%)</title><rect x="76.8959%" y="117" width="0.0202%" height="15" fill="rgb(252,8,32)" fg:x="22835" fg:w="6"/><text x="77.1459%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.08%)</title><rect x="77.4044%" y="133" width="0.0842%" height="15" fill="rgb(223,20,43)" fg:x="22986" fg:w="25"/><text x="77.6544%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (8 samples, 0.03%)</title><rect x="81.2534%" y="101" width="0.0269%" height="15" fill="rgb(229,81,49)" fg:x="24129" fg:w="8"/><text x="81.5034%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (9 samples, 0.03%)</title><rect x="81.2803%" y="101" width="0.0303%" height="15" fill="rgb(236,28,36)" fg:x="24137" fg:w="9"/><text x="81.5303%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (8 samples, 0.03%)</title><rect x="81.3140%" y="101" width="0.0269%" height="15" fill="rgb(249,185,26)" fg:x="24147" fg:w="8"/><text x="81.5640%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (3 samples, 0.01%)</title><rect x="81.3510%" y="101" width="0.0101%" height="15" fill="rgb(249,174,33)" fg:x="24158" fg:w="3"/><text x="81.6010%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (5 samples, 0.02%)</title><rect x="81.3645%" y="101" width="0.0168%" height="15" fill="rgb(233,201,37)" fg:x="24162" fg:w="5"/><text x="81.6145%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (8 samples, 0.03%)</title><rect x="81.3847%" y="101" width="0.0269%" height="15" fill="rgb(221,78,26)" fg:x="24168" fg:w="8"/><text x="81.6347%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (26 samples, 0.09%)</title><rect x="81.4116%" y="101" width="0.0876%" height="15" fill="rgb(250,127,30)" fg:x="24176" fg:w="26"/><text x="81.6616%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (151 samples, 0.51%)</title><rect x="81.4992%" y="101" width="0.5085%" height="15" fill="rgb(230,49,44)" fg:x="24202" fg:w="151"/><text x="81.7492%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (13 samples, 0.04%)</title><rect x="82.0077%" y="101" width="0.0438%" height="15" fill="rgb(229,67,23)" fg:x="24353" fg:w="13"/><text x="82.2577%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (9 samples, 0.03%)</title><rect x="82.0515%" y="101" width="0.0303%" height="15" fill="rgb(249,83,47)" fg:x="24366" fg:w="9"/><text x="82.3015%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (37 samples, 0.12%)</title><rect x="82.0818%" y="101" width="0.1246%" height="15" fill="rgb(215,43,3)" fg:x="24375" fg:w="37"/><text x="82.3318%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (7 samples, 0.02%)</title><rect x="82.2064%" y="101" width="0.0236%" height="15" fill="rgb(238,154,13)" fg:x="24412" fg:w="7"/><text x="82.4564%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (8 samples, 0.03%)</title><rect x="82.2299%" y="101" width="0.0269%" height="15" fill="rgb(219,56,2)" fg:x="24419" fg:w="8"/><text x="82.4799%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (25 samples, 0.08%)</title><rect x="82.2569%" y="101" width="0.0842%" height="15" fill="rgb(233,0,4)" fg:x="24427" fg:w="25"/><text x="82.5069%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (8 samples, 0.03%)</title><rect x="82.3411%" y="101" width="0.0269%" height="15" fill="rgb(235,30,7)" fg:x="24452" fg:w="8"/><text x="82.5911%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (10 samples, 0.03%)</title><rect x="82.3680%" y="101" width="0.0337%" height="15" fill="rgb(250,79,13)" fg:x="24460" fg:w="10"/><text x="82.6180%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (15 samples, 0.05%)</title><rect x="82.4118%" y="101" width="0.0505%" height="15" fill="rgb(211,146,34)" fg:x="24473" fg:w="15"/><text x="82.6618%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (17 samples, 0.06%)</title><rect x="82.4623%" y="101" width="0.0572%" height="15" fill="rgb(228,22,38)" fg:x="24488" fg:w="17"/><text x="82.7123%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (10 samples, 0.03%)</title><rect x="82.5195%" y="101" width="0.0337%" height="15" fill="rgb(235,168,5)" fg:x="24505" fg:w="10"/><text x="82.7695%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (15 samples, 0.05%)</title><rect x="82.5532%" y="101" width="0.0505%" height="15" fill="rgb(221,155,16)" fg:x="24515" fg:w="15"/><text x="82.8032%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (11 samples, 0.04%)</title><rect x="82.6037%" y="101" width="0.0370%" height="15" fill="rgb(215,215,53)" fg:x="24530" fg:w="11"/><text x="82.8537%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (12 samples, 0.04%)</title><rect x="82.6408%" y="101" width="0.0404%" height="15" fill="rgb(223,4,10)" fg:x="24541" fg:w="12"/><text x="82.8908%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (20 samples, 0.07%)</title><rect x="82.6812%" y="101" width="0.0673%" height="15" fill="rgb(234,103,6)" fg:x="24553" fg:w="20"/><text x="82.9312%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (6 samples, 0.02%)</title><rect x="82.7485%" y="101" width="0.0202%" height="15" fill="rgb(227,97,0)" fg:x="24573" fg:w="6"/><text x="82.9985%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (3 samples, 0.01%)</title><rect x="82.7721%" y="101" width="0.0101%" height="15" fill="rgb(234,150,53)" fg:x="24580" fg:w="3"/><text x="83.0221%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (7 samples, 0.02%)</title><rect x="82.7822%" y="101" width="0.0236%" height="15" fill="rgb(228,201,54)" fg:x="24583" fg:w="7"/><text x="83.0322%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (37 samples, 0.12%)</title><rect x="82.8058%" y="101" width="0.1246%" height="15" fill="rgb(222,22,37)" fg:x="24590" fg:w="37"/><text x="83.0558%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (15 samples, 0.05%)</title><rect x="82.9304%" y="101" width="0.0505%" height="15" fill="rgb(237,53,32)" fg:x="24627" fg:w="15"/><text x="83.1804%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (5 samples, 0.02%)</title><rect x="82.9809%" y="101" width="0.0168%" height="15" fill="rgb(233,25,53)" fg:x="24642" fg:w="5"/><text x="83.2309%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (10 samples, 0.03%)</title><rect x="82.9977%" y="101" width="0.0337%" height="15" fill="rgb(210,40,34)" fg:x="24647" fg:w="10"/><text x="83.2477%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (127 samples, 0.43%)</title><rect x="83.0314%" y="101" width="0.4277%" height="15" fill="rgb(241,220,44)" fg:x="24657" fg:w="127"/><text x="83.2814%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (11 samples, 0.04%)</title><rect x="83.4692%" y="101" width="0.0370%" height="15" fill="rgb(235,28,35)" fg:x="24787" fg:w="11"/><text x="83.7192%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (9 samples, 0.03%)</title><rect x="83.5062%" y="101" width="0.0303%" height="15" fill="rgb(210,56,17)" fg:x="24798" fg:w="9"/><text x="83.7562%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (3 samples, 0.01%)</title><rect x="83.5399%" y="101" width="0.0101%" height="15" fill="rgb(224,130,29)" fg:x="24808" fg:w="3"/><text x="83.7899%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (11 samples, 0.04%)</title><rect x="83.5500%" y="101" width="0.0370%" height="15" fill="rgb(235,212,8)" fg:x="24811" fg:w="11"/><text x="83.8000%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,389 samples, 4.68%)</title><rect x="78.9197%" y="117" width="4.6774%" height="15" fill="rgb(223,33,50)" fg:x="23436" fg:w="1389"/><text x="79.1697%" y="127.50">dateo..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (3 samples, 0.01%)</title><rect x="83.5870%" y="101" width="0.0101%" height="15" fill="rgb(219,149,13)" fg:x="24822" fg:w="3"/><text x="83.8370%" y="111.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (12 samples, 0.04%)</title><rect x="83.5971%" y="117" width="0.0404%" height="15" fill="rgb(250,156,29)" fg:x="24825" fg:w="12"/><text x="83.8471%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (16 samples, 0.05%)</title><rect x="83.6409%" y="117" width="0.0539%" height="15" fill="rgb(216,193,19)" fg:x="24838" fg:w="16"/><text x="83.8909%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (13 samples, 0.04%)</title><rect x="83.6981%" y="117" width="0.0438%" height="15" fill="rgb(216,135,14)" fg:x="24855" fg:w="13"/><text x="83.9481%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (5 samples, 0.02%)</title><rect x="83.7419%" y="117" width="0.0168%" height="15" fill="rgb(241,47,5)" fg:x="24868" fg:w="5"/><text x="83.9919%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (8 samples, 0.03%)</title><rect x="83.7588%" y="117" width="0.0269%" height="15" fill="rgb(233,42,35)" fg:x="24873" fg:w="8"/><text x="84.0088%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (8 samples, 0.03%)</title><rect x="83.7857%" y="117" width="0.0269%" height="15" fill="rgb(231,13,6)" fg:x="24881" fg:w="8"/><text x="84.0357%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (9 samples, 0.03%)</title><rect x="83.8160%" y="117" width="0.0303%" height="15" fill="rgb(207,181,40)" fg:x="24890" fg:w="9"/><text x="84.0660%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (6 samples, 0.02%)</title><rect x="83.8463%" y="117" width="0.0202%" height="15" fill="rgb(254,173,49)" fg:x="24899" fg:w="6"/><text x="84.0963%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (10 samples, 0.03%)</title><rect x="83.8665%" y="117" width="0.0337%" height="15" fill="rgb(221,1,38)" fg:x="24905" fg:w="10"/><text x="84.1165%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (8 samples, 0.03%)</title><rect x="83.9002%" y="117" width="0.0269%" height="15" fill="rgb(206,124,46)" fg:x="24915" fg:w="8"/><text x="84.1502%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (15 samples, 0.05%)</title><rect x="83.9372%" y="117" width="0.0505%" height="15" fill="rgb(249,21,11)" fg:x="24926" fg:w="15"/><text x="84.1872%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (5 samples, 0.02%)</title><rect x="83.9877%" y="117" width="0.0168%" height="15" fill="rgb(222,201,40)" fg:x="24941" fg:w="5"/><text x="84.2377%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223820 (3 samples, 0.01%)</title><rect x="84.0046%" y="117" width="0.0101%" height="15" fill="rgb(235,61,29)" fg:x="24946" fg:w="3"/><text x="84.2546%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (10 samples, 0.03%)</title><rect x="84.0147%" y="117" width="0.0337%" height="15" fill="rgb(219,207,3)" fg:x="24949" fg:w="10"/><text x="84.2647%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (15 samples, 0.05%)</title><rect x="84.0517%" y="117" width="0.0505%" height="15" fill="rgb(222,56,46)" fg:x="24960" fg:w="15"/><text x="84.3017%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (11 samples, 0.04%)</title><rect x="84.1123%" y="117" width="0.0370%" height="15" fill="rgb(239,76,54)" fg:x="24978" fg:w="11"/><text x="84.3623%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (6 samples, 0.02%)</title><rect x="84.1595%" y="117" width="0.0202%" height="15" fill="rgb(231,124,27)" fg:x="24992" fg:w="6"/><text x="84.4095%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (6 samples, 0.02%)</title><rect x="84.1831%" y="117" width="0.0202%" height="15" fill="rgb(249,195,6)" fg:x="24999" fg:w="6"/><text x="84.4331%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (6 samples, 0.02%)</title><rect x="84.2033%" y="117" width="0.0202%" height="15" fill="rgb(237,174,47)" fg:x="25005" fg:w="6"/><text x="84.4533%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (193 samples, 0.65%)</title><rect x="84.2235%" y="117" width="0.6499%" height="15" fill="rgb(206,201,31)" fg:x="25011" fg:w="193"/><text x="84.4735%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (3 samples, 0.01%)</title><rect x="84.8734%" y="117" width="0.0101%" height="15" fill="rgb(231,57,52)" fg:x="25204" fg:w="3"/><text x="85.1234%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (10 samples, 0.03%)</title><rect x="84.8835%" y="117" width="0.0337%" height="15" fill="rgb(248,177,22)" fg:x="25207" fg:w="10"/><text x="85.1335%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d5 (3 samples, 0.01%)</title><rect x="84.9172%" y="117" width="0.0101%" height="15" fill="rgb(215,211,37)" fg:x="25217" fg:w="3"/><text x="85.1672%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (6 samples, 0.02%)</title><rect x="84.9273%" y="117" width="0.0202%" height="15" fill="rgb(241,128,51)" fg:x="25220" fg:w="6"/><text x="85.1773%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (8 samples, 0.03%)</title><rect x="84.9475%" y="117" width="0.0269%" height="15" fill="rgb(227,165,31)" fg:x="25226" fg:w="8"/><text x="85.1975%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (106 samples, 0.36%)</title><rect x="84.9811%" y="117" width="0.3570%" height="15" fill="rgb(228,167,24)" fg:x="25236" fg:w="106"/><text x="85.2311%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (92 samples, 0.31%)</title><rect x="85.0283%" y="101" width="0.3098%" height="15" fill="rgb(228,143,12)" fg:x="25250" fg:w="92"/><text x="85.2783%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (11 samples, 0.04%)</title><rect x="85.3381%" y="117" width="0.0370%" height="15" fill="rgb(249,149,8)" fg:x="25342" fg:w="11"/><text x="85.5881%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (4 samples, 0.01%)</title><rect x="85.3751%" y="117" width="0.0135%" height="15" fill="rgb(243,35,44)" fg:x="25353" fg:w="4"/><text x="85.6251%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (6 samples, 0.02%)</title><rect x="85.3920%" y="117" width="0.0202%" height="15" fill="rgb(246,89,9)" fg:x="25358" fg:w="6"/><text x="85.6420%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (7 samples, 0.02%)</title><rect x="85.4189%" y="117" width="0.0236%" height="15" fill="rgb(233,213,13)" fg:x="25366" fg:w="7"/><text x="85.6689%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (8 samples, 0.03%)</title><rect x="85.4425%" y="117" width="0.0269%" height="15" fill="rgb(233,141,41)" fg:x="25373" fg:w="8"/><text x="85.6925%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (8 samples, 0.03%)</title><rect x="85.4728%" y="117" width="0.0269%" height="15" fill="rgb(239,167,4)" fg:x="25382" fg:w="8"/><text x="85.7228%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396c (6 samples, 0.02%)</title><rect x="85.5031%" y="117" width="0.0202%" height="15" fill="rgb(209,217,16)" fg:x="25391" fg:w="6"/><text x="85.7531%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (11 samples, 0.04%)</title><rect x="85.5300%" y="117" width="0.0370%" height="15" fill="rgb(219,88,35)" fg:x="25399" fg:w="11"/><text x="85.7800%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399b (12 samples, 0.04%)</title><rect x="85.5671%" y="117" width="0.0404%" height="15" fill="rgb(220,193,23)" fg:x="25410" fg:w="12"/><text x="85.8171%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (100 samples, 0.34%)</title><rect x="85.6075%" y="117" width="0.3367%" height="15" fill="rgb(230,90,52)" fg:x="25422" fg:w="100"/><text x="85.8575%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (8 samples, 0.03%)</title><rect x="85.9510%" y="117" width="0.0269%" height="15" fill="rgb(252,106,19)" fg:x="25524" fg:w="8"/><text x="86.2010%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (7 samples, 0.02%)</title><rect x="85.9779%" y="117" width="0.0236%" height="15" fill="rgb(206,74,20)" fg:x="25532" fg:w="7"/><text x="86.2279%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (175 samples, 0.59%)</title><rect x="86.0015%" y="117" width="0.5893%" height="15" fill="rgb(230,138,44)" fg:x="25539" fg:w="175"/><text x="86.2515%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (9 samples, 0.03%)</title><rect x="86.5975%" y="117" width="0.0303%" height="15" fill="rgb(235,182,43)" fg:x="25716" fg:w="9"/><text x="86.8475%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (9 samples, 0.03%)</title><rect x="86.6312%" y="117" width="0.0303%" height="15" fill="rgb(242,16,51)" fg:x="25726" fg:w="9"/><text x="86.8812%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (9 samples, 0.03%)</title><rect x="86.6615%" y="117" width="0.0303%" height="15" fill="rgb(248,9,4)" fg:x="25735" fg:w="9"/><text x="86.9115%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (7 samples, 0.02%)</title><rect x="86.6918%" y="117" width="0.0236%" height="15" fill="rgb(210,31,22)" fg:x="25744" fg:w="7"/><text x="86.9418%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (12 samples, 0.04%)</title><rect x="86.7154%" y="117" width="0.0404%" height="15" fill="rgb(239,54,39)" fg:x="25751" fg:w="12"/><text x="86.9654%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (18 samples, 0.06%)</title><rect x="86.7558%" y="117" width="0.0606%" height="15" fill="rgb(230,99,41)" fg:x="25763" fg:w="18"/><text x="87.0058%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (14 samples, 0.05%)</title><rect x="86.8164%" y="117" width="0.0471%" height="15" fill="rgb(253,106,12)" fg:x="25781" fg:w="14"/><text x="87.0664%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d1f (3 samples, 0.01%)</title><rect x="86.8669%" y="117" width="0.0101%" height="15" fill="rgb(213,46,41)" fg:x="25796" fg:w="3"/><text x="87.1169%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (6 samples, 0.02%)</title><rect x="86.8770%" y="117" width="0.0202%" height="15" fill="rgb(215,133,35)" fg:x="25799" fg:w="6"/><text x="87.1270%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (17 samples, 0.06%)</title><rect x="86.9006%" y="117" width="0.0572%" height="15" fill="rgb(213,28,5)" fg:x="25806" fg:w="17"/><text x="87.1506%" y="127.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (8 samples, 0.03%)</title><rect x="86.9578%" y="117" width="0.0269%" height="15" fill="rgb(215,77,49)" fg:x="25823" fg:w="8"/><text x="87.2078%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,840 samples, 9.56%)</title><rect x="77.4886%" y="133" width="9.5636%" height="15" fill="rgb(248,100,22)" fg:x="23011" fg:w="2840"/><text x="77.7386%" y="143.50">dateo_fun_remo..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (20 samples, 0.07%)</title><rect x="86.9848%" y="117" width="0.0673%" height="15" fill="rgb(208,67,9)" fg:x="25831" fg:w="20"/><text x="87.2348%" y="127.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (15 samples, 0.05%)</title><rect x="87.0656%" y="133" width="0.0505%" height="15" fill="rgb(219,133,21)" fg:x="25855" fg:w="15"/><text x="87.3156%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (3 samples, 0.01%)</title><rect x="87.1801%" y="117" width="0.0101%" height="15" fill="rgb(246,46,29)" fg:x="25889" fg:w="3"/><text x="87.4301%" y="127.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (14 samples, 0.05%)</title><rect x="87.2373%" y="101" width="0.0471%" height="15" fill="rgb(246,185,52)" fg:x="25906" fg:w="14"/><text x="87.4873%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209ea1 (3 samples, 0.01%)</title><rect x="87.2912%" y="101" width="0.0101%" height="15" fill="rgb(252,136,11)" fg:x="25922" fg:w="3"/><text x="87.5412%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f78 (5 samples, 0.02%)</title><rect x="87.3148%" y="101" width="0.0168%" height="15" fill="rgb(219,138,53)" fg:x="25929" fg:w="5"/><text x="87.5648%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a001 (4 samples, 0.01%)</title><rect x="87.3720%" y="101" width="0.0135%" height="15" fill="rgb(211,51,23)" fg:x="25946" fg:w="4"/><text x="87.6220%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (40 samples, 0.13%)</title><rect x="87.3855%" y="101" width="0.1347%" height="15" fill="rgb(247,221,28)" fg:x="25950" fg:w="40"/><text x="87.6355%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b114 (3 samples, 0.01%)</title><rect x="87.5303%" y="101" width="0.0101%" height="15" fill="rgb(251,222,45)" fg:x="25993" fg:w="3"/><text x="87.7803%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b125 (3 samples, 0.01%)</title><rect x="87.5404%" y="101" width="0.0101%" height="15" fill="rgb(217,162,53)" fg:x="25996" fg:w="3"/><text x="87.7904%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b16b (3 samples, 0.01%)</title><rect x="87.5539%" y="101" width="0.0101%" height="15" fill="rgb(229,93,14)" fg:x="26000" fg:w="3"/><text x="87.8039%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b227 (3 samples, 0.01%)</title><rect x="87.5775%" y="101" width="0.0101%" height="15" fill="rgb(209,67,49)" fg:x="26007" fg:w="3"/><text x="87.8275%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c657 (5 samples, 0.02%)</title><rect x="87.5876%" y="85" width="0.0168%" height="15" fill="rgb(213,87,29)" fg:x="26010" fg:w="5"/><text x="87.8376%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c68b (3 samples, 0.01%)</title><rect x="87.6179%" y="85" width="0.0101%" height="15" fill="rgb(205,151,52)" fg:x="26019" fg:w="3"/><text x="87.8679%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a03e (3 samples, 0.01%)</title><rect x="87.6347%" y="69" width="0.0101%" height="15" fill="rgb(253,215,39)" fg:x="26024" fg:w="3"/><text x="87.8847%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a153 (3 samples, 0.01%)</title><rect x="87.6751%" y="69" width="0.0101%" height="15" fill="rgb(221,220,41)" fg:x="26036" fg:w="3"/><text x="87.9251%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1a0 (4 samples, 0.01%)</title><rect x="87.6987%" y="69" width="0.0135%" height="15" fill="rgb(218,133,21)" fg:x="26043" fg:w="4"/><text x="87.9487%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (49 samples, 0.17%)</title><rect x="87.7357%" y="69" width="0.1650%" height="15" fill="rgb(221,193,43)" fg:x="26054" fg:w="49"/><text x="87.9857%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c760 (3 samples, 0.01%)</title><rect x="87.9108%" y="69" width="0.0101%" height="15" fill="rgb(240,128,52)" fg:x="26106" fg:w="3"/><text x="88.1608%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7f0 (4 samples, 0.01%)</title><rect x="87.9546%" y="69" width="0.0135%" height="15" fill="rgb(253,114,12)" fg:x="26119" fg:w="4"/><text x="88.2046%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (3 samples, 0.01%)</title><rect x="87.9681%" y="53" width="0.0101%" height="15" fill="rgb(215,223,47)" fg:x="26123" fg:w="3"/><text x="88.2181%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (4 samples, 0.01%)</title><rect x="87.9815%" y="53" width="0.0135%" height="15" fill="rgb(248,225,23)" fg:x="26127" fg:w="4"/><text x="88.2315%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (4 samples, 0.01%)</title><rect x="88.0018%" y="53" width="0.0135%" height="15" fill="rgb(250,108,0)" fg:x="26133" fg:w="4"/><text x="88.2518%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (21 samples, 0.07%)</title><rect x="88.0287%" y="53" width="0.0707%" height="15" fill="rgb(228,208,7)" fg:x="26141" fg:w="21"/><text x="88.2787%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (3 samples, 0.01%)</title><rect x="88.0994%" y="53" width="0.0101%" height="15" fill="rgb(244,45,10)" fg:x="26162" fg:w="3"/><text x="88.3494%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (4 samples, 0.01%)</title><rect x="88.1095%" y="53" width="0.0135%" height="15" fill="rgb(207,125,25)" fg:x="26165" fg:w="4"/><text x="88.3595%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (12 samples, 0.04%)</title><rect x="88.1230%" y="53" width="0.0404%" height="15" fill="rgb(210,195,18)" fg:x="26169" fg:w="12"/><text x="88.3730%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (5 samples, 0.02%)</title><rect x="88.1735%" y="53" width="0.0168%" height="15" fill="rgb(249,80,12)" fg:x="26184" fg:w="5"/><text x="88.4235%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (4 samples, 0.01%)</title><rect x="88.2038%" y="53" width="0.0135%" height="15" fill="rgb(221,65,9)" fg:x="26193" fg:w="4"/><text x="88.4538%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (20 samples, 0.07%)</title><rect x="88.2442%" y="53" width="0.0673%" height="15" fill="rgb(235,49,36)" fg:x="26205" fg:w="20"/><text x="88.4942%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (4 samples, 0.01%)</title><rect x="88.3116%" y="53" width="0.0135%" height="15" fill="rgb(225,32,20)" fg:x="26225" fg:w="4"/><text x="88.5616%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (7 samples, 0.02%)</title><rect x="88.3250%" y="53" width="0.0236%" height="15" fill="rgb(215,141,46)" fg:x="26229" fg:w="7"/><text x="88.5750%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (12 samples, 0.04%)</title><rect x="88.3520%" y="53" width="0.0404%" height="15" fill="rgb(250,160,47)" fg:x="26237" fg:w="12"/><text x="88.6020%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (134 samples, 0.45%)</title><rect x="87.9681%" y="69" width="0.4512%" height="15" fill="rgb(216,222,40)" fg:x="26123" fg:w="134"/><text x="88.2181%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c85d (5 samples, 0.02%)</title><rect x="88.4193%" y="69" width="0.0168%" height="15" fill="rgb(234,217,39)" fg:x="26257" fg:w="5"/><text x="88.6693%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (21 samples, 0.07%)</title><rect x="88.4395%" y="69" width="0.0707%" height="15" fill="rgb(207,178,40)" fg:x="26263" fg:w="21"/><text x="88.6895%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.07%)</title><rect x="88.4395%" y="53" width="0.0707%" height="15" fill="rgb(221,136,13)" fg:x="26263" fg:w="21"/><text x="88.6895%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c875 (3 samples, 0.01%)</title><rect x="88.5102%" y="69" width="0.0101%" height="15" fill="rgb(249,199,10)" fg:x="26284" fg:w="3"/><text x="88.7602%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223738 (3 samples, 0.01%)</title><rect x="88.5304%" y="53" width="0.0101%" height="15" fill="rgb(249,222,13)" fg:x="26290" fg:w="3"/><text x="88.7804%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223829 (4 samples, 0.01%)</title><rect x="88.5607%" y="53" width="0.0135%" height="15" fill="rgb(244,185,38)" fg:x="26299" fg:w="4"/><text x="88.8107%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (29 samples, 0.10%)</title><rect x="88.5877%" y="53" width="0.0977%" height="15" fill="rgb(236,202,9)" fg:x="26307" fg:w="29"/><text x="88.8377%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (3 samples, 0.01%)</title><rect x="88.6887%" y="53" width="0.0101%" height="15" fill="rgb(250,229,37)" fg:x="26337" fg:w="3"/><text x="88.9387%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238fc (3 samples, 0.01%)</title><rect x="88.7055%" y="53" width="0.0101%" height="15" fill="rgb(206,174,23)" fg:x="26342" fg:w="3"/><text x="88.9555%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (12 samples, 0.04%)</title><rect x="88.7157%" y="53" width="0.0404%" height="15" fill="rgb(211,33,43)" fg:x="26345" fg:w="12"/><text x="88.9657%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.03%)</title><rect x="88.7258%" y="37" width="0.0303%" height="15" fill="rgb(245,58,50)" fg:x="26348" fg:w="9"/><text x="88.9758%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (3 samples, 0.01%)</title><rect x="88.7561%" y="53" width="0.0101%" height="15" fill="rgb(244,68,36)" fg:x="26357" fg:w="3"/><text x="89.0061%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223945 (3 samples, 0.01%)</title><rect x="88.7763%" y="53" width="0.0101%" height="15" fill="rgb(232,229,15)" fg:x="26363" fg:w="3"/><text x="89.0263%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (3 samples, 0.01%)</title><rect x="88.7931%" y="53" width="0.0101%" height="15" fill="rgb(254,30,23)" fg:x="26368" fg:w="3"/><text x="89.0431%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (15 samples, 0.05%)</title><rect x="88.8133%" y="53" width="0.0505%" height="15" fill="rgb(235,160,14)" fg:x="26374" fg:w="15"/><text x="89.0633%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (28 samples, 0.09%)</title><rect x="88.8672%" y="53" width="0.0943%" height="15" fill="rgb(212,155,44)" fg:x="26390" fg:w="28"/><text x="89.1172%" y="63.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (4 samples, 0.01%)</title><rect x="88.9648%" y="53" width="0.0135%" height="15" fill="rgb(226,2,50)" fg:x="26419" fg:w="4"/><text x="89.2148%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (140 samples, 0.47%)</title><rect x="88.5203%" y="69" width="0.4714%" height="15" fill="rgb(234,177,6)" fg:x="26287" fg:w="140"/><text x="88.7703%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="88.9783%" y="53" width="0.0135%" height="15" fill="rgb(217,24,9)" fg:x="26423" fg:w="4"/><text x="89.2283%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c884 (3 samples, 0.01%)</title><rect x="88.9918%" y="69" width="0.0101%" height="15" fill="rgb(220,13,46)" fg:x="26427" fg:w="3"/><text x="89.2418%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c894 (4 samples, 0.01%)</title><rect x="89.0019%" y="69" width="0.0135%" height="15" fill="rgb(239,221,27)" fg:x="26430" fg:w="4"/><text x="89.2519%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (420 samples, 1.41%)</title><rect x="87.6280%" y="85" width="1.4143%" height="15" fill="rgb(222,198,25)" fg:x="26022" fg:w="420"/><text x="87.8780%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="89.0288%" y="69" width="0.0135%" height="15" fill="rgb(211,99,13)" fg:x="26438" fg:w="4"/><text x="89.2788%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6bb (3 samples, 0.01%)</title><rect x="89.0457%" y="85" width="0.0101%" height="15" fill="rgb(232,111,31)" fg:x="26443" fg:w="3"/><text x="89.2957%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c736 (4 samples, 0.01%)</title><rect x="89.0625%" y="85" width="0.0135%" height="15" fill="rgb(245,82,37)" fg:x="26448" fg:w="4"/><text x="89.3125%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (443 samples, 1.49%)</title><rect x="87.5876%" y="101" width="1.4918%" height="15" fill="rgb(227,149,46)" fg:x="26010" fg:w="443"/><text x="87.8376%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (567 samples, 1.91%)</title><rect x="87.1902%" y="117" width="1.9093%" height="15" fill="rgb(218,36,50)" fg:x="25892" fg:w="567"/><text x="87.4402%" y="127.50">d..</text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (590 samples, 1.99%)</title><rect x="87.1195%" y="133" width="1.9868%" height="15" fill="rgb(226,80,48)" fg:x="25871" fg:w="590"/><text x="87.3695%" y="143.50">d..</text></g><g><title>libsystem_m.dylib`0x00007ff825f20470 (145 samples, 0.49%)</title><rect x="89.1130%" y="133" width="0.4883%" height="15" fill="rgb(238,224,15)" fg:x="26463" fg:w="145"/><text x="89.3630%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (250 samples, 0.84%)</title><rect x="89.6013%" y="133" width="0.8419%" height="15" fill="rgb(241,136,10)" fg:x="26608" fg:w="250"/><text x="89.8513%" y="143.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (5 samples, 0.02%)</title><rect x="90.4432%" y="133" width="0.0168%" height="15" fill="rgb(208,32,45)" fg:x="26858" fg:w="5"/><text x="90.6932%" y="143.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (3 samples, 0.01%)</title><rect x="90.4600%" y="133" width="0.0101%" height="15" fill="rgb(207,135,9)" fg:x="26863" fg:w="3"/><text x="90.7100%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (3 samples, 0.01%)</title><rect x="90.4937%" y="133" width="0.0101%" height="15" fill="rgb(206,86,44)" fg:x="26873" fg:w="3"/><text x="90.7437%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (13 samples, 0.04%)</title><rect x="90.5038%" y="133" width="0.0438%" height="15" fill="rgb(245,177,15)" fg:x="26876" fg:w="13"/><text x="90.7538%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (3 samples, 0.01%)</title><rect x="90.5543%" y="133" width="0.0101%" height="15" fill="rgb(206,64,50)" fg:x="26891" fg:w="3"/><text x="90.8043%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (6 samples, 0.02%)</title><rect x="90.5644%" y="133" width="0.0202%" height="15" fill="rgb(234,36,40)" fg:x="26894" fg:w="6"/><text x="90.8144%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (3 samples, 0.01%)</title><rect x="90.6183%" y="133" width="0.0101%" height="15" fill="rgb(213,64,8)" fg:x="26910" fg:w="3"/><text x="90.8683%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (3 samples, 0.01%)</title><rect x="90.6351%" y="133" width="0.0101%" height="15" fill="rgb(210,75,36)" fg:x="26915" fg:w="3"/><text x="90.8851%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (7 samples, 0.02%)</title><rect x="90.6452%" y="133" width="0.0236%" height="15" fill="rgb(229,88,21)" fg:x="26918" fg:w="7"/><text x="90.8952%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (3 samples, 0.01%)</title><rect x="90.6688%" y="133" width="0.0101%" height="15" fill="rgb(252,204,47)" fg:x="26925" fg:w="3"/><text x="90.9188%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (10 samples, 0.03%)</title><rect x="90.6789%" y="133" width="0.0337%" height="15" fill="rgb(208,77,27)" fg:x="26928" fg:w="10"/><text x="90.9289%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (8 samples, 0.03%)</title><rect x="90.7227%" y="133" width="0.0269%" height="15" fill="rgb(221,76,26)" fg:x="26941" fg:w="8"/><text x="90.9727%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (5 samples, 0.02%)</title><rect x="90.7496%" y="133" width="0.0168%" height="15" fill="rgb(225,139,18)" fg:x="26949" fg:w="5"/><text x="90.9996%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (7 samples, 0.02%)</title><rect x="90.7664%" y="133" width="0.0236%" height="15" fill="rgb(230,137,11)" fg:x="26954" fg:w="7"/><text x="91.0164%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (7 samples, 0.02%)</title><rect x="90.7934%" y="133" width="0.0236%" height="15" fill="rgb(212,28,1)" fg:x="26962" fg:w="7"/><text x="91.0434%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (11 samples, 0.04%)</title><rect x="90.8169%" y="133" width="0.0370%" height="15" fill="rgb(248,164,17)" fg:x="26969" fg:w="11"/><text x="91.0669%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (9 samples, 0.03%)</title><rect x="90.8607%" y="133" width="0.0303%" height="15" fill="rgb(222,171,42)" fg:x="26982" fg:w="9"/><text x="91.1107%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (9 samples, 0.03%)</title><rect x="90.8910%" y="133" width="0.0303%" height="15" fill="rgb(243,84,45)" fg:x="26991" fg:w="9"/><text x="91.1410%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (14 samples, 0.05%)</title><rect x="90.9213%" y="133" width="0.0471%" height="15" fill="rgb(252,49,23)" fg:x="27000" fg:w="14"/><text x="91.1713%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (5 samples, 0.02%)</title><rect x="90.9685%" y="133" width="0.0168%" height="15" fill="rgb(215,19,7)" fg:x="27014" fg:w="5"/><text x="91.2185%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,170 samples, 14.04%)</title><rect x="76.9464%" y="149" width="14.0423%" height="15" fill="rgb(238,81,41)" fg:x="22850" fg:w="4170"/><text x="77.1964%" y="159.50">dateo_fun_remover`&lt;al..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="90.9887%" y="149" width="0.0202%" height="15" fill="rgb(210,199,37)" fg:x="27020" fg:w="6"/><text x="91.2387%" y="159.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (3 samples, 0.01%)</title><rect x="91.0089%" y="149" width="0.0101%" height="15" fill="rgb(244,192,49)" fg:x="27026" fg:w="3"/><text x="91.2589%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (3 samples, 0.01%)</title><rect x="91.0358%" y="149" width="0.0101%" height="15" fill="rgb(226,211,11)" fg:x="27034" fg:w="3"/><text x="91.2858%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (4,198 samples, 14.14%)</title><rect x="76.9228%" y="165" width="14.1366%" height="15" fill="rgb(236,162,54)" fg:x="22843" fg:w="4198"/><text x="77.1728%" y="175.50">dateo_fun_remover`dat..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (27 samples, 0.09%)</title><rect x="91.0998%" y="165" width="0.0909%" height="15" fill="rgb(220,229,9)" fg:x="27053" fg:w="27"/><text x="91.3498%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (3 samples, 0.01%)</title><rect x="91.1941%" y="165" width="0.0101%" height="15" fill="rgb(250,87,22)" fg:x="27081" fg:w="3"/><text x="91.4441%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (3 samples, 0.01%)</title><rect x="91.2076%" y="165" width="0.0101%" height="15" fill="rgb(239,43,17)" fg:x="27085" fg:w="3"/><text x="91.4576%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (13 samples, 0.04%)</title><rect x="91.2177%" y="165" width="0.0438%" height="15" fill="rgb(231,177,25)" fg:x="27088" fg:w="13"/><text x="91.4677%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.04%)</title><rect x="91.2177%" y="149" width="0.0438%" height="15" fill="rgb(219,179,1)" fg:x="27088" fg:w="13"/><text x="91.4677%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (17 samples, 0.06%)</title><rect x="91.2817%" y="165" width="0.0572%" height="15" fill="rgb(238,219,53)" fg:x="27107" fg:w="17"/><text x="91.5317%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (7 samples, 0.02%)</title><rect x="91.3389%" y="165" width="0.0236%" height="15" fill="rgb(232,167,36)" fg:x="27124" fg:w="7"/><text x="91.5889%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (3 samples, 0.01%)</title><rect x="91.3625%" y="165" width="0.0101%" height="15" fill="rgb(244,19,51)" fg:x="27131" fg:w="3"/><text x="91.6125%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (5,327 samples, 17.94%)</title><rect x="73.4543%" y="181" width="17.9384%" height="15" fill="rgb(224,6,22)" fg:x="21813" fg:w="5327"/><text x="73.7043%" y="191.50">dateo_fun_remover`dateo_fun_..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (15 samples, 0.05%)</title><rect x="91.3928%" y="181" width="0.0505%" height="15" fill="rgb(224,145,5)" fg:x="27140" fg:w="15"/><text x="91.6428%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (11 samples, 0.04%)</title><rect x="91.4433%" y="181" width="0.0370%" height="15" fill="rgb(234,130,49)" fg:x="27155" fg:w="11"/><text x="91.6933%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (9 samples, 0.03%)</title><rect x="91.4837%" y="181" width="0.0303%" height="15" fill="rgb(254,6,2)" fg:x="27167" fg:w="9"/><text x="91.7337%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (5 samples, 0.02%)</title><rect x="91.5241%" y="181" width="0.0168%" height="15" fill="rgb(208,96,46)" fg:x="27179" fg:w="5"/><text x="91.7741%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (9 samples, 0.03%)</title><rect x="91.5477%" y="181" width="0.0303%" height="15" fill="rgb(239,3,39)" fg:x="27186" fg:w="9"/><text x="91.7977%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (17 samples, 0.06%)</title><rect x="91.5881%" y="181" width="0.0572%" height="15" fill="rgb(233,210,1)" fg:x="27198" fg:w="17"/><text x="91.8381%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (3 samples, 0.01%)</title><rect x="91.6453%" y="181" width="0.0101%" height="15" fill="rgb(244,137,37)" fg:x="27215" fg:w="3"/><text x="91.8953%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (149 samples, 0.50%)</title><rect x="91.6588%" y="181" width="0.5018%" height="15" fill="rgb(240,136,2)" fg:x="27219" fg:w="149"/><text x="91.9088%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (149 samples, 0.50%)</title><rect x="91.6588%" y="165" width="0.5018%" height="15" fill="rgb(239,18,37)" fg:x="27219" fg:w="149"/><text x="91.9088%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (149 samples, 0.50%)</title><rect x="91.6588%" y="149" width="0.5018%" height="15" fill="rgb(218,185,22)" fg:x="27219" fg:w="149"/><text x="91.9088%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (149 samples, 0.50%)</title><rect x="91.6588%" y="133" width="0.5018%" height="15" fill="rgb(225,218,4)" fg:x="27219" fg:w="149"/><text x="91.9088%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (13 samples, 0.04%)</title><rect x="92.1606%" y="181" width="0.0438%" height="15" fill="rgb(230,182,32)" fg:x="27368" fg:w="13"/><text x="92.4106%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (6 samples, 0.02%)</title><rect x="92.2077%" y="181" width="0.0202%" height="15" fill="rgb(242,56,43)" fg:x="27382" fg:w="6"/><text x="92.4577%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (3 samples, 0.01%)</title><rect x="92.2346%" y="181" width="0.0101%" height="15" fill="rgb(233,99,24)" fg:x="27390" fg:w="3"/><text x="92.4846%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (11 samples, 0.04%)</title><rect x="92.2447%" y="181" width="0.0370%" height="15" fill="rgb(234,209,42)" fg:x="27393" fg:w="11"/><text x="92.4947%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (6 samples, 0.02%)</title><rect x="92.2852%" y="181" width="0.0202%" height="15" fill="rgb(227,7,12)" fg:x="27405" fg:w="6"/><text x="92.5352%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (7 samples, 0.02%)</title><rect x="92.3121%" y="181" width="0.0236%" height="15" fill="rgb(245,203,43)" fg:x="27413" fg:w="7"/><text x="92.5621%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (5 samples, 0.02%)</title><rect x="92.3390%" y="181" width="0.0168%" height="15" fill="rgb(238,205,33)" fg:x="27421" fg:w="5"/><text x="92.5890%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (10 samples, 0.03%)</title><rect x="92.3559%" y="181" width="0.0337%" height="15" fill="rgb(231,56,7)" fg:x="27426" fg:w="10"/><text x="92.6059%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223813 (4 samples, 0.01%)</title><rect x="92.3963%" y="181" width="0.0135%" height="15" fill="rgb(244,186,29)" fg:x="27438" fg:w="4"/><text x="92.6463%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (6 samples, 0.02%)</title><rect x="92.4098%" y="181" width="0.0202%" height="15" fill="rgb(234,111,31)" fg:x="27442" fg:w="6"/><text x="92.6598%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (7 samples, 0.02%)</title><rect x="92.4333%" y="181" width="0.0236%" height="15" fill="rgb(241,149,10)" fg:x="27449" fg:w="7"/><text x="92.6833%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382f (6 samples, 0.02%)</title><rect x="92.4603%" y="181" width="0.0202%" height="15" fill="rgb(249,206,44)" fg:x="27457" fg:w="6"/><text x="92.7103%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (4 samples, 0.01%)</title><rect x="92.4805%" y="181" width="0.0135%" height="15" fill="rgb(251,153,30)" fg:x="27463" fg:w="4"/><text x="92.7305%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (3 samples, 0.01%)</title><rect x="92.4939%" y="181" width="0.0101%" height="15" fill="rgb(239,152,38)" fg:x="27467" fg:w="3"/><text x="92.7439%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (6 samples, 0.02%)</title><rect x="92.5108%" y="181" width="0.0202%" height="15" fill="rgb(249,139,47)" fg:x="27472" fg:w="6"/><text x="92.7608%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (9 samples, 0.03%)</title><rect x="92.5411%" y="181" width="0.0303%" height="15" fill="rgb(244,64,35)" fg:x="27481" fg:w="9"/><text x="92.7911%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223870 (7 samples, 0.02%)</title><rect x="92.5714%" y="181" width="0.0236%" height="15" fill="rgb(216,46,15)" fg:x="27490" fg:w="7"/><text x="92.8214%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (185 samples, 0.62%)</title><rect x="92.6185%" y="181" width="0.6230%" height="15" fill="rgb(250,74,19)" fg:x="27504" fg:w="185"/><text x="92.8685%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (3 samples, 0.01%)</title><rect x="93.2516%" y="181" width="0.0101%" height="15" fill="rgb(249,42,33)" fg:x="27692" fg:w="3"/><text x="93.5016%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (6 samples, 0.02%)</title><rect x="93.2617%" y="181" width="0.0202%" height="15" fill="rgb(242,149,17)" fg:x="27695" fg:w="6"/><text x="93.5117%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (4 samples, 0.01%)</title><rect x="93.2819%" y="181" width="0.0135%" height="15" fill="rgb(244,29,21)" fg:x="27701" fg:w="4"/><text x="93.5319%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (3 samples, 0.01%)</title><rect x="93.2954%" y="181" width="0.0101%" height="15" fill="rgb(220,130,37)" fg:x="27705" fg:w="3"/><text x="93.5454%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (45 samples, 0.15%)</title><rect x="93.3089%" y="181" width="0.1515%" height="15" fill="rgb(211,67,2)" fg:x="27709" fg:w="45"/><text x="93.5589%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (45 samples, 0.15%)</title><rect x="93.3089%" y="165" width="0.1515%" height="15" fill="rgb(235,68,52)" fg:x="27709" fg:w="45"/><text x="93.5589%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (3 samples, 0.01%)</title><rect x="93.4671%" y="181" width="0.0101%" height="15" fill="rgb(246,142,3)" fg:x="27756" fg:w="3"/><text x="93.7171%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (5 samples, 0.02%)</title><rect x="93.4840%" y="181" width="0.0168%" height="15" fill="rgb(241,25,7)" fg:x="27761" fg:w="5"/><text x="93.7340%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22392b (4 samples, 0.01%)</title><rect x="93.5008%" y="181" width="0.0135%" height="15" fill="rgb(242,119,39)" fg:x="27766" fg:w="4"/><text x="93.7508%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223945 (5 samples, 0.02%)</title><rect x="93.5345%" y="181" width="0.0168%" height="15" fill="rgb(241,98,45)" fg:x="27776" fg:w="5"/><text x="93.7845%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223953 (3 samples, 0.01%)</title><rect x="93.5513%" y="181" width="0.0101%" height="15" fill="rgb(254,28,30)" fg:x="27781" fg:w="3"/><text x="93.8013%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223959 (7 samples, 0.02%)</title><rect x="93.5614%" y="181" width="0.0236%" height="15" fill="rgb(241,142,54)" fg:x="27784" fg:w="7"/><text x="93.8114%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223962 (3 samples, 0.01%)</title><rect x="93.5850%" y="181" width="0.0101%" height="15" fill="rgb(222,85,15)" fg:x="27791" fg:w="3"/><text x="93.8350%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (6 samples, 0.02%)</title><rect x="93.5951%" y="181" width="0.0202%" height="15" fill="rgb(210,85,47)" fg:x="27794" fg:w="6"/><text x="93.8451%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22397b (3 samples, 0.01%)</title><rect x="93.6187%" y="181" width="0.0101%" height="15" fill="rgb(224,206,25)" fg:x="27801" fg:w="3"/><text x="93.8687%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223984 (3 samples, 0.01%)</title><rect x="93.6355%" y="181" width="0.0101%" height="15" fill="rgb(243,201,19)" fg:x="27806" fg:w="3"/><text x="93.8855%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (71 samples, 0.24%)</title><rect x="93.6557%" y="181" width="0.2391%" height="15" fill="rgb(236,59,4)" fg:x="27812" fg:w="71"/><text x="93.9057%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (29 samples, 0.10%)</title><rect x="93.8948%" y="181" width="0.0977%" height="15" fill="rgb(254,179,45)" fg:x="27883" fg:w="29"/><text x="94.1448%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (42 samples, 0.14%)</title><rect x="94.0059%" y="181" width="0.1414%" height="15" fill="rgb(226,14,10)" fg:x="27916" fg:w="42"/><text x="94.2559%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239c0 (5 samples, 0.02%)</title><rect x="94.1474%" y="181" width="0.0168%" height="15" fill="rgb(244,27,41)" fg:x="27958" fg:w="5"/><text x="94.3974%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (5 samples, 0.02%)</title><rect x="94.1642%" y="181" width="0.0168%" height="15" fill="rgb(235,35,32)" fg:x="27963" fg:w="5"/><text x="94.4142%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (14 samples, 0.05%)</title><rect x="94.1810%" y="181" width="0.0471%" height="15" fill="rgb(218,68,31)" fg:x="27968" fg:w="14"/><text x="94.4310%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (12 samples, 0.04%)</title><rect x="94.2282%" y="181" width="0.0404%" height="15" fill="rgb(207,120,37)" fg:x="27982" fg:w="12"/><text x="94.4782%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (10 samples, 0.03%)</title><rect x="94.2686%" y="181" width="0.0337%" height="15" fill="rgb(227,98,0)" fg:x="27994" fg:w="10"/><text x="94.5186%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (12 samples, 0.04%)</title><rect x="94.3023%" y="181" width="0.0404%" height="15" fill="rgb(207,7,3)" fg:x="28004" fg:w="12"/><text x="94.5523%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (7 samples, 0.02%)</title><rect x="94.3427%" y="181" width="0.0236%" height="15" fill="rgb(206,98,19)" fg:x="28016" fg:w="7"/><text x="94.5927%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (7 samples, 0.02%)</title><rect x="94.3662%" y="181" width="0.0236%" height="15" fill="rgb(217,5,26)" fg:x="28023" fg:w="7"/><text x="94.6162%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (10 samples, 0.03%)</title><rect x="94.3898%" y="181" width="0.0337%" height="15" fill="rgb(235,190,38)" fg:x="28030" fg:w="10"/><text x="94.6398%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.04%)</title><rect x="94.4235%" y="181" width="0.0370%" height="15" fill="rgb(247,86,24)" fg:x="28040" fg:w="11"/><text x="94.6735%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (17,028 samples, 57.34%)</title><rect x="42.3491%" y="197" width="57.3411%" height="15" fill="rgb(205,101,16)" fg:x="12576" fg:w="17028"/><text x="42.5991%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,553 samples, 5.23%)</title><rect x="94.4605%" y="181" width="5.2297%" height="15" fill="rgb(246,168,33)" fg:x="28051" fg:w="1553"/><text x="94.7105%" y="191.50">libsys..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (13 samples, 0.04%)</title><rect x="99.6902%" y="197" width="0.0438%" height="15" fill="rgb(231,114,1)" fg:x="29604" fg:w="13"/><text x="99.9402%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (3 samples, 0.01%)</title><rect x="99.7340%" y="197" width="0.0101%" height="15" fill="rgb(207,184,53)" fg:x="29617" fg:w="3"/><text x="99.9840%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (5 samples, 0.02%)</title><rect x="99.7441%" y="197" width="0.0168%" height="15" fill="rgb(224,95,51)" fg:x="29620" fg:w="5"/><text x="99.9941%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (4 samples, 0.01%)</title><rect x="99.7710%" y="197" width="0.0135%" height="15" fill="rgb(212,188,45)" fg:x="29628" fg:w="4"/><text x="100.0210%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (5 samples, 0.02%)</title><rect x="99.7980%" y="197" width="0.0168%" height="15" fill="rgb(223,154,38)" fg:x="29636" fg:w="5"/><text x="100.0480%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (4 samples, 0.01%)</title><rect x="99.8182%" y="197" width="0.0135%" height="15" fill="rgb(251,22,52)" fg:x="29642" fg:w="4"/><text x="100.0682%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e6c (4 samples, 0.01%)</title><rect x="99.8316%" y="197" width="0.0135%" height="15" fill="rgb(229,209,22)" fg:x="29646" fg:w="4"/><text x="100.0816%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (15 samples, 0.05%)</title><rect x="99.8451%" y="197" width="0.0505%" height="15" fill="rgb(234,138,34)" fg:x="29650" fg:w="15"/><text x="100.0951%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (3 samples, 0.01%)</title><rect x="99.8956%" y="197" width="0.0101%" height="15" fill="rgb(212,95,11)" fg:x="29665" fg:w="3"/><text x="100.1456%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (9 samples, 0.03%)</title><rect x="99.9057%" y="197" width="0.0303%" height="15" fill="rgb(240,179,47)" fg:x="29668" fg:w="9"/><text x="100.1557%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (9 samples, 0.03%)</title><rect x="99.9360%" y="197" width="0.0303%" height="15" fill="rgb(240,163,11)" fg:x="29677" fg:w="9"/><text x="100.1860%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (8 samples, 0.03%)</title><rect x="99.9663%" y="197" width="0.0269%" height="15" fill="rgb(236,37,12)" fg:x="29686" fg:w="8"/><text x="100.2163%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (29,695 samples, 100.00%)</title><rect x="0.0000%" y="229" width="99.9966%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="29695"/><text x="0.2500%" y="239.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (29,695 samples, 100.00%)</title><rect x="0.0000%" y="213" width="99.9966%" height="15" fill="rgb(244,205,15)" fg:x="0" fg:w="29695"/><text x="0.2500%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>all (29,696 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="351.50"></text></g><g><title>dyld`start (29,696 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="335.50">dyld`start</text></g><g><title>dateo_fun_remover`main (29,696 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="319.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (29,696 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="303.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (29,696 samples, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="287.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (29,696 samples, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="271.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (29,696 samples, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="29696"/><text x="0.2500%" y="255.50">dateo_fun_remover`dateo_fun_remover::main</text></g></svg></svg>