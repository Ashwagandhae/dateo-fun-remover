<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="6210"><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.05%)</title><rect x="0.0000%" y="197" width="0.0483%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (2 samples, 0.03%)</title><rect x="0.0483%" y="197" width="0.0322%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="2"/><text x="0.2983%" y="207.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (1 samples, 0.02%)</title><rect x="0.0805%" y="197" width="0.0161%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="1"/><text x="0.3305%" y="207.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::vec::Vec&lt;dateo_fun_remover::finder::tree::Val&gt;&gt;&gt; (56 samples, 0.90%)</title><rect x="0.0966%" y="197" width="0.9018%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="56"/><text x="0.3466%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (56 samples, 0.90%)</title><rect x="0.0966%" y="181" width="0.9018%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="56"/><text x="0.3466%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (56 samples, 0.90%)</title><rect x="0.0966%" y="165" width="0.9018%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="56"/><text x="0.3466%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (56 samples, 0.90%)</title><rect x="0.0966%" y="149" width="0.9018%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="56"/><text x="0.3466%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (56 samples, 0.90%)</title><rect x="0.0966%" y="133" width="0.9018%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="56"/><text x="0.3466%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (56 samples, 0.90%)</title><rect x="0.0966%" y="117" width="0.9018%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="56"/><text x="0.3466%" y="127.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (32 samples, 0.52%)</title><rect x="44.2995%" y="165" width="0.5153%" height="15" fill="rgb(220,122,19)" fg:x="2751" fg:w="32"/><text x="44.5495%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,748 samples, 44.25%)</title><rect x="1.0145%" y="181" width="44.2512%" height="15" fill="rgb(250,228,42)" fg:x="63" fg:w="2748"/><text x="1.2645%" y="191.50">dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::tra..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (28 samples, 0.45%)</title><rect x="44.8148%" y="165" width="0.4509%" height="15" fill="rgb(240,193,28)" fg:x="2783" fg:w="28"/><text x="45.0648%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (13 samples, 0.21%)</title><rect x="45.2657%" y="181" width="0.2093%" height="15" fill="rgb(216,20,37)" fg:x="2811" fg:w="13"/><text x="45.5157%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.21%)</title><rect x="45.2657%" y="165" width="0.2093%" height="15" fill="rgb(206,188,39)" fg:x="2811" fg:w="13"/><text x="45.5157%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="45.4750%" y="181" width="0.0161%" height="15" fill="rgb(217,207,13)" fg:x="2824" fg:w="1"/><text x="45.7250%" y="191.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (3 samples, 0.05%)</title><rect x="45.4911%" y="181" width="0.0483%" height="15" fill="rgb(231,73,38)" fg:x="2825" fg:w="3"/><text x="45.7411%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (28 samples, 0.45%)</title><rect x="45.5395%" y="133" width="0.4509%" height="15" fill="rgb(225,20,46)" fg:x="2828" fg:w="28"/><text x="45.7895%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (2,795 samples, 45.01%)</title><rect x="0.9984%" y="197" width="45.0081%" height="15" fill="rgb(210,31,41)" fg:x="62" fg:w="2795"/><text x="1.2484%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects</text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (29 samples, 0.47%)</title><rect x="45.5395%" y="181" width="0.4670%" height="15" fill="rgb(221,200,47)" fg:x="2828" fg:w="29"/><text x="45.7895%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (29 samples, 0.47%)</title><rect x="45.5395%" y="165" width="0.4670%" height="15" fill="rgb(226,26,5)" fg:x="2828" fg:w="29"/><text x="45.7895%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (29 samples, 0.47%)</title><rect x="45.5395%" y="149" width="0.4670%" height="15" fill="rgb(249,33,26)" fg:x="2828" fg:w="29"/><text x="45.7895%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_deallocate (1 samples, 0.02%)</title><rect x="45.9903%" y="133" width="0.0161%" height="15" fill="rgb(235,183,28)" fg:x="2856" fg:w="1"/><text x="46.2403%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.11%)</title><rect x="50.1288%" y="181" width="0.1127%" height="15" fill="rgb(221,5,38)" fg:x="3113" fg:w="7"/><text x="50.3788%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (347 samples, 5.59%)</title><rect x="50.2415%" y="181" width="5.5878%" height="15" fill="rgb(247,18,42)" fg:x="3120" fg:w="347"/><text x="50.4915%" y="191.50">dateo_f..</text></g><g><title>dateo_fun_remover`__rdl_dealloc (7 samples, 0.11%)</title><rect x="55.8293%" y="181" width="0.1127%" height="15" fill="rgb(241,131,45)" fg:x="3467" fg:w="7"/><text x="56.0793%" y="191.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (3 samples, 0.05%)</title><rect x="55.9420%" y="181" width="0.0483%" height="15" fill="rgb(249,31,29)" fg:x="3474" fg:w="3"/><text x="56.1920%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d794 (2 samples, 0.03%)</title><rect x="55.9903%" y="117" width="0.0322%" height="15" fill="rgb(225,111,53)" fg:x="3477" fg:w="2"/><text x="56.2403%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.03%)</title><rect x="55.9903%" y="101" width="0.0322%" height="15" fill="rgb(238,160,17)" fg:x="3477" fg:w="2"/><text x="56.2403%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.03%)</title><rect x="55.9903%" y="85" width="0.0322%" height="15" fill="rgb(214,148,48)" fg:x="3477" fg:w="2"/><text x="56.2403%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.29%)</title><rect x="55.9903%" y="181" width="0.2899%" height="15" fill="rgb(232,36,49)" fg:x="3477" fg:w="18"/><text x="56.2403%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (18 samples, 0.29%)</title><rect x="55.9903%" y="165" width="0.2899%" height="15" fill="rgb(209,103,24)" fg:x="3477" fg:w="18"/><text x="56.2403%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (18 samples, 0.29%)</title><rect x="55.9903%" y="149" width="0.2899%" height="15" fill="rgb(229,88,8)" fg:x="3477" fg:w="18"/><text x="56.2403%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (18 samples, 0.29%)</title><rect x="55.9903%" y="133" width="0.2899%" height="15" fill="rgb(213,181,19)" fg:x="3477" fg:w="18"/><text x="56.2403%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (16 samples, 0.26%)</title><rect x="56.0225%" y="117" width="0.2576%" height="15" fill="rgb(254,191,54)" fg:x="3479" fg:w="16"/><text x="56.2725%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (16 samples, 0.26%)</title><rect x="56.0225%" y="101" width="0.2576%" height="15" fill="rgb(241,83,37)" fg:x="3479" fg:w="16"/><text x="56.2725%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (16 samples, 0.26%)</title><rect x="56.0225%" y="85" width="0.2576%" height="15" fill="rgb(233,36,39)" fg:x="3479" fg:w="16"/><text x="56.2725%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (16 samples, 0.26%)</title><rect x="56.0225%" y="69" width="0.2576%" height="15" fill="rgb(226,3,54)" fg:x="3479" fg:w="16"/><text x="56.2725%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (16 samples, 0.26%)</title><rect x="56.0225%" y="53" width="0.2576%" height="15" fill="rgb(245,192,40)" fg:x="3479" fg:w="16"/><text x="56.2725%" y="63.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="56.2802%" y="165" width="0.0161%" height="15" fill="rgb(238,167,29)" fg:x="3495" fg:w="1"/><text x="56.5302%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="56.2963%" y="133" width="0.0322%" height="15" fill="rgb(232,182,51)" fg:x="3496" fg:w="2"/><text x="56.5463%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (3 samples, 0.05%)</title><rect x="56.2963%" y="165" width="0.0483%" height="15" fill="rgb(231,60,39)" fg:x="3496" fg:w="3"/><text x="56.5463%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="56.2963%" y="149" width="0.0483%" height="15" fill="rgb(208,69,12)" fg:x="3496" fg:w="3"/><text x="56.5463%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (1 samples, 0.02%)</title><rect x="56.3285%" y="133" width="0.0161%" height="15" fill="rgb(235,93,37)" fg:x="3498" fg:w="1"/><text x="56.5785%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="56.3446%" y="149" width="0.0161%" height="15" fill="rgb(213,116,39)" fg:x="3499" fg:w="1"/><text x="56.5946%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (3 samples, 0.05%)</title><rect x="56.3446%" y="165" width="0.0483%" height="15" fill="rgb(222,207,29)" fg:x="3499" fg:w="3"/><text x="56.5946%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (2 samples, 0.03%)</title><rect x="56.3607%" y="149" width="0.0322%" height="15" fill="rgb(206,96,30)" fg:x="3500" fg:w="2"/><text x="56.6107%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="56.3607%" y="133" width="0.0322%" height="15" fill="rgb(218,138,4)" fg:x="3500" fg:w="2"/><text x="56.6107%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="56.3607%" y="117" width="0.0322%" height="15" fill="rgb(250,191,14)" fg:x="3500" fg:w="2"/><text x="56.6107%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="56.3607%" y="101" width="0.0322%" height="15" fill="rgb(239,60,40)" fg:x="3500" fg:w="2"/><text x="56.6107%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209425 (1 samples, 0.02%)</title><rect x="56.3768%" y="85" width="0.0161%" height="15" fill="rgb(206,27,48)" fg:x="3501" fg:w="1"/><text x="56.6268%" y="95.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (8 samples, 0.13%)</title><rect x="56.2802%" y="181" width="0.1288%" height="15" fill="rgb(225,35,8)" fg:x="3495" fg:w="8"/><text x="56.5302%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="56.3929%" y="165" width="0.0161%" height="15" fill="rgb(250,213,24)" fg:x="3502" fg:w="1"/><text x="56.6429%" y="175.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (3 samples, 0.05%)</title><rect x="64.1385%" y="133" width="0.0483%" height="15" fill="rgb(247,123,22)" fg:x="3983" fg:w="3"/><text x="64.3885%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (124 samples, 2.00%)</title><rect x="64.1868%" y="133" width="1.9968%" height="15" fill="rgb(231,138,38)" fg:x="3986" fg:w="124"/><text x="64.4368%" y="143.50">d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (8 samples, 0.13%)</title><rect x="66.1836%" y="133" width="0.1288%" height="15" fill="rgb(231,145,46)" fg:x="4110" fg:w="8"/><text x="66.4336%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (313 samples, 5.04%)</title><rect x="61.5781%" y="149" width="5.0403%" height="15" fill="rgb(251,118,11)" fg:x="3824" fg:w="313"/><text x="61.8281%" y="159.50">dateo_..</text></g><g><title>libsystem_m.dylib`trunc (19 samples, 0.31%)</title><rect x="66.3124%" y="133" width="0.3060%" height="15" fill="rgb(217,147,25)" fg:x="4118" fg:w="19"/><text x="66.5624%" y="143.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (1 samples, 0.02%)</title><rect x="66.6184%" y="149" width="0.0161%" height="15" fill="rgb(247,81,37)" fg:x="4137" fg:w="1"/><text x="66.8684%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (61 samples, 0.98%)</title><rect x="66.6345%" y="149" width="0.9823%" height="15" fill="rgb(209,12,38)" fg:x="4138" fg:w="61"/><text x="66.8845%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (9 samples, 0.14%)</title><rect x="67.6167%" y="149" width="0.1449%" height="15" fill="rgb(227,1,9)" fg:x="4199" fg:w="9"/><text x="67.8667%" y="159.50"></text></g><g><title>libsystem_m.dylib`trunc (2 samples, 0.03%)</title><rect x="67.7617%" y="149" width="0.0322%" height="15" fill="rgb(248,47,43)" fg:x="4208" fg:w="2"/><text x="68.0117%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (5 samples, 0.08%)</title><rect x="67.7939%" y="149" width="0.0805%" height="15" fill="rgb(221,10,30)" fg:x="4210" fg:w="5"/><text x="68.0439%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (3 samples, 0.05%)</title><rect x="67.8744%" y="149" width="0.0483%" height="15" fill="rgb(210,229,1)" fg:x="4215" fg:w="3"/><text x="68.1244%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (4 samples, 0.06%)</title><rect x="67.9227%" y="149" width="0.0644%" height="15" fill="rgb(222,148,37)" fg:x="4218" fg:w="4"/><text x="68.1727%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (1 samples, 0.02%)</title><rect x="67.9871%" y="149" width="0.0161%" height="15" fill="rgb(234,67,33)" fg:x="4222" fg:w="1"/><text x="68.2371%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (3 samples, 0.05%)</title><rect x="68.0032%" y="149" width="0.0483%" height="15" fill="rgb(247,98,35)" fg:x="4223" fg:w="3"/><text x="68.2532%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (1 samples, 0.02%)</title><rect x="68.0515%" y="149" width="0.0161%" height="15" fill="rgb(247,138,52)" fg:x="4226" fg:w="1"/><text x="68.3015%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (11 samples, 0.18%)</title><rect x="68.0676%" y="149" width="0.1771%" height="15" fill="rgb(213,79,30)" fg:x="4227" fg:w="11"/><text x="68.3176%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (32 samples, 0.52%)</title><rect x="68.2448%" y="149" width="0.5153%" height="15" fill="rgb(246,177,23)" fg:x="4238" fg:w="32"/><text x="68.4948%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (3 samples, 0.05%)</title><rect x="68.7601%" y="149" width="0.0483%" height="15" fill="rgb(230,62,27)" fg:x="4270" fg:w="3"/><text x="69.0101%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (16 samples, 0.26%)</title><rect x="68.8084%" y="149" width="0.2576%" height="15" fill="rgb(216,154,8)" fg:x="4273" fg:w="16"/><text x="69.0584%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (2 samples, 0.03%)</title><rect x="69.0660%" y="149" width="0.0322%" height="15" fill="rgb(244,35,45)" fg:x="4289" fg:w="2"/><text x="69.3160%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (1 samples, 0.02%)</title><rect x="69.0982%" y="149" width="0.0161%" height="15" fill="rgb(251,115,12)" fg:x="4291" fg:w="1"/><text x="69.3482%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (7 samples, 0.11%)</title><rect x="69.1143%" y="149" width="0.1127%" height="15" fill="rgb(240,54,50)" fg:x="4292" fg:w="7"/><text x="69.3643%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (1 samples, 0.02%)</title><rect x="69.2271%" y="149" width="0.0161%" height="15" fill="rgb(233,84,52)" fg:x="4299" fg:w="1"/><text x="69.4771%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (2 samples, 0.03%)</title><rect x="69.2432%" y="149" width="0.0322%" height="15" fill="rgb(207,117,47)" fg:x="4300" fg:w="2"/><text x="69.4932%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20943e (1 samples, 0.02%)</title><rect x="69.2754%" y="149" width="0.0161%" height="15" fill="rgb(249,43,39)" fg:x="4302" fg:w="1"/><text x="69.5254%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (2 samples, 0.03%)</title><rect x="69.2915%" y="149" width="0.0322%" height="15" fill="rgb(209,38,44)" fg:x="4303" fg:w="2"/><text x="69.5415%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (2 samples, 0.03%)</title><rect x="69.3237%" y="149" width="0.0322%" height="15" fill="rgb(236,212,23)" fg:x="4305" fg:w="2"/><text x="69.5737%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (6 samples, 0.10%)</title><rect x="69.3559%" y="149" width="0.0966%" height="15" fill="rgb(242,79,21)" fg:x="4307" fg:w="6"/><text x="69.6059%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (3 samples, 0.05%)</title><rect x="69.4525%" y="149" width="0.0483%" height="15" fill="rgb(211,96,35)" fg:x="4313" fg:w="3"/><text x="69.7025%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (3 samples, 0.05%)</title><rect x="69.5008%" y="149" width="0.0483%" height="15" fill="rgb(253,215,40)" fg:x="4316" fg:w="3"/><text x="69.7508%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (2 samples, 0.03%)</title><rect x="69.5491%" y="149" width="0.0322%" height="15" fill="rgb(211,81,21)" fg:x="4319" fg:w="2"/><text x="69.7991%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094c1 (1 samples, 0.02%)</title><rect x="69.5813%" y="149" width="0.0161%" height="15" fill="rgb(208,190,38)" fg:x="4321" fg:w="1"/><text x="69.8313%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (18 samples, 0.29%)</title><rect x="69.5974%" y="149" width="0.2899%" height="15" fill="rgb(235,213,38)" fg:x="4322" fg:w="18"/><text x="69.8474%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (2 samples, 0.03%)</title><rect x="69.8873%" y="149" width="0.0322%" height="15" fill="rgb(237,122,38)" fg:x="4340" fg:w="2"/><text x="70.1373%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (1 samples, 0.02%)</title><rect x="69.9195%" y="149" width="0.0161%" height="15" fill="rgb(244,218,35)" fg:x="4342" fg:w="1"/><text x="70.1695%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (6 samples, 0.10%)</title><rect x="69.9356%" y="149" width="0.0966%" height="15" fill="rgb(240,68,47)" fg:x="4343" fg:w="6"/><text x="70.1856%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (2 samples, 0.03%)</title><rect x="70.0322%" y="149" width="0.0322%" height="15" fill="rgb(210,16,53)" fg:x="4349" fg:w="2"/><text x="70.2822%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (1 samples, 0.02%)</title><rect x="70.0644%" y="149" width="0.0161%" height="15" fill="rgb(235,124,12)" fg:x="4351" fg:w="1"/><text x="70.3144%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (1 samples, 0.02%)</title><rect x="70.0805%" y="149" width="0.0161%" height="15" fill="rgb(224,169,11)" fg:x="4352" fg:w="1"/><text x="70.3305%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (35 samples, 0.56%)</title><rect x="70.0966%" y="149" width="0.5636%" height="15" fill="rgb(250,166,2)" fg:x="4353" fg:w="35"/><text x="70.3466%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (1 samples, 0.02%)</title><rect x="70.6602%" y="149" width="0.0161%" height="15" fill="rgb(242,216,29)" fg:x="4388" fg:w="1"/><text x="70.9102%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (3 samples, 0.05%)</title><rect x="70.6763%" y="149" width="0.0483%" height="15" fill="rgb(230,116,27)" fg:x="4389" fg:w="3"/><text x="70.9263%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (2 samples, 0.03%)</title><rect x="70.7246%" y="149" width="0.0322%" height="15" fill="rgb(228,99,48)" fg:x="4392" fg:w="2"/><text x="70.9746%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (1 samples, 0.02%)</title><rect x="70.7568%" y="149" width="0.0161%" height="15" fill="rgb(253,11,6)" fg:x="4394" fg:w="1"/><text x="71.0068%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (2 samples, 0.03%)</title><rect x="70.7729%" y="149" width="0.0322%" height="15" fill="rgb(247,143,39)" fg:x="4395" fg:w="2"/><text x="71.0229%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (855 samples, 13.77%)</title><rect x="57.1498%" y="165" width="13.7681%" height="15" fill="rgb(236,97,10)" fg:x="3549" fg:w="855"/><text x="57.3998%" y="175.50">dateo_fun_remover`&lt;al..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (7 samples, 0.11%)</title><rect x="70.8052%" y="149" width="0.1127%" height="15" fill="rgb(233,208,19)" fg:x="4397" fg:w="7"/><text x="71.0552%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="70.9179%" y="165" width="0.0161%" height="15" fill="rgb(216,164,2)" fg:x="4404" fg:w="1"/><text x="71.1679%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (6 samples, 0.10%)</title><rect x="70.9340%" y="165" width="0.0966%" height="15" fill="rgb(220,129,5)" fg:x="4405" fg:w="6"/><text x="71.1840%" y="175.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (1 samples, 0.02%)</title><rect x="71.0306%" y="165" width="0.0161%" height="15" fill="rgb(242,17,10)" fg:x="4411" fg:w="1"/><text x="71.2806%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="71.0467%" y="165" width="0.0161%" height="15" fill="rgb(242,107,0)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="71.0467%" y="149" width="0.0161%" height="15" fill="rgb(251,28,31)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (1 samples, 0.02%)</title><rect x="71.0467%" y="133" width="0.0161%" height="15" fill="rgb(233,223,10)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (1 samples, 0.02%)</title><rect x="71.0467%" y="117" width="0.0161%" height="15" fill="rgb(215,21,27)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7a0 (1 samples, 0.02%)</title><rect x="71.0467%" y="101" width="0.0161%" height="15" fill="rgb(232,23,21)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a464 (1 samples, 0.02%)</title><rect x="71.0467%" y="85" width="0.0161%" height="15" fill="rgb(244,5,23)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b712 (1 samples, 0.02%)</title><rect x="71.0467%" y="69" width="0.0161%" height="15" fill="rgb(226,81,46)" fg:x="4412" fg:w="1"/><text x="71.2967%" y="79.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (15 samples, 0.24%)</title><rect x="71.0628%" y="165" width="0.2415%" height="15" fill="rgb(247,70,30)" fg:x="4413" fg:w="15"/><text x="71.3128%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (1 samples, 0.02%)</title><rect x="71.3043%" y="165" width="0.0161%" height="15" fill="rgb(212,68,19)" fg:x="4428" fg:w="1"/><text x="71.5543%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (3 samples, 0.05%)</title><rect x="71.3205%" y="165" width="0.0483%" height="15" fill="rgb(240,187,13)" fg:x="4429" fg:w="3"/><text x="71.5705%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (3 samples, 0.05%)</title><rect x="71.3688%" y="165" width="0.0483%" height="15" fill="rgb(223,113,26)" fg:x="4432" fg:w="3"/><text x="71.6188%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (2 samples, 0.03%)</title><rect x="71.4171%" y="165" width="0.0322%" height="15" fill="rgb(206,192,2)" fg:x="4435" fg:w="2"/><text x="71.6671%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (2 samples, 0.03%)</title><rect x="71.4493%" y="165" width="0.0322%" height="15" fill="rgb(241,108,4)" fg:x="4437" fg:w="2"/><text x="71.6993%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (1 samples, 0.02%)</title><rect x="71.4815%" y="165" width="0.0161%" height="15" fill="rgb(247,173,49)" fg:x="4439" fg:w="1"/><text x="71.7315%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (1 samples, 0.02%)</title><rect x="71.4976%" y="165" width="0.0161%" height="15" fill="rgb(224,114,35)" fg:x="4440" fg:w="1"/><text x="71.7476%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (2 samples, 0.03%)</title><rect x="71.5137%" y="165" width="0.0322%" height="15" fill="rgb(245,159,27)" fg:x="4441" fg:w="2"/><text x="71.7637%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (1 samples, 0.02%)</title><rect x="71.5459%" y="165" width="0.0161%" height="15" fill="rgb(245,172,44)" fg:x="4443" fg:w="1"/><text x="71.7959%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (2 samples, 0.03%)</title><rect x="71.5620%" y="165" width="0.0322%" height="15" fill="rgb(236,23,11)" fg:x="4444" fg:w="2"/><text x="71.8120%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (3 samples, 0.05%)</title><rect x="71.5942%" y="165" width="0.0483%" height="15" fill="rgb(205,117,38)" fg:x="4446" fg:w="3"/><text x="71.8442%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382d (1 samples, 0.02%)</title><rect x="71.6425%" y="165" width="0.0161%" height="15" fill="rgb(237,72,25)" fg:x="4449" fg:w="1"/><text x="71.8925%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (2 samples, 0.03%)</title><rect x="71.6586%" y="165" width="0.0322%" height="15" fill="rgb(244,70,9)" fg:x="4450" fg:w="2"/><text x="71.9086%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (1 samples, 0.02%)</title><rect x="71.6908%" y="165" width="0.0161%" height="15" fill="rgb(217,125,39)" fg:x="4452" fg:w="1"/><text x="71.9408%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (1 samples, 0.02%)</title><rect x="71.7069%" y="165" width="0.0161%" height="15" fill="rgb(235,36,10)" fg:x="4453" fg:w="1"/><text x="71.9569%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (2 samples, 0.03%)</title><rect x="71.7230%" y="165" width="0.0322%" height="15" fill="rgb(251,123,47)" fg:x="4454" fg:w="2"/><text x="71.9730%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (53 samples, 0.85%)</title><rect x="71.7552%" y="165" width="0.8535%" height="15" fill="rgb(221,13,13)" fg:x="4456" fg:w="53"/><text x="72.0052%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (3 samples, 0.05%)</title><rect x="72.6087%" y="165" width="0.0483%" height="15" fill="rgb(238,131,9)" fg:x="4509" fg:w="3"/><text x="72.8587%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (1 samples, 0.02%)</title><rect x="72.6570%" y="165" width="0.0161%" height="15" fill="rgb(211,50,8)" fg:x="4512" fg:w="1"/><text x="72.9070%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (1 samples, 0.02%)</title><rect x="72.6731%" y="165" width="0.0161%" height="15" fill="rgb(245,182,24)" fg:x="4513" fg:w="1"/><text x="72.9231%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (18 samples, 0.29%)</title><rect x="72.6892%" y="165" width="0.2899%" height="15" fill="rgb(242,14,37)" fg:x="4514" fg:w="18"/><text x="72.9392%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (18 samples, 0.29%)</title><rect x="72.6892%" y="149" width="0.2899%" height="15" fill="rgb(246,228,12)" fg:x="4514" fg:w="18"/><text x="72.9392%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223908 (1 samples, 0.02%)</title><rect x="72.9791%" y="165" width="0.0161%" height="15" fill="rgb(213,55,15)" fg:x="4532" fg:w="1"/><text x="73.2291%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223932 (1 samples, 0.02%)</title><rect x="72.9952%" y="165" width="0.0161%" height="15" fill="rgb(209,9,3)" fg:x="4533" fg:w="1"/><text x="73.2452%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22393f (1 samples, 0.02%)</title><rect x="73.0113%" y="165" width="0.0161%" height="15" fill="rgb(230,59,30)" fg:x="4534" fg:w="1"/><text x="73.2613%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223959 (1 samples, 0.02%)</title><rect x="73.0274%" y="165" width="0.0161%" height="15" fill="rgb(209,121,21)" fg:x="4535" fg:w="1"/><text x="73.2774%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223962 (1 samples, 0.02%)</title><rect x="73.0435%" y="165" width="0.0161%" height="15" fill="rgb(220,109,13)" fg:x="4536" fg:w="1"/><text x="73.2935%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (2 samples, 0.03%)</title><rect x="73.0596%" y="165" width="0.0322%" height="15" fill="rgb(232,18,1)" fg:x="4537" fg:w="2"/><text x="73.3096%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (29 samples, 0.47%)</title><rect x="73.0918%" y="165" width="0.4670%" height="15" fill="rgb(215,41,42)" fg:x="4539" fg:w="29"/><text x="73.3418%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a0 (1 samples, 0.02%)</title><rect x="73.5588%" y="165" width="0.0161%" height="15" fill="rgb(224,123,36)" fg:x="4568" fg:w="1"/><text x="73.8088%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (2 samples, 0.03%)</title><rect x="73.5749%" y="165" width="0.0322%" height="15" fill="rgb(240,125,3)" fg:x="4569" fg:w="2"/><text x="73.8249%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (3 samples, 0.05%)</title><rect x="73.6071%" y="165" width="0.0483%" height="15" fill="rgb(205,98,50)" fg:x="4571" fg:w="3"/><text x="73.8571%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (32 samples, 0.52%)</title><rect x="73.6554%" y="165" width="0.5153%" height="15" fill="rgb(205,185,37)" fg:x="4574" fg:w="32"/><text x="73.9054%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (2 samples, 0.03%)</title><rect x="74.1707%" y="165" width="0.0322%" height="15" fill="rgb(238,207,15)" fg:x="4606" fg:w="2"/><text x="74.4207%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (4 samples, 0.06%)</title><rect x="74.2029%" y="165" width="0.0644%" height="15" fill="rgb(213,199,42)" fg:x="4608" fg:w="4"/><text x="74.4529%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (2 samples, 0.03%)</title><rect x="74.2673%" y="165" width="0.0322%" height="15" fill="rgb(235,201,11)" fg:x="4612" fg:w="2"/><text x="74.5173%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfd (1 samples, 0.02%)</title><rect x="74.2995%" y="165" width="0.0161%" height="15" fill="rgb(207,46,11)" fg:x="4614" fg:w="1"/><text x="74.5495%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (4 samples, 0.06%)</title><rect x="74.3156%" y="165" width="0.0644%" height="15" fill="rgb(241,35,35)" fg:x="4615" fg:w="4"/><text x="74.5656%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (3 samples, 0.05%)</title><rect x="74.3800%" y="165" width="0.0483%" height="15" fill="rgb(243,32,47)" fg:x="4619" fg:w="3"/><text x="74.6300%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (3 samples, 0.05%)</title><rect x="74.4283%" y="165" width="0.0483%" height="15" fill="rgb(247,202,23)" fg:x="4622" fg:w="3"/><text x="74.6783%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d1f (1 samples, 0.02%)</title><rect x="74.4767%" y="165" width="0.0161%" height="15" fill="rgb(219,102,11)" fg:x="4625" fg:w="1"/><text x="74.7267%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (4 samples, 0.06%)</title><rect x="74.4928%" y="165" width="0.0644%" height="15" fill="rgb(243,110,44)" fg:x="4626" fg:w="4"/><text x="74.7428%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (3 samples, 0.05%)</title><rect x="74.5572%" y="165" width="0.0483%" height="15" fill="rgb(222,74,54)" fg:x="4630" fg:w="3"/><text x="74.8072%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="74.6055%" y="165" width="0.0161%" height="15" fill="rgb(216,99,12)" fg:x="4633" fg:w="1"/><text x="74.8555%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="74.6216%" y="165" width="0.0483%" height="15" fill="rgb(226,22,26)" fg:x="4634" fg:w="3"/><text x="74.8716%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (1,143 samples, 18.41%)</title><rect x="56.4090%" y="181" width="18.4058%" height="15" fill="rgb(217,163,10)" fg:x="3503" fg:w="1143"/><text x="56.6590%" y="191.50">dateo_fun_remover`dateo_fun_r..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.14%)</title><rect x="74.6699%" y="165" width="0.1449%" height="15" fill="rgb(213,25,53)" fg:x="4637" fg:w="9"/><text x="74.9199%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (191 samples, 3.08%)</title><rect x="74.9436%" y="165" width="3.0757%" height="15" fill="rgb(252,105,26)" fg:x="4654" fg:w="191"/><text x="75.1936%" y="175.50">dat..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d671 (1 samples, 0.02%)</title><rect x="78.0193%" y="101" width="0.0161%" height="15" fill="rgb(220,39,43)" fg:x="4845" fg:w="1"/><text x="78.2693%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ddf (1 samples, 0.02%)</title><rect x="78.0193%" y="85" width="0.0161%" height="15" fill="rgb(229,68,48)" fg:x="4845" fg:w="1"/><text x="78.2693%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.02%)</title><rect x="78.0193%" y="69" width="0.0161%" height="15" fill="rgb(252,8,32)" fg:x="4845" fg:w="1"/><text x="78.2693%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.02%)</title><rect x="78.0193%" y="53" width="0.0161%" height="15" fill="rgb(223,20,43)" fg:x="4845" fg:w="1"/><text x="78.2693%" y="63.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="78.0193%" y="165" width="0.0322%" height="15" fill="rgb(229,81,49)" fg:x="4845" fg:w="2"/><text x="78.2693%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="78.0193%" y="149" width="0.0322%" height="15" fill="rgb(236,28,36)" fg:x="4845" fg:w="2"/><text x="78.2693%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (2 samples, 0.03%)</title><rect x="78.0193%" y="133" width="0.0322%" height="15" fill="rgb(249,185,26)" fg:x="4845" fg:w="2"/><text x="78.2693%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (2 samples, 0.03%)</title><rect x="78.0193%" y="117" width="0.0322%" height="15" fill="rgb(249,174,33)" fg:x="4845" fg:w="2"/><text x="78.2693%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (1 samples, 0.02%)</title><rect x="78.0354%" y="101" width="0.0161%" height="15" fill="rgb(233,201,37)" fg:x="4846" fg:w="1"/><text x="78.2854%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="78.0354%" y="85" width="0.0161%" height="15" fill="rgb(221,78,26)" fg:x="4846" fg:w="1"/><text x="78.2854%" y="95.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.08%)</title><rect x="78.5346%" y="133" width="0.0805%" height="15" fill="rgb(250,127,30)" fg:x="4877" fg:w="5"/><text x="78.7846%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (1 samples, 0.02%)</title><rect x="82.1900%" y="101" width="0.0161%" height="15" fill="rgb(230,49,44)" fg:x="5104" fg:w="1"/><text x="82.4400%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209395 (2 samples, 0.03%)</title><rect x="82.2061%" y="101" width="0.0322%" height="15" fill="rgb(229,67,23)" fg:x="5105" fg:w="2"/><text x="82.4561%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (2 samples, 0.03%)</title><rect x="82.2383%" y="101" width="0.0322%" height="15" fill="rgb(249,83,47)" fg:x="5107" fg:w="2"/><text x="82.4883%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (2 samples, 0.03%)</title><rect x="82.2705%" y="101" width="0.0322%" height="15" fill="rgb(215,43,3)" fg:x="5109" fg:w="2"/><text x="82.5205%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (5 samples, 0.08%)</title><rect x="82.3027%" y="101" width="0.0805%" height="15" fill="rgb(238,154,13)" fg:x="5111" fg:w="5"/><text x="82.5527%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (18 samples, 0.29%)</title><rect x="82.3833%" y="101" width="0.2899%" height="15" fill="rgb(219,56,2)" fg:x="5116" fg:w="18"/><text x="82.6333%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (3 samples, 0.05%)</title><rect x="82.6731%" y="101" width="0.0483%" height="15" fill="rgb(233,0,4)" fg:x="5134" fg:w="3"/><text x="82.9231%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (9 samples, 0.14%)</title><rect x="82.7214%" y="101" width="0.1449%" height="15" fill="rgb(235,30,7)" fg:x="5137" fg:w="9"/><text x="82.9714%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (1 samples, 0.02%)</title><rect x="82.8663%" y="101" width="0.0161%" height="15" fill="rgb(250,79,13)" fg:x="5146" fg:w="1"/><text x="83.1163%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (2 samples, 0.03%)</title><rect x="82.8824%" y="101" width="0.0322%" height="15" fill="rgb(211,146,34)" fg:x="5147" fg:w="2"/><text x="83.1324%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (6 samples, 0.10%)</title><rect x="82.9147%" y="101" width="0.0966%" height="15" fill="rgb(228,22,38)" fg:x="5149" fg:w="6"/><text x="83.1647%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (2 samples, 0.03%)</title><rect x="83.0113%" y="101" width="0.0322%" height="15" fill="rgb(235,168,5)" fg:x="5155" fg:w="2"/><text x="83.2613%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (1 samples, 0.02%)</title><rect x="83.0435%" y="101" width="0.0161%" height="15" fill="rgb(221,155,16)" fg:x="5157" fg:w="1"/><text x="83.2935%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (2 samples, 0.03%)</title><rect x="83.0596%" y="101" width="0.0322%" height="15" fill="rgb(215,215,53)" fg:x="5158" fg:w="2"/><text x="83.3096%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (2 samples, 0.03%)</title><rect x="83.0918%" y="101" width="0.0322%" height="15" fill="rgb(223,4,10)" fg:x="5160" fg:w="2"/><text x="83.3418%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (1 samples, 0.02%)</title><rect x="83.1240%" y="101" width="0.0161%" height="15" fill="rgb(234,103,6)" fg:x="5162" fg:w="1"/><text x="83.3740%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (4 samples, 0.06%)</title><rect x="83.1401%" y="101" width="0.0644%" height="15" fill="rgb(227,97,0)" fg:x="5163" fg:w="4"/><text x="83.3901%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (1 samples, 0.02%)</title><rect x="83.2045%" y="101" width="0.0161%" height="15" fill="rgb(234,150,53)" fg:x="5167" fg:w="1"/><text x="83.4545%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (8 samples, 0.13%)</title><rect x="83.2206%" y="101" width="0.1288%" height="15" fill="rgb(228,201,54)" fg:x="5168" fg:w="8"/><text x="83.4706%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (2 samples, 0.03%)</title><rect x="83.3494%" y="101" width="0.0322%" height="15" fill="rgb(222,22,37)" fg:x="5176" fg:w="2"/><text x="83.5994%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (12 samples, 0.19%)</title><rect x="83.3816%" y="101" width="0.1932%" height="15" fill="rgb(237,53,32)" fg:x="5178" fg:w="12"/><text x="83.6316%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (2 samples, 0.03%)</title><rect x="83.5749%" y="101" width="0.0322%" height="15" fill="rgb(233,25,53)" fg:x="5190" fg:w="2"/><text x="83.8249%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (18 samples, 0.29%)</title><rect x="83.6071%" y="101" width="0.2899%" height="15" fill="rgb(210,40,34)" fg:x="5192" fg:w="18"/><text x="83.8571%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20955a (1 samples, 0.02%)</title><rect x="83.8969%" y="101" width="0.0161%" height="15" fill="rgb(241,220,44)" fg:x="5210" fg:w="1"/><text x="84.1469%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (1 samples, 0.02%)</title><rect x="83.9130%" y="101" width="0.0161%" height="15" fill="rgb(235,28,35)" fg:x="5211" fg:w="1"/><text x="84.1630%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (1 samples, 0.02%)</title><rect x="83.9291%" y="101" width="0.0161%" height="15" fill="rgb(210,56,17)" fg:x="5212" fg:w="1"/><text x="84.1791%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (2 samples, 0.03%)</title><rect x="83.9452%" y="101" width="0.0322%" height="15" fill="rgb(224,130,29)" fg:x="5213" fg:w="2"/><text x="84.1952%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (269 samples, 4.33%)</title><rect x="79.6618%" y="117" width="4.3317%" height="15" fill="rgb(235,212,8)" fg:x="4947" fg:w="269"/><text x="79.9118%" y="127.50">dateo..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (1 samples, 0.02%)</title><rect x="83.9775%" y="101" width="0.0161%" height="15" fill="rgb(223,33,50)" fg:x="5215" fg:w="1"/><text x="84.2275%" y="111.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (3 samples, 0.05%)</title><rect x="83.9936%" y="117" width="0.0483%" height="15" fill="rgb(219,149,13)" fg:x="5216" fg:w="3"/><text x="84.2436%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (1 samples, 0.02%)</title><rect x="84.0419%" y="117" width="0.0161%" height="15" fill="rgb(250,156,29)" fg:x="5219" fg:w="1"/><text x="84.2919%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20938f (2 samples, 0.03%)</title><rect x="84.0580%" y="117" width="0.0322%" height="15" fill="rgb(216,193,19)" fg:x="5220" fg:w="2"/><text x="84.3080%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (3 samples, 0.05%)</title><rect x="84.0902%" y="117" width="0.0483%" height="15" fill="rgb(216,135,14)" fg:x="5222" fg:w="3"/><text x="84.3402%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223704 (1 samples, 0.02%)</title><rect x="84.1385%" y="117" width="0.0161%" height="15" fill="rgb(241,47,5)" fg:x="5225" fg:w="1"/><text x="84.3885%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (1 samples, 0.02%)</title><rect x="84.1546%" y="117" width="0.0161%" height="15" fill="rgb(233,42,35)" fg:x="5226" fg:w="1"/><text x="84.4046%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (2 samples, 0.03%)</title><rect x="84.1707%" y="117" width="0.0322%" height="15" fill="rgb(231,13,6)" fg:x="5227" fg:w="2"/><text x="84.4207%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (1 samples, 0.02%)</title><rect x="84.2029%" y="117" width="0.0161%" height="15" fill="rgb(207,181,40)" fg:x="5229" fg:w="1"/><text x="84.4529%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (1 samples, 0.02%)</title><rect x="84.2190%" y="117" width="0.0161%" height="15" fill="rgb(254,173,49)" fg:x="5230" fg:w="1"/><text x="84.4690%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (2 samples, 0.03%)</title><rect x="84.2351%" y="117" width="0.0322%" height="15" fill="rgb(221,1,38)" fg:x="5231" fg:w="2"/><text x="84.4851%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ef (1 samples, 0.02%)</title><rect x="84.2673%" y="117" width="0.0161%" height="15" fill="rgb(206,124,46)" fg:x="5233" fg:w="1"/><text x="84.5173%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (2 samples, 0.03%)</title><rect x="84.2834%" y="117" width="0.0322%" height="15" fill="rgb(249,21,11)" fg:x="5234" fg:w="2"/><text x="84.5334%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (1 samples, 0.02%)</title><rect x="84.3156%" y="117" width="0.0161%" height="15" fill="rgb(222,201,40)" fg:x="5236" fg:w="1"/><text x="84.5656%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (1 samples, 0.02%)</title><rect x="84.3317%" y="117" width="0.0161%" height="15" fill="rgb(235,61,29)" fg:x="5237" fg:w="1"/><text x="84.5817%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (1 samples, 0.02%)</title><rect x="84.3478%" y="117" width="0.0161%" height="15" fill="rgb(219,207,3)" fg:x="5238" fg:w="1"/><text x="84.5978%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (1 samples, 0.02%)</title><rect x="84.3639%" y="117" width="0.0161%" height="15" fill="rgb(222,56,46)" fg:x="5239" fg:w="1"/><text x="84.6139%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (2 samples, 0.03%)</title><rect x="84.3800%" y="117" width="0.0322%" height="15" fill="rgb(239,76,54)" fg:x="5240" fg:w="2"/><text x="84.6300%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223866 (1 samples, 0.02%)</title><rect x="84.4122%" y="117" width="0.0161%" height="15" fill="rgb(231,124,27)" fg:x="5242" fg:w="1"/><text x="84.6622%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223876 (1 samples, 0.02%)</title><rect x="84.4283%" y="117" width="0.0161%" height="15" fill="rgb(249,195,6)" fg:x="5243" fg:w="1"/><text x="84.6783%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (1 samples, 0.02%)</title><rect x="84.4444%" y="117" width="0.0161%" height="15" fill="rgb(237,174,47)" fg:x="5244" fg:w="1"/><text x="84.6944%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (2 samples, 0.03%)</title><rect x="84.4605%" y="117" width="0.0322%" height="15" fill="rgb(206,201,31)" fg:x="5245" fg:w="2"/><text x="84.7105%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (31 samples, 0.50%)</title><rect x="84.4928%" y="117" width="0.4992%" height="15" fill="rgb(231,57,52)" fg:x="5247" fg:w="31"/><text x="84.7428%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (1 samples, 0.02%)</title><rect x="84.9919%" y="117" width="0.0161%" height="15" fill="rgb(248,177,22)" fg:x="5278" fg:w="1"/><text x="85.2419%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (2 samples, 0.03%)</title><rect x="85.0081%" y="117" width="0.0322%" height="15" fill="rgb(215,211,37)" fg:x="5279" fg:w="2"/><text x="85.2581%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (1 samples, 0.02%)</title><rect x="85.0403%" y="117" width="0.0161%" height="15" fill="rgb(241,128,51)" fg:x="5281" fg:w="1"/><text x="85.2903%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (1 samples, 0.02%)</title><rect x="85.0564%" y="117" width="0.0161%" height="15" fill="rgb(227,165,31)" fg:x="5282" fg:w="1"/><text x="85.3064%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (21 samples, 0.34%)</title><rect x="85.0725%" y="117" width="0.3382%" height="15" fill="rgb(228,167,24)" fg:x="5283" fg:w="21"/><text x="85.3225%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (19 samples, 0.31%)</title><rect x="85.1047%" y="101" width="0.3060%" height="15" fill="rgb(228,143,12)" fg:x="5285" fg:w="19"/><text x="85.3547%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (1 samples, 0.02%)</title><rect x="85.4106%" y="117" width="0.0161%" height="15" fill="rgb(249,149,8)" fg:x="5304" fg:w="1"/><text x="85.6606%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (1 samples, 0.02%)</title><rect x="85.4267%" y="117" width="0.0161%" height="15" fill="rgb(243,35,44)" fg:x="5305" fg:w="1"/><text x="85.6767%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (1 samples, 0.02%)</title><rect x="85.4428%" y="117" width="0.0161%" height="15" fill="rgb(246,89,9)" fg:x="5306" fg:w="1"/><text x="85.6928%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (1 samples, 0.02%)</title><rect x="85.4589%" y="117" width="0.0161%" height="15" fill="rgb(233,213,13)" fg:x="5307" fg:w="1"/><text x="85.7089%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (2 samples, 0.03%)</title><rect x="85.4750%" y="117" width="0.0322%" height="15" fill="rgb(233,141,41)" fg:x="5308" fg:w="2"/><text x="85.7250%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (2 samples, 0.03%)</title><rect x="85.5072%" y="117" width="0.0322%" height="15" fill="rgb(239,167,4)" fg:x="5310" fg:w="2"/><text x="85.7572%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395d (3 samples, 0.05%)</title><rect x="85.5395%" y="117" width="0.0483%" height="15" fill="rgb(209,217,16)" fg:x="5312" fg:w="3"/><text x="85.7895%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396c (2 samples, 0.03%)</title><rect x="85.5878%" y="117" width="0.0322%" height="15" fill="rgb(219,88,35)" fg:x="5315" fg:w="2"/><text x="85.8378%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223989 (2 samples, 0.03%)</title><rect x="85.6200%" y="117" width="0.0322%" height="15" fill="rgb(220,193,23)" fg:x="5317" fg:w="2"/><text x="85.8700%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (7 samples, 0.11%)</title><rect x="85.6522%" y="117" width="0.1127%" height="15" fill="rgb(230,90,52)" fg:x="5319" fg:w="7"/><text x="85.9022%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223994 (1 samples, 0.02%)</title><rect x="85.7649%" y="117" width="0.0161%" height="15" fill="rgb(252,106,19)" fg:x="5326" fg:w="1"/><text x="86.0149%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (9 samples, 0.14%)</title><rect x="85.7810%" y="117" width="0.1449%" height="15" fill="rgb(206,74,20)" fg:x="5327" fg:w="9"/><text x="86.0310%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a2 (1 samples, 0.02%)</title><rect x="85.9259%" y="117" width="0.0161%" height="15" fill="rgb(230,138,44)" fg:x="5336" fg:w="1"/><text x="86.1759%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (1 samples, 0.02%)</title><rect x="85.9420%" y="117" width="0.0161%" height="15" fill="rgb(235,182,43)" fg:x="5337" fg:w="1"/><text x="86.1920%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (17 samples, 0.27%)</title><rect x="85.9581%" y="117" width="0.2738%" height="15" fill="rgb(242,16,51)" fg:x="5338" fg:w="17"/><text x="86.2081%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f6 (1 samples, 0.02%)</title><rect x="86.2319%" y="117" width="0.0161%" height="15" fill="rgb(248,9,4)" fg:x="5355" fg:w="1"/><text x="86.4819%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (2 samples, 0.03%)</title><rect x="86.2480%" y="117" width="0.0322%" height="15" fill="rgb(210,31,22)" fg:x="5356" fg:w="2"/><text x="86.4980%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (2 samples, 0.03%)</title><rect x="86.2802%" y="117" width="0.0322%" height="15" fill="rgb(239,54,39)" fg:x="5358" fg:w="2"/><text x="86.5302%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (5 samples, 0.08%)</title><rect x="86.3124%" y="117" width="0.0805%" height="15" fill="rgb(230,99,41)" fg:x="5360" fg:w="5"/><text x="86.5624%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (3 samples, 0.05%)</title><rect x="86.3929%" y="117" width="0.0483%" height="15" fill="rgb(253,106,12)" fg:x="5365" fg:w="3"/><text x="86.6429%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfa (1 samples, 0.02%)</title><rect x="86.4412%" y="117" width="0.0161%" height="15" fill="rgb(213,46,41)" fg:x="5368" fg:w="1"/><text x="86.6912%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (4 samples, 0.06%)</title><rect x="86.4573%" y="117" width="0.0644%" height="15" fill="rgb(215,133,35)" fg:x="5369" fg:w="4"/><text x="86.7073%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d06 (1 samples, 0.02%)</title><rect x="86.5217%" y="117" width="0.0161%" height="15" fill="rgb(213,28,5)" fg:x="5373" fg:w="1"/><text x="86.7717%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (2 samples, 0.03%)</title><rect x="86.5378%" y="117" width="0.0322%" height="15" fill="rgb(215,77,49)" fg:x="5374" fg:w="2"/><text x="86.7878%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (1 samples, 0.02%)</title><rect x="86.5700%" y="117" width="0.0161%" height="15" fill="rgb(248,100,22)" fg:x="5376" fg:w="1"/><text x="86.8200%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (3 samples, 0.05%)</title><rect x="86.5862%" y="117" width="0.0483%" height="15" fill="rgb(208,67,9)" fg:x="5377" fg:w="3"/><text x="86.8362%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (499 samples, 8.04%)</title><rect x="78.6151%" y="133" width="8.0354%" height="15" fill="rgb(219,133,21)" fg:x="4882" fg:w="499"/><text x="78.8651%" y="143.50">dateo_fun_r..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="86.6345%" y="117" width="0.0161%" height="15" fill="rgb(246,46,29)" fg:x="5380" fg:w="1"/><text x="86.8845%" y="127.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$log (1 samples, 0.02%)</title><rect x="86.6506%" y="133" width="0.0161%" height="15" fill="rgb(246,185,52)" fg:x="5381" fg:w="1"/><text x="86.9006%" y="143.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$pow (1 samples, 0.02%)</title><rect x="86.6667%" y="133" width="0.0161%" height="15" fill="rgb(252,136,11)" fg:x="5382" fg:w="1"/><text x="86.9167%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (4 samples, 0.06%)</title><rect x="86.6828%" y="133" width="0.0644%" height="15" fill="rgb(219,138,53)" fg:x="5383" fg:w="4"/><text x="86.9328%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (3 samples, 0.05%)</title><rect x="86.9082%" y="101" width="0.0483%" height="15" fill="rgb(211,51,23)" fg:x="5397" fg:w="3"/><text x="87.1582%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e96 (1 samples, 0.02%)</title><rect x="86.9565%" y="101" width="0.0161%" height="15" fill="rgb(247,221,28)" fg:x="5400" fg:w="1"/><text x="87.2065%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209ebe (1 samples, 0.02%)</title><rect x="86.9726%" y="101" width="0.0161%" height="15" fill="rgb(251,222,45)" fg:x="5401" fg:w="1"/><text x="87.2226%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f7b (2 samples, 0.03%)</title><rect x="86.9887%" y="101" width="0.0322%" height="15" fill="rgb(217,162,53)" fg:x="5402" fg:w="2"/><text x="87.2387%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f8b (1 samples, 0.02%)</title><rect x="87.0209%" y="101" width="0.0161%" height="15" fill="rgb(229,93,14)" fg:x="5404" fg:w="1"/><text x="87.2709%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f96 (1 samples, 0.02%)</title><rect x="87.0370%" y="101" width="0.0161%" height="15" fill="rgb(209,67,49)" fg:x="5405" fg:w="1"/><text x="87.2870%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fba (1 samples, 0.02%)</title><rect x="87.0531%" y="101" width="0.0161%" height="15" fill="rgb(213,87,29)" fg:x="5406" fg:w="1"/><text x="87.3031%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fca (1 samples, 0.02%)</title><rect x="87.0692%" y="101" width="0.0161%" height="15" fill="rgb(205,151,52)" fg:x="5407" fg:w="1"/><text x="87.3192%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fda (1 samples, 0.02%)</title><rect x="87.0853%" y="101" width="0.0161%" height="15" fill="rgb(253,215,39)" fg:x="5408" fg:w="1"/><text x="87.3353%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (6 samples, 0.10%)</title><rect x="87.1014%" y="101" width="0.0966%" height="15" fill="rgb(221,220,41)" fg:x="5409" fg:w="6"/><text x="87.3514%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b142 (1 samples, 0.02%)</title><rect x="87.1981%" y="101" width="0.0161%" height="15" fill="rgb(218,133,21)" fg:x="5415" fg:w="1"/><text x="87.4481%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c65f (1 samples, 0.02%)</title><rect x="87.2142%" y="85" width="0.0161%" height="15" fill="rgb(221,193,43)" fg:x="5416" fg:w="1"/><text x="87.4642%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a05a (1 samples, 0.02%)</title><rect x="87.2303%" y="69" width="0.0161%" height="15" fill="rgb(240,128,52)" fg:x="5417" fg:w="1"/><text x="87.4803%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a127 (1 samples, 0.02%)</title><rect x="87.2464%" y="69" width="0.0161%" height="15" fill="rgb(253,114,12)" fg:x="5418" fg:w="1"/><text x="87.4964%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a12b (1 samples, 0.02%)</title><rect x="87.2625%" y="69" width="0.0161%" height="15" fill="rgb(215,223,47)" fg:x="5419" fg:w="1"/><text x="87.5125%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a146 (1 samples, 0.02%)</title><rect x="87.2786%" y="69" width="0.0161%" height="15" fill="rgb(248,225,23)" fg:x="5420" fg:w="1"/><text x="87.5286%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a15f (1 samples, 0.02%)</title><rect x="87.2947%" y="69" width="0.0161%" height="15" fill="rgb(250,108,0)" fg:x="5421" fg:w="1"/><text x="87.5447%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (15 samples, 0.24%)</title><rect x="87.3108%" y="69" width="0.2415%" height="15" fill="rgb(228,208,7)" fg:x="5422" fg:w="15"/><text x="87.5608%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c768 (1 samples, 0.02%)</title><rect x="87.5523%" y="69" width="0.0161%" height="15" fill="rgb(244,45,10)" fg:x="5437" fg:w="1"/><text x="87.8023%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (2 samples, 0.03%)</title><rect x="87.5684%" y="53" width="0.0322%" height="15" fill="rgb(207,125,25)" fg:x="5438" fg:w="2"/><text x="87.8184%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (1 samples, 0.02%)</title><rect x="87.6006%" y="53" width="0.0161%" height="15" fill="rgb(210,195,18)" fg:x="5440" fg:w="1"/><text x="87.8506%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (2 samples, 0.03%)</title><rect x="87.6167%" y="53" width="0.0322%" height="15" fill="rgb(249,80,12)" fg:x="5441" fg:w="2"/><text x="87.8667%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (5 samples, 0.08%)</title><rect x="87.6490%" y="53" width="0.0805%" height="15" fill="rgb(221,65,9)" fg:x="5443" fg:w="5"/><text x="87.8990%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (1 samples, 0.02%)</title><rect x="87.7295%" y="53" width="0.0161%" height="15" fill="rgb(235,49,36)" fg:x="5448" fg:w="1"/><text x="87.9795%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (1 samples, 0.02%)</title><rect x="87.7456%" y="53" width="0.0161%" height="15" fill="rgb(225,32,20)" fg:x="5449" fg:w="1"/><text x="87.9956%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (1 samples, 0.02%)</title><rect x="87.7617%" y="53" width="0.0161%" height="15" fill="rgb(215,141,46)" fg:x="5450" fg:w="1"/><text x="88.0117%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (1 samples, 0.02%)</title><rect x="87.7778%" y="53" width="0.0161%" height="15" fill="rgb(250,160,47)" fg:x="5451" fg:w="1"/><text x="88.0278%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (1 samples, 0.02%)</title><rect x="87.7939%" y="53" width="0.0161%" height="15" fill="rgb(216,222,40)" fg:x="5452" fg:w="1"/><text x="88.0439%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (2 samples, 0.03%)</title><rect x="87.8100%" y="53" width="0.0322%" height="15" fill="rgb(234,217,39)" fg:x="5453" fg:w="2"/><text x="88.0600%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094c9 (1 samples, 0.02%)</title><rect x="87.8422%" y="53" width="0.0161%" height="15" fill="rgb(207,178,40)" fg:x="5455" fg:w="1"/><text x="88.0922%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (4 samples, 0.06%)</title><rect x="87.8583%" y="53" width="0.0644%" height="15" fill="rgb(221,136,13)" fg:x="5456" fg:w="4"/><text x="88.1083%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (1 samples, 0.02%)</title><rect x="87.9227%" y="53" width="0.0161%" height="15" fill="rgb(249,199,10)" fg:x="5460" fg:w="1"/><text x="88.1727%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (3 samples, 0.05%)</title><rect x="87.9388%" y="53" width="0.0483%" height="15" fill="rgb(249,222,13)" fg:x="5461" fg:w="3"/><text x="88.1888%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (1 samples, 0.02%)</title><rect x="87.9871%" y="53" width="0.0161%" height="15" fill="rgb(244,185,38)" fg:x="5464" fg:w="1"/><text x="88.2371%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (28 samples, 0.45%)</title><rect x="87.5684%" y="69" width="0.4509%" height="15" fill="rgb(236,202,9)" fg:x="5438" fg:w="28"/><text x="87.8184%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20955a (1 samples, 0.02%)</title><rect x="88.0032%" y="53" width="0.0161%" height="15" fill="rgb(250,229,37)" fg:x="5465" fg:w="1"/><text x="88.2532%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c85d (1 samples, 0.02%)</title><rect x="88.0193%" y="69" width="0.0161%" height="15" fill="rgb(206,174,23)" fg:x="5466" fg:w="1"/><text x="88.2693%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (2 samples, 0.03%)</title><rect x="88.0354%" y="69" width="0.0322%" height="15" fill="rgb(211,33,43)" fg:x="5467" fg:w="2"/><text x="88.2854%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="88.0354%" y="53" width="0.0322%" height="15" fill="rgb(245,58,50)" fg:x="5467" fg:w="2"/><text x="88.2854%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223819 (1 samples, 0.02%)</title><rect x="88.0676%" y="53" width="0.0161%" height="15" fill="rgb(244,68,36)" fg:x="5469" fg:w="1"/><text x="88.3176%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (1 samples, 0.02%)</title><rect x="88.0837%" y="53" width="0.0161%" height="15" fill="rgb(232,229,15)" fg:x="5470" fg:w="1"/><text x="88.3337%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223849 (1 samples, 0.02%)</title><rect x="88.0998%" y="53" width="0.0161%" height="15" fill="rgb(254,30,23)" fg:x="5471" fg:w="1"/><text x="88.3498%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (10 samples, 0.16%)</title><rect x="88.1159%" y="53" width="0.1610%" height="15" fill="rgb(235,160,14)" fg:x="5472" fg:w="10"/><text x="88.3659%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (2 samples, 0.03%)</title><rect x="88.2770%" y="53" width="0.0322%" height="15" fill="rgb(212,155,44)" fg:x="5482" fg:w="2"/><text x="88.5270%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (1 samples, 0.02%)</title><rect x="88.3092%" y="53" width="0.0161%" height="15" fill="rgb(226,2,50)" fg:x="5484" fg:w="1"/><text x="88.5592%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238fc (1 samples, 0.02%)</title><rect x="88.3253%" y="53" width="0.0161%" height="15" fill="rgb(234,177,6)" fg:x="5485" fg:w="1"/><text x="88.5753%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (4 samples, 0.06%)</title><rect x="88.3414%" y="53" width="0.0644%" height="15" fill="rgb(217,24,9)" fg:x="5486" fg:w="4"/><text x="88.5914%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.06%)</title><rect x="88.3414%" y="37" width="0.0644%" height="15" fill="rgb(220,13,46)" fg:x="5486" fg:w="4"/><text x="88.5914%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (2 samples, 0.03%)</title><rect x="88.4058%" y="53" width="0.0322%" height="15" fill="rgb(239,221,27)" fg:x="5490" fg:w="2"/><text x="88.6558%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (1 samples, 0.02%)</title><rect x="88.4380%" y="53" width="0.0161%" height="15" fill="rgb(222,198,25)" fg:x="5492" fg:w="1"/><text x="88.6880%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (1 samples, 0.02%)</title><rect x="88.4541%" y="53" width="0.0161%" height="15" fill="rgb(211,99,13)" fg:x="5493" fg:w="1"/><text x="88.7041%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223984 (1 samples, 0.02%)</title><rect x="88.4702%" y="53" width="0.0161%" height="15" fill="rgb(232,111,31)" fg:x="5494" fg:w="1"/><text x="88.7202%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (3 samples, 0.05%)</title><rect x="88.4863%" y="53" width="0.0483%" height="15" fill="rgb(245,82,37)" fg:x="5495" fg:w="3"/><text x="88.7363%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (1 samples, 0.02%)</title><rect x="88.5346%" y="53" width="0.0161%" height="15" fill="rgb(227,149,46)" fg:x="5498" fg:w="1"/><text x="88.7846%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (36 samples, 0.58%)</title><rect x="88.0676%" y="69" width="0.5797%" height="15" fill="rgb(218,36,50)" fg:x="5469" fg:w="36"/><text x="88.3176%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (6 samples, 0.10%)</title><rect x="88.5507%" y="53" width="0.0966%" height="15" fill="rgb(226,80,48)" fg:x="5499" fg:w="6"/><text x="88.8007%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c884 (1 samples, 0.02%)</title><rect x="88.6473%" y="69" width="0.0161%" height="15" fill="rgb(238,224,15)" fg:x="5505" fg:w="1"/><text x="88.8973%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c894 (1 samples, 0.02%)</title><rect x="88.6634%" y="69" width="0.0161%" height="15" fill="rgb(241,136,10)" fg:x="5506" fg:w="1"/><text x="88.9134%" y="79.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="88.6795%" y="69" width="0.0161%" height="15" fill="rgb(208,32,45)" fg:x="5507" fg:w="1"/><text x="88.9295%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (92 samples, 1.48%)</title><rect x="87.2303%" y="85" width="1.4815%" height="15" fill="rgb(207,135,9)" fg:x="5417" fg:w="92"/><text x="87.4803%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="88.6957%" y="69" width="0.0161%" height="15" fill="rgb(206,86,44)" fg:x="5508" fg:w="1"/><text x="88.9457%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6b0 (1 samples, 0.02%)</title><rect x="88.7118%" y="85" width="0.0161%" height="15" fill="rgb(245,177,15)" fg:x="5509" fg:w="1"/><text x="88.9618%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6bb (1 samples, 0.02%)</title><rect x="88.7279%" y="85" width="0.0161%" height="15" fill="rgb(206,64,50)" fg:x="5510" fg:w="1"/><text x="88.9779%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (96 samples, 1.55%)</title><rect x="87.2142%" y="101" width="1.5459%" height="15" fill="rgb(234,36,40)" fg:x="5416" fg:w="96"/><text x="87.4642%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c740 (1 samples, 0.02%)</title><rect x="88.7440%" y="85" width="0.0161%" height="15" fill="rgb(213,64,8)" fg:x="5511" fg:w="1"/><text x="88.9940%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (121 samples, 1.95%)</title><rect x="86.8277%" y="117" width="1.9485%" height="15" fill="rgb(210,75,36)" fg:x="5392" fg:w="121"/><text x="87.0777%" y="127.50">d..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c653 (1 samples, 0.02%)</title><rect x="88.7601%" y="101" width="0.0161%" height="15" fill="rgb(229,88,21)" fg:x="5512" fg:w="1"/><text x="89.0101%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (128 samples, 2.06%)</title><rect x="86.7472%" y="133" width="2.0612%" height="15" fill="rgb(252,204,47)" fg:x="5387" fg:w="128"/><text x="86.9972%" y="143.50">d..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b100 (2 samples, 0.03%)</title><rect x="88.7762%" y="117" width="0.0322%" height="15" fill="rgb(208,77,27)" fg:x="5513" fg:w="2"/><text x="89.0262%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f20470 (26 samples, 0.42%)</title><rect x="88.8084%" y="133" width="0.4187%" height="15" fill="rgb(221,76,26)" fg:x="5515" fg:w="26"/><text x="89.0584%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (35 samples, 0.56%)</title><rect x="89.2271%" y="133" width="0.5636%" height="15" fill="rgb(225,139,18)" fg:x="5541" fg:w="35"/><text x="89.4771%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (1 samples, 0.02%)</title><rect x="89.7907%" y="133" width="0.0161%" height="15" fill="rgb(230,137,11)" fg:x="5576" fg:w="1"/><text x="90.0407%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (5 samples, 0.08%)</title><rect x="89.8068%" y="133" width="0.0805%" height="15" fill="rgb(212,28,1)" fg:x="5577" fg:w="5"/><text x="90.0568%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (1 samples, 0.02%)</title><rect x="89.8873%" y="133" width="0.0161%" height="15" fill="rgb(248,164,17)" fg:x="5582" fg:w="1"/><text x="90.1373%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (3 samples, 0.05%)</title><rect x="89.9034%" y="133" width="0.0483%" height="15" fill="rgb(222,171,42)" fg:x="5583" fg:w="3"/><text x="90.1534%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (1 samples, 0.02%)</title><rect x="89.9517%" y="133" width="0.0161%" height="15" fill="rgb(243,84,45)" fg:x="5586" fg:w="1"/><text x="90.2017%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (3 samples, 0.05%)</title><rect x="89.9678%" y="133" width="0.0483%" height="15" fill="rgb(252,49,23)" fg:x="5587" fg:w="3"/><text x="90.2178%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e0 (1 samples, 0.02%)</title><rect x="90.0161%" y="133" width="0.0161%" height="15" fill="rgb(215,19,7)" fg:x="5590" fg:w="1"/><text x="90.2661%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (1 samples, 0.02%)</title><rect x="90.0322%" y="133" width="0.0161%" height="15" fill="rgb(238,81,41)" fg:x="5591" fg:w="1"/><text x="90.2822%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (1 samples, 0.02%)</title><rect x="90.0483%" y="133" width="0.0161%" height="15" fill="rgb(210,199,37)" fg:x="5592" fg:w="1"/><text x="90.2983%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (6 samples, 0.10%)</title><rect x="90.0644%" y="133" width="0.0966%" height="15" fill="rgb(244,192,49)" fg:x="5593" fg:w="6"/><text x="90.3144%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (1 samples, 0.02%)</title><rect x="90.1610%" y="133" width="0.0161%" height="15" fill="rgb(226,211,11)" fg:x="5599" fg:w="1"/><text x="90.4110%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (1 samples, 0.02%)</title><rect x="90.1771%" y="133" width="0.0161%" height="15" fill="rgb(236,162,54)" fg:x="5600" fg:w="1"/><text x="90.4271%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (1 samples, 0.02%)</title><rect x="90.1932%" y="133" width="0.0161%" height="15" fill="rgb(220,229,9)" fg:x="5601" fg:w="1"/><text x="90.4432%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e6c (1 samples, 0.02%)</title><rect x="90.2093%" y="133" width="0.0161%" height="15" fill="rgb(250,87,22)" fg:x="5602" fg:w="1"/><text x="90.4593%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (1 samples, 0.02%)</title><rect x="90.2254%" y="133" width="0.0161%" height="15" fill="rgb(239,43,17)" fg:x="5603" fg:w="1"/><text x="90.4754%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (2 samples, 0.03%)</title><rect x="90.2415%" y="133" width="0.0322%" height="15" fill="rgb(231,177,25)" fg:x="5604" fg:w="2"/><text x="90.4915%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (762 samples, 12.27%)</title><rect x="78.0515%" y="149" width="12.2705%" height="15" fill="rgb(219,179,1)" fg:x="4847" fg:w="762"/><text x="78.3015%" y="159.50">dateo_fun_remover`..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (3 samples, 0.05%)</title><rect x="90.2738%" y="133" width="0.0483%" height="15" fill="rgb(238,219,53)" fg:x="5606" fg:w="3"/><text x="90.5238%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="90.3221%" y="149" width="0.0805%" height="15" fill="rgb(232,167,36)" fg:x="5609" fg:w="5"/><text x="90.5721%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (1 samples, 0.02%)</title><rect x="90.4026%" y="149" width="0.0161%" height="15" fill="rgb(244,19,51)" fg:x="5614" fg:w="1"/><text x="90.6526%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (769 samples, 12.38%)</title><rect x="78.0515%" y="165" width="12.3833%" height="15" fill="rgb(224,6,22)" fg:x="4847" fg:w="769"/><text x="78.3015%" y="175.50">dateo_fun_remover`..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (1 samples, 0.02%)</title><rect x="90.4187%" y="149" width="0.0161%" height="15" fill="rgb(224,145,5)" fg:x="5615" fg:w="1"/><text x="90.6687%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (1 samples, 0.02%)</title><rect x="90.4348%" y="165" width="0.0161%" height="15" fill="rgb(234,130,49)" fg:x="5616" fg:w="1"/><text x="90.6848%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (5 samples, 0.08%)</title><rect x="90.4509%" y="165" width="0.0805%" height="15" fill="rgb(254,6,2)" fg:x="5617" fg:w="5"/><text x="90.7009%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.08%)</title><rect x="90.4509%" y="149" width="0.0805%" height="15" fill="rgb(208,96,46)" fg:x="5617" fg:w="5"/><text x="90.7009%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (1 samples, 0.02%)</title><rect x="90.5314%" y="165" width="0.0161%" height="15" fill="rgb(239,3,39)" fg:x="5622" fg:w="1"/><text x="90.7814%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223932 (1 samples, 0.02%)</title><rect x="90.5475%" y="165" width="0.0161%" height="15" fill="rgb(233,210,1)" fg:x="5623" fg:w="1"/><text x="90.7975%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395d (1 samples, 0.02%)</title><rect x="90.5636%" y="165" width="0.0161%" height="15" fill="rgb(244,137,37)" fg:x="5624" fg:w="1"/><text x="90.8136%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22398d (1 samples, 0.02%)</title><rect x="90.5797%" y="165" width="0.0161%" height="15" fill="rgb(240,136,2)" fg:x="5625" fg:w="1"/><text x="90.8297%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (1 samples, 0.02%)</title><rect x="90.5958%" y="165" width="0.0161%" height="15" fill="rgb(239,18,37)" fg:x="5626" fg:w="1"/><text x="90.8458%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (982 samples, 15.81%)</title><rect x="74.8148%" y="181" width="15.8132%" height="15" fill="rgb(218,185,22)" fg:x="4646" fg:w="982"/><text x="75.0648%" y="191.50">dateo_fun_remover`dateo_..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (1 samples, 0.02%)</title><rect x="90.6119%" y="165" width="0.0161%" height="15" fill="rgb(225,218,4)" fg:x="5627" fg:w="1"/><text x="90.8619%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (2 samples, 0.03%)</title><rect x="90.6280%" y="181" width="0.0322%" height="15" fill="rgb(230,182,32)" fg:x="5628" fg:w="2"/><text x="90.8780%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (2 samples, 0.03%)</title><rect x="90.6602%" y="181" width="0.0322%" height="15" fill="rgb(242,56,43)" fg:x="5630" fg:w="2"/><text x="90.9102%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (4 samples, 0.06%)</title><rect x="90.6924%" y="181" width="0.0644%" height="15" fill="rgb(233,99,24)" fg:x="5632" fg:w="4"/><text x="90.9424%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (4 samples, 0.06%)</title><rect x="90.7568%" y="181" width="0.0644%" height="15" fill="rgb(234,209,42)" fg:x="5636" fg:w="4"/><text x="91.0068%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (1 samples, 0.02%)</title><rect x="90.8213%" y="181" width="0.0161%" height="15" fill="rgb(227,7,12)" fg:x="5640" fg:w="1"/><text x="91.0713%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (20 samples, 0.32%)</title><rect x="90.8374%" y="181" width="0.3221%" height="15" fill="rgb(245,203,43)" fg:x="5641" fg:w="20"/><text x="91.0874%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (20 samples, 0.32%)</title><rect x="90.8374%" y="165" width="0.3221%" height="15" fill="rgb(238,205,33)" fg:x="5641" fg:w="20"/><text x="91.0874%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (20 samples, 0.32%)</title><rect x="90.8374%" y="149" width="0.3221%" height="15" fill="rgb(231,56,7)" fg:x="5641" fg:w="20"/><text x="91.0874%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (20 samples, 0.32%)</title><rect x="90.8374%" y="133" width="0.3221%" height="15" fill="rgb(244,186,29)" fg:x="5641" fg:w="20"/><text x="91.0874%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (2 samples, 0.03%)</title><rect x="91.1594%" y="181" width="0.0322%" height="15" fill="rgb(234,111,31)" fg:x="5661" fg:w="2"/><text x="91.4094%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (2 samples, 0.03%)</title><rect x="91.1916%" y="181" width="0.0322%" height="15" fill="rgb(241,149,10)" fg:x="5663" fg:w="2"/><text x="91.4416%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (1 samples, 0.02%)</title><rect x="91.2238%" y="181" width="0.0161%" height="15" fill="rgb(249,206,44)" fg:x="5665" fg:w="1"/><text x="91.4738%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (2 samples, 0.03%)</title><rect x="91.2399%" y="181" width="0.0322%" height="15" fill="rgb(251,153,30)" fg:x="5666" fg:w="2"/><text x="91.4899%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (3 samples, 0.05%)</title><rect x="91.2721%" y="181" width="0.0483%" height="15" fill="rgb(239,152,38)" fg:x="5668" fg:w="3"/><text x="91.5221%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (3 samples, 0.05%)</title><rect x="91.3205%" y="181" width="0.0483%" height="15" fill="rgb(249,139,47)" fg:x="5671" fg:w="3"/><text x="91.5705%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (1 samples, 0.02%)</title><rect x="91.3688%" y="181" width="0.0161%" height="15" fill="rgb(244,64,35)" fg:x="5674" fg:w="1"/><text x="91.6188%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382d (1 samples, 0.02%)</title><rect x="91.3849%" y="181" width="0.0161%" height="15" fill="rgb(216,46,15)" fg:x="5675" fg:w="1"/><text x="91.6349%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382f (1 samples, 0.02%)</title><rect x="91.4010%" y="181" width="0.0161%" height="15" fill="rgb(250,74,19)" fg:x="5676" fg:w="1"/><text x="91.6510%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (1 samples, 0.02%)</title><rect x="91.4171%" y="181" width="0.0161%" height="15" fill="rgb(249,42,33)" fg:x="5677" fg:w="1"/><text x="91.6671%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (2 samples, 0.03%)</title><rect x="91.4332%" y="181" width="0.0322%" height="15" fill="rgb(242,149,17)" fg:x="5678" fg:w="2"/><text x="91.6832%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (1 samples, 0.02%)</title><rect x="91.4654%" y="181" width="0.0161%" height="15" fill="rgb(244,29,21)" fg:x="5680" fg:w="1"/><text x="91.7154%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223876 (1 samples, 0.02%)</title><rect x="91.4815%" y="181" width="0.0161%" height="15" fill="rgb(220,130,37)" fg:x="5681" fg:w="1"/><text x="91.7315%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (1 samples, 0.02%)</title><rect x="91.4976%" y="181" width="0.0161%" height="15" fill="rgb(211,67,2)" fg:x="5682" fg:w="1"/><text x="91.7476%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (1 samples, 0.02%)</title><rect x="91.5137%" y="181" width="0.0161%" height="15" fill="rgb(235,68,52)" fg:x="5683" fg:w="1"/><text x="91.7637%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (29 samples, 0.47%)</title><rect x="91.5298%" y="181" width="0.4670%" height="15" fill="rgb(246,142,3)" fg:x="5684" fg:w="29"/><text x="91.7798%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (1 samples, 0.02%)</title><rect x="91.9968%" y="181" width="0.0161%" height="15" fill="rgb(241,25,7)" fg:x="5713" fg:w="1"/><text x="92.2468%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (2 samples, 0.03%)</title><rect x="92.0129%" y="181" width="0.0322%" height="15" fill="rgb(242,119,39)" fg:x="5714" fg:w="2"/><text x="92.2629%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (1 samples, 0.02%)</title><rect x="92.0451%" y="181" width="0.0161%" height="15" fill="rgb(241,98,45)" fg:x="5716" fg:w="1"/><text x="92.2951%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (6 samples, 0.10%)</title><rect x="92.0612%" y="181" width="0.0966%" height="15" fill="rgb(254,28,30)" fg:x="5717" fg:w="6"/><text x="92.3112%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.10%)</title><rect x="92.0612%" y="165" width="0.0966%" height="15" fill="rgb(241,142,54)" fg:x="5717" fg:w="6"/><text x="92.3112%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (1 samples, 0.02%)</title><rect x="92.1578%" y="181" width="0.0161%" height="15" fill="rgb(222,85,15)" fg:x="5723" fg:w="1"/><text x="92.4078%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (1 samples, 0.02%)</title><rect x="92.1739%" y="181" width="0.0161%" height="15" fill="rgb(210,85,47)" fg:x="5724" fg:w="1"/><text x="92.4239%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (3 samples, 0.05%)</title><rect x="92.1900%" y="181" width="0.0483%" height="15" fill="rgb(224,206,25)" fg:x="5725" fg:w="3"/><text x="92.4400%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22392b (1 samples, 0.02%)</title><rect x="92.2383%" y="181" width="0.0161%" height="15" fill="rgb(243,201,19)" fg:x="5728" fg:w="1"/><text x="92.4883%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223939 (1 samples, 0.02%)</title><rect x="92.2544%" y="181" width="0.0161%" height="15" fill="rgb(236,59,4)" fg:x="5729" fg:w="1"/><text x="92.5044%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223945 (1 samples, 0.02%)</title><rect x="92.2705%" y="181" width="0.0161%" height="15" fill="rgb(254,179,45)" fg:x="5730" fg:w="1"/><text x="92.5205%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (6 samples, 0.10%)</title><rect x="92.2866%" y="181" width="0.0966%" height="15" fill="rgb(226,14,10)" fg:x="5731" fg:w="6"/><text x="92.5366%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223994 (1 samples, 0.02%)</title><rect x="92.3833%" y="181" width="0.0161%" height="15" fill="rgb(244,27,41)" fg:x="5737" fg:w="1"/><text x="92.6333%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223996 (1 samples, 0.02%)</title><rect x="92.3994%" y="181" width="0.0161%" height="15" fill="rgb(235,35,32)" fg:x="5738" fg:w="1"/><text x="92.6494%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (6 samples, 0.10%)</title><rect x="92.4155%" y="181" width="0.0966%" height="15" fill="rgb(218,68,31)" fg:x="5739" fg:w="6"/><text x="92.6655%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (1 samples, 0.02%)</title><rect x="92.5121%" y="181" width="0.0161%" height="15" fill="rgb(207,120,37)" fg:x="5745" fg:w="1"/><text x="92.7621%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (13 samples, 0.21%)</title><rect x="92.5282%" y="181" width="0.2093%" height="15" fill="rgb(227,98,0)" fg:x="5746" fg:w="13"/><text x="92.7782%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239c0 (1 samples, 0.02%)</title><rect x="92.7375%" y="181" width="0.0161%" height="15" fill="rgb(207,7,3)" fg:x="5759" fg:w="1"/><text x="92.9875%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (2 samples, 0.03%)</title><rect x="92.7536%" y="181" width="0.0322%" height="15" fill="rgb(206,98,19)" fg:x="5760" fg:w="2"/><text x="93.0036%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (3 samples, 0.05%)</title><rect x="92.7858%" y="181" width="0.0483%" height="15" fill="rgb(217,5,26)" fg:x="5762" fg:w="3"/><text x="93.0358%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (2 samples, 0.03%)</title><rect x="92.8341%" y="181" width="0.0322%" height="15" fill="rgb(235,190,38)" fg:x="5765" fg:w="2"/><text x="93.0841%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (4 samples, 0.06%)</title><rect x="92.8663%" y="181" width="0.0644%" height="15" fill="rgb(247,86,24)" fg:x="5767" fg:w="4"/><text x="93.1163%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.03%)</title><rect x="92.9308%" y="181" width="0.0322%" height="15" fill="rgb(205,101,16)" fg:x="5771" fg:w="2"/><text x="93.1808%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.03%)</title><rect x="92.9630%" y="181" width="0.0322%" height="15" fill="rgb(246,168,33)" fg:x="5773" fg:w="2"/><text x="93.2130%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="92.9952%" y="181" width="0.0483%" height="15" fill="rgb(231,114,1)" fg:x="5775" fg:w="3"/><text x="93.2452%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (3,333 samples, 53.67%)</title><rect x="46.0064%" y="197" width="53.6715%" height="15" fill="rgb(207,184,53)" fg:x="2857" fg:w="3333"/><text x="46.2564%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (412 samples, 6.63%)</title><rect x="93.0435%" y="181" width="6.6345%" height="15" fill="rgb(224,95,51)" fg:x="5778" fg:w="412"/><text x="93.2935%" y="191.50">libsystem..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (3 samples, 0.05%)</title><rect x="99.6779%" y="197" width="0.0483%" height="15" fill="rgb(212,188,45)" fg:x="6190" fg:w="3"/><text x="99.9279%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (3 samples, 0.05%)</title><rect x="99.7262%" y="197" width="0.0483%" height="15" fill="rgb(223,154,38)" fg:x="6193" fg:w="3"/><text x="99.9762%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (1 samples, 0.02%)</title><rect x="99.7746%" y="197" width="0.0161%" height="15" fill="rgb(251,22,52)" fg:x="6196" fg:w="1"/><text x="100.0246%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (2 samples, 0.03%)</title><rect x="99.7907%" y="197" width="0.0322%" height="15" fill="rgb(229,209,22)" fg:x="6197" fg:w="2"/><text x="100.0407%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (1 samples, 0.02%)</title><rect x="99.8229%" y="197" width="0.0161%" height="15" fill="rgb(234,138,34)" fg:x="6199" fg:w="1"/><text x="100.0729%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (1 samples, 0.02%)</title><rect x="99.8390%" y="197" width="0.0161%" height="15" fill="rgb(212,95,11)" fg:x="6200" fg:w="1"/><text x="100.0890%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (3 samples, 0.05%)</title><rect x="99.8551%" y="197" width="0.0483%" height="15" fill="rgb(240,179,47)" fg:x="6201" fg:w="3"/><text x="100.1051%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (1 samples, 0.02%)</title><rect x="99.9034%" y="197" width="0.0161%" height="15" fill="rgb(240,163,11)" fg:x="6204" fg:w="1"/><text x="100.1534%" y="207.50"></text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (6,207 samples, 99.95%)</title><rect x="0.0000%" y="277" width="99.9517%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="6207"/><text x="0.2500%" y="287.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (6,207 samples, 99.95%)</title><rect x="0.0000%" y="261" width="99.9517%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="6207"/><text x="0.2500%" y="271.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (6,207 samples, 99.95%)</title><rect x="0.0000%" y="245" width="99.9517%" height="15" fill="rgb(244,205,15)" fg:x="0" fg:w="6207"/><text x="0.2500%" y="255.50">dateo_fun_remover`dateo_fun_remover::main</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (6,207 samples, 99.95%)</title><rect x="0.0000%" y="229" width="99.9517%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="6207"/><text x="0.2500%" y="239.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (6,207 samples, 99.95%)</title><rect x="0.0000%" y="213" width="99.9517%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="6207"/><text x="0.2500%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (2 samples, 0.03%)</title><rect x="99.9195%" y="197" width="0.0322%" height="15" fill="rgb(205,140,8)" fg:x="6205" fg:w="2"/><text x="100.1695%" y="207.50"></text></g><g><title>dateo_fun_remover`main (6,208 samples, 99.97%)</title><rect x="0.0000%" y="309" width="99.9678%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="6208"/><text x="0.2500%" y="319.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (6,208 samples, 99.97%)</title><rect x="0.0000%" y="293" width="99.9678%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="6208"/><text x="0.2500%" y="303.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::sys_common::thread_info::set (1 samples, 0.02%)</title><rect x="99.9517%" y="277" width="0.0161%" height="15" fill="rgb(206,112,54)" fg:x="6207" fg:w="1"/><text x="100.2017%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20959d (1 samples, 0.02%)</title><rect x="99.9517%" y="261" width="0.0161%" height="15" fill="rgb(216,84,49)" fg:x="6207" fg:w="1"/><text x="100.2017%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223697 (1 samples, 0.02%)</title><rect x="99.9517%" y="245" width="0.0161%" height="15" fill="rgb(214,194,35)" fg:x="6207" fg:w="1"/><text x="100.2017%" y="255.50"></text></g><g><title>dyld`start (6,209 samples, 99.98%)</title><rect x="0.0000%" y="325" width="99.9839%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="6209"/><text x="0.2500%" y="335.50">dyld`start</text></g><g><title>libdyld.dylib`0x7ff81a3ce1d3 (1 samples, 0.02%)</title><rect x="99.9678%" y="309" width="0.0161%" height="15" fill="rgb(222,56,52)" fg:x="6208" fg:w="1"/><text x="100.2178%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.02%)</title><rect x="99.9678%" y="293" width="0.0161%" height="15" fill="rgb(245,217,50)" fg:x="6208" fg:w="1"/><text x="100.2178%" y="303.50"></text></g><g><title>all (6,210 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="6210"/><text x="0.2500%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.02%)</title><rect x="99.9839%" y="325" width="0.0161%" height="15" fill="rgb(248,116,28)" fg:x="6209" fg:w="1"/><text x="100.2339%" y="335.50"></text></g></svg></svg>