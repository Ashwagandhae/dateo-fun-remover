<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="22133"><g><title>libsystem_malloc.dylib`0x7ff81a20a464 (4 samples, 0.02%)</title><rect x="0.0587%" y="101" width="0.0181%" height="15" fill="rgb(227,0,7)" fg:x="13" fg:w="4"/><text x="0.3087%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7a0 (5 samples, 0.02%)</title><rect x="0.0587%" y="117" width="0.0226%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="5"/><text x="0.3087%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="0.0497%" y="181" width="0.0407%" height="15" fill="rgb(221,193,54)" fg:x="11" fg:w="9"/><text x="0.2997%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (8 samples, 0.04%)</title><rect x="0.0542%" y="165" width="0.0361%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="8"/><text x="0.3042%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (7 samples, 0.03%)</title><rect x="0.0587%" y="149" width="0.0316%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="7"/><text x="0.3087%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (7 samples, 0.03%)</title><rect x="0.0587%" y="133" width="0.0316%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="7"/><text x="0.3087%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.09%)</title><rect x="0.0090%" y="197" width="0.0949%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="21"/><text x="0.2590%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.06%)</title><rect x="0.1039%" y="197" width="0.0587%" height="15" fill="rgb(228,23,34)" fg:x="23" fg:w="13"/><text x="0.3539%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (20 samples, 0.09%)</title><rect x="0.1627%" y="197" width="0.0904%" height="15" fill="rgb(218,30,26)" fg:x="36" fg:w="20"/><text x="0.4127%" y="207.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (3 samples, 0.01%)</title><rect x="0.2530%" y="197" width="0.0136%" height="15" fill="rgb(220,122,19)" fg:x="56" fg:w="3"/><text x="0.5030%" y="207.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (5 samples, 0.02%)</title><rect x="0.2756%" y="165" width="0.0226%" height="15" fill="rgb(250,228,42)" fg:x="61" fg:w="5"/><text x="0.5256%" y="175.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (10 samples, 0.05%)</title><rect x="0.2756%" y="181" width="0.0452%" height="15" fill="rgb(240,193,28)" fg:x="61" fg:w="10"/><text x="0.5256%" y="191.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (13 samples, 0.06%)</title><rect x="0.2756%" y="197" width="0.0587%" height="15" fill="rgb(216,20,37)" fg:x="61" fg:w="13"/><text x="0.5256%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (3 samples, 0.01%)</title><rect x="0.3524%" y="133" width="0.0136%" height="15" fill="rgb(206,188,39)" fg:x="78" fg:w="3"/><text x="0.6024%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (6 samples, 0.03%)</title><rect x="0.3434%" y="149" width="0.0271%" height="15" fill="rgb(217,207,13)" fg:x="76" fg:w="6"/><text x="0.5934%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (10 samples, 0.05%)</title><rect x="0.3389%" y="165" width="0.0452%" height="15" fill="rgb(231,73,38)" fg:x="75" fg:w="10"/><text x="0.5889%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (11 samples, 0.05%)</title><rect x="0.3389%" y="181" width="0.0497%" height="15" fill="rgb(225,20,46)" fg:x="75" fg:w="11"/><text x="0.5889%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (13 samples, 0.06%)</title><rect x="0.3343%" y="197" width="0.0587%" height="15" fill="rgb(210,31,41)" fg:x="74" fg:w="13"/><text x="0.5843%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.30%)</title><rect x="12.1809%" y="181" width="0.2982%" height="15" fill="rgb(221,200,47)" fg:x="2696" fg:w="66"/><text x="12.4309%" y="191.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (143 samples, 0.65%)</title><rect x="12.4791%" y="181" width="0.6461%" height="15" fill="rgb(226,26,5)" fg:x="2762" fg:w="143"/><text x="12.7291%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (2,820 samples, 12.74%)</title><rect x="0.3931%" y="197" width="12.7412%" height="15" fill="rgb(249,33,26)" fg:x="87" fg:w="2820"/><text x="0.6431%" y="207.50">dateo_fun_remover`d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (6 samples, 0.03%)</title><rect x="13.1342%" y="181" width="0.0271%" height="15" fill="rgb(235,183,28)" fg:x="2907" fg:w="6"/><text x="13.3842%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (3 samples, 0.01%)</title><rect x="13.1749%" y="149" width="0.0136%" height="15" fill="rgb(221,5,38)" fg:x="2916" fg:w="3"/><text x="13.4249%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (9 samples, 0.04%)</title><rect x="13.1704%" y="165" width="0.0407%" height="15" fill="rgb(247,18,42)" fg:x="2915" fg:w="9"/><text x="13.4204%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (14 samples, 0.06%)</title><rect x="13.1613%" y="181" width="0.0633%" height="15" fill="rgb(241,131,45)" fg:x="2913" fg:w="14"/><text x="13.4113%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.01%)</title><rect x="13.2110%" y="165" width="0.0136%" height="15" fill="rgb(249,31,29)" fg:x="2924" fg:w="3"/><text x="13.4610%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="13.2110%" y="149" width="0.0136%" height="15" fill="rgb(225,111,53)" fg:x="2924" fg:w="3"/><text x="13.4610%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (21 samples, 0.09%)</title><rect x="13.1342%" y="197" width="0.0949%" height="15" fill="rgb(238,160,17)" fg:x="2907" fg:w="21"/><text x="13.3842%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="13.2517%" y="165" width="0.0271%" height="15" fill="rgb(214,148,48)" fg:x="2933" fg:w="6"/><text x="13.5017%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::fill_map_rec (13 samples, 0.06%)</title><rect x="13.2291%" y="197" width="0.0587%" height="15" fill="rgb(232,36,49)" fg:x="2928" fg:w="13"/><text x="13.4791%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.05%)</title><rect x="13.2382%" y="181" width="0.0497%" height="15" fill="rgb(209,103,24)" fg:x="2930" fg:w="11"/><text x="13.4882%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (4 samples, 0.02%)</title><rect x="13.2924%" y="181" width="0.0181%" height="15" fill="rgb(229,88,8)" fg:x="2942" fg:w="4"/><text x="13.5424%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (4 samples, 0.02%)</title><rect x="13.3150%" y="165" width="0.0181%" height="15" fill="rgb(213,181,19)" fg:x="2947" fg:w="4"/><text x="13.5650%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (7 samples, 0.03%)</title><rect x="13.3330%" y="165" width="0.0316%" height="15" fill="rgb(254,191,54)" fg:x="2951" fg:w="7"/><text x="13.5830%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;dateo_fun_remover::finder::atom::Atom as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="13.3376%" y="149" width="0.0271%" height="15" fill="rgb(241,83,37)" fg:x="2952" fg:w="6"/><text x="13.5876%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (14 samples, 0.06%)</title><rect x="13.3104%" y="181" width="0.0633%" height="15" fill="rgb(233,36,39)" fg:x="2946" fg:w="14"/><text x="13.5604%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (20 samples, 0.09%)</title><rect x="13.2879%" y="197" width="0.0904%" height="15" fill="rgb(226,3,54)" fg:x="2941" fg:w="20"/><text x="13.5379%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.05%)</title><rect x="16.5093%" y="181" width="0.0452%" height="15" fill="rgb(245,192,40)" fg:x="3654" fg:w="10"/><text x="16.7593%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,898 samples, 13.09%)</title><rect x="16.5545%" y="181" width="13.0936%" height="15" fill="rgb(238,167,29)" fg:x="3664" fg:w="2898"/><text x="16.8045%" y="191.50">dateo_fun_remover`&lt;c..</text></g><g><title>dateo_fun_remover`DYLD-STUB$$memcpy (9 samples, 0.04%)</title><rect x="29.6526%" y="181" width="0.0407%" height="15" fill="rgb(232,182,51)" fg:x="6563" fg:w="9"/><text x="29.9026%" y="191.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (16 samples, 0.07%)</title><rect x="29.6932%" y="181" width="0.0723%" height="15" fill="rgb(231,60,39)" fg:x="6572" fg:w="16"/><text x="29.9432%" y="191.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (28 samples, 0.13%)</title><rect x="29.7655%" y="181" width="0.1265%" height="15" fill="rgb(208,69,12)" fg:x="6588" fg:w="28"/><text x="30.0155%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d794 (14 samples, 0.06%)</title><rect x="29.9327%" y="117" width="0.0633%" height="15" fill="rgb(235,93,37)" fg:x="6625" fg:w="14"/><text x="30.1827%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (14 samples, 0.06%)</title><rect x="29.9327%" y="101" width="0.0633%" height="15" fill="rgb(213,116,39)" fg:x="6625" fg:w="14"/><text x="30.1827%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (14 samples, 0.06%)</title><rect x="29.9327%" y="85" width="0.0633%" height="15" fill="rgb(222,207,29)" fg:x="6625" fg:w="14"/><text x="30.1827%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (117 samples, 0.53%)</title><rect x="29.9011%" y="181" width="0.5286%" height="15" fill="rgb(206,96,30)" fg:x="6618" fg:w="117"/><text x="30.1511%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (110 samples, 0.50%)</title><rect x="29.9327%" y="165" width="0.4970%" height="15" fill="rgb(218,138,4)" fg:x="6625" fg:w="110"/><text x="30.1827%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (110 samples, 0.50%)</title><rect x="29.9327%" y="149" width="0.4970%" height="15" fill="rgb(250,191,14)" fg:x="6625" fg:w="110"/><text x="30.1827%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (110 samples, 0.50%)</title><rect x="29.9327%" y="133" width="0.4970%" height="15" fill="rgb(239,60,40)" fg:x="6625" fg:w="110"/><text x="30.1827%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (96 samples, 0.43%)</title><rect x="29.9959%" y="117" width="0.4337%" height="15" fill="rgb(206,27,48)" fg:x="6639" fg:w="96"/><text x="30.2459%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (96 samples, 0.43%)</title><rect x="29.9959%" y="101" width="0.4337%" height="15" fill="rgb(225,35,8)" fg:x="6639" fg:w="96"/><text x="30.2459%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (96 samples, 0.43%)</title><rect x="29.9959%" y="85" width="0.4337%" height="15" fill="rgb(250,213,24)" fg:x="6639" fg:w="96"/><text x="30.2459%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (96 samples, 0.43%)</title><rect x="29.9959%" y="69" width="0.4337%" height="15" fill="rgb(247,123,22)" fg:x="6639" fg:w="96"/><text x="30.2459%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (96 samples, 0.43%)</title><rect x="29.9959%" y="53" width="0.4337%" height="15" fill="rgb(231,138,38)" fg:x="6639" fg:w="96"/><text x="30.2459%" y="63.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="30.4432%" y="149" width="0.0136%" height="15" fill="rgb(231,145,46)" fg:x="6738" fg:w="3"/><text x="30.6932%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="30.4432%" y="133" width="0.0136%" height="15" fill="rgb(251,118,11)" fg:x="6738" fg:w="3"/><text x="30.6932%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (4 samples, 0.02%)</title><rect x="30.4432%" y="165" width="0.0181%" height="15" fill="rgb(217,147,25)" fg:x="6738" fg:w="4"/><text x="30.6932%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (10 samples, 0.05%)</title><rect x="30.4297%" y="181" width="0.0452%" height="15" fill="rgb(247,81,37)" fg:x="6735" fg:w="10"/><text x="30.6797%" y="191.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (44 samples, 0.20%)</title><rect x="43.2522%" y="133" width="0.1988%" height="15" fill="rgb(209,12,38)" fg:x="9573" fg:w="44"/><text x="43.5022%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (1,165 samples, 5.26%)</title><rect x="43.4510%" y="133" width="5.2636%" height="15" fill="rgb(227,1,9)" fg:x="9617" fg:w="1165"/><text x="43.7010%" y="143.50">dateo_..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (112 samples, 0.51%)</title><rect x="48.7146%" y="133" width="0.5060%" height="15" fill="rgb(248,47,43)" fg:x="10782" fg:w="112"/><text x="48.9646%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,843 samples, 12.85%)</title><rect x="36.9719%" y="149" width="12.8451%" height="15" fill="rgb(221,10,30)" fg:x="8183" fg:w="2843"/><text x="37.2219%" y="159.50">dateo_fun_remover`&lt;..</text></g><g><title>libsystem_m.dylib`trunc (132 samples, 0.60%)</title><rect x="49.2206%" y="133" width="0.5964%" height="15" fill="rgb(210,229,1)" fg:x="10894" fg:w="132"/><text x="49.4706%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="49.8170%" y="149" width="0.0136%" height="15" fill="rgb(222,148,37)" fg:x="11026" fg:w="3"/><text x="50.0670%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="49.8170%" y="133" width="0.0136%" height="15" fill="rgb(234,67,33)" fg:x="11026" fg:w="3"/><text x="50.0670%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (134 samples, 0.61%)</title><rect x="49.8306%" y="149" width="0.6054%" height="15" fill="rgb(247,98,35)" fg:x="11029" fg:w="134"/><text x="50.0806%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (25 samples, 0.11%)</title><rect x="50.4360%" y="149" width="0.1130%" height="15" fill="rgb(247,138,52)" fg:x="11163" fg:w="25"/><text x="50.6860%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (7 samples, 0.03%)</title><rect x="50.5490%" y="149" width="0.0316%" height="15" fill="rgb(213,79,30)" fg:x="11188" fg:w="7"/><text x="50.7990%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (10 samples, 0.05%)</title><rect x="50.5896%" y="149" width="0.0452%" height="15" fill="rgb(246,177,23)" fg:x="11197" fg:w="10"/><text x="50.8396%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (9 samples, 0.04%)</title><rect x="50.6348%" y="149" width="0.0407%" height="15" fill="rgb(230,62,27)" fg:x="11207" fg:w="9"/><text x="50.8848%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (13 samples, 0.06%)</title><rect x="50.6755%" y="149" width="0.0587%" height="15" fill="rgb(216,154,8)" fg:x="11216" fg:w="13"/><text x="50.9255%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (3 samples, 0.01%)</title><rect x="50.7342%" y="149" width="0.0136%" height="15" fill="rgb(244,35,45)" fg:x="11229" fg:w="3"/><text x="50.9842%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (12 samples, 0.05%)</title><rect x="50.7568%" y="149" width="0.0542%" height="15" fill="rgb(251,115,12)" fg:x="11234" fg:w="12"/><text x="51.0068%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (22 samples, 0.10%)</title><rect x="50.8110%" y="149" width="0.0994%" height="15" fill="rgb(240,54,50)" fg:x="11246" fg:w="22"/><text x="51.0610%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (184 samples, 0.83%)</title><rect x="50.9104%" y="149" width="0.8313%" height="15" fill="rgb(233,84,52)" fg:x="11268" fg:w="184"/><text x="51.1604%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (12 samples, 0.05%)</title><rect x="51.7417%" y="149" width="0.0542%" height="15" fill="rgb(207,117,47)" fg:x="11452" fg:w="12"/><text x="51.9917%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (14 samples, 0.06%)</title><rect x="51.7960%" y="149" width="0.0633%" height="15" fill="rgb(249,43,39)" fg:x="11464" fg:w="14"/><text x="52.0460%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (43 samples, 0.19%)</title><rect x="51.8592%" y="149" width="0.1943%" height="15" fill="rgb(209,38,44)" fg:x="11478" fg:w="43"/><text x="52.1092%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (15 samples, 0.07%)</title><rect x="52.0535%" y="149" width="0.0678%" height="15" fill="rgb(236,212,23)" fg:x="11521" fg:w="15"/><text x="52.3035%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (14 samples, 0.06%)</title><rect x="52.1258%" y="149" width="0.0633%" height="15" fill="rgb(242,79,21)" fg:x="11537" fg:w="14"/><text x="52.3758%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (27 samples, 0.12%)</title><rect x="52.1890%" y="149" width="0.1220%" height="15" fill="rgb(211,96,35)" fg:x="11551" fg:w="27"/><text x="52.4390%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (10 samples, 0.05%)</title><rect x="52.3110%" y="149" width="0.0452%" height="15" fill="rgb(253,215,40)" fg:x="11578" fg:w="10"/><text x="52.5610%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (10 samples, 0.05%)</title><rect x="52.3562%" y="149" width="0.0452%" height="15" fill="rgb(211,81,21)" fg:x="11588" fg:w="10"/><text x="52.6062%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20943e (4 samples, 0.02%)</title><rect x="52.4014%" y="149" width="0.0181%" height="15" fill="rgb(208,190,38)" fg:x="11598" fg:w="4"/><text x="52.6514%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (10 samples, 0.05%)</title><rect x="52.4195%" y="149" width="0.0452%" height="15" fill="rgb(235,213,38)" fg:x="11602" fg:w="10"/><text x="52.6695%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (16 samples, 0.07%)</title><rect x="52.4646%" y="149" width="0.0723%" height="15" fill="rgb(237,122,38)" fg:x="11612" fg:w="16"/><text x="52.7146%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (15 samples, 0.07%)</title><rect x="52.5369%" y="149" width="0.0678%" height="15" fill="rgb(244,218,35)" fg:x="11628" fg:w="15"/><text x="52.7869%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (13 samples, 0.06%)</title><rect x="52.6047%" y="149" width="0.0587%" height="15" fill="rgb(240,68,47)" fg:x="11643" fg:w="13"/><text x="52.8547%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (12 samples, 0.05%)</title><rect x="52.6634%" y="149" width="0.0542%" height="15" fill="rgb(210,16,53)" fg:x="11656" fg:w="12"/><text x="52.9134%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (13 samples, 0.06%)</title><rect x="52.7177%" y="149" width="0.0587%" height="15" fill="rgb(235,124,12)" fg:x="11668" fg:w="13"/><text x="52.9677%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (11 samples, 0.05%)</title><rect x="52.7809%" y="149" width="0.0497%" height="15" fill="rgb(224,169,11)" fg:x="11682" fg:w="11"/><text x="53.0309%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (42 samples, 0.19%)</title><rect x="52.8487%" y="149" width="0.1898%" height="15" fill="rgb(250,166,2)" fg:x="11697" fg:w="42"/><text x="53.0987%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (13 samples, 0.06%)</title><rect x="53.0384%" y="149" width="0.0587%" height="15" fill="rgb(242,216,29)" fg:x="11739" fg:w="13"/><text x="53.2884%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (5 samples, 0.02%)</title><rect x="53.0972%" y="149" width="0.0226%" height="15" fill="rgb(230,116,27)" fg:x="11752" fg:w="5"/><text x="53.3472%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (8 samples, 0.04%)</title><rect x="53.1198%" y="149" width="0.0361%" height="15" fill="rgb(228,99,48)" fg:x="11757" fg:w="8"/><text x="53.3698%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (50 samples, 0.23%)</title><rect x="53.1559%" y="149" width="0.2259%" height="15" fill="rgb(253,11,6)" fg:x="11765" fg:w="50"/><text x="53.4059%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (6 samples, 0.03%)</title><rect x="53.3818%" y="149" width="0.0271%" height="15" fill="rgb(247,143,39)" fg:x="11815" fg:w="6"/><text x="53.6318%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (15 samples, 0.07%)</title><rect x="53.4089%" y="149" width="0.0678%" height="15" fill="rgb(236,97,10)" fg:x="11821" fg:w="15"/><text x="53.6589%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (10 samples, 0.05%)</title><rect x="53.4767%" y="149" width="0.0452%" height="15" fill="rgb(233,208,19)" fg:x="11836" fg:w="10"/><text x="53.7267%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (130 samples, 0.59%)</title><rect x="53.5219%" y="149" width="0.5874%" height="15" fill="rgb(216,164,2)" fg:x="11846" fg:w="130"/><text x="53.7719%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (5 samples, 0.02%)</title><rect x="54.1273%" y="149" width="0.0226%" height="15" fill="rgb(220,129,5)" fg:x="11980" fg:w="5"/><text x="54.3773%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (8 samples, 0.04%)</title><rect x="54.1499%" y="149" width="0.0361%" height="15" fill="rgb(242,17,10)" fg:x="11985" fg:w="8"/><text x="54.3999%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (10 samples, 0.05%)</title><rect x="54.1861%" y="149" width="0.0452%" height="15" fill="rgb(242,107,0)" fg:x="11993" fg:w="10"/><text x="54.4361%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (15 samples, 0.07%)</title><rect x="54.2312%" y="149" width="0.0678%" height="15" fill="rgb(251,28,31)" fg:x="12003" fg:w="15"/><text x="54.4812%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,913 samples, 22.20%)</title><rect x="32.1240%" y="165" width="22.1976%" height="15" fill="rgb(233,223,10)" fg:x="7110" fg:w="4913"/><text x="32.3740%" y="175.50">dateo_fun_remover`&lt;alloc::vec::Vec&lt;..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (5 samples, 0.02%)</title><rect x="54.2990%" y="149" width="0.0226%" height="15" fill="rgb(215,21,27)" fg:x="12018" fg:w="5"/><text x="54.5490%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.13%)</title><rect x="54.3216%" y="165" width="0.1310%" height="15" fill="rgb(232,23,21)" fg:x="12023" fg:w="29"/><text x="54.5716%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (25 samples, 0.11%)</title><rect x="54.4526%" y="165" width="0.1130%" height="15" fill="rgb(244,5,23)" fg:x="12052" fg:w="25"/><text x="54.7026%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (10 samples, 0.05%)</title><rect x="54.9812%" y="149" width="0.0452%" height="15" fill="rgb(226,81,46)" fg:x="12169" fg:w="10"/><text x="55.2312%" y="159.50"></text></g><g><title>dateo_fun_remover`__rust_realloc (3 samples, 0.01%)</title><rect x="55.0264%" y="149" width="0.0136%" height="15" fill="rgb(247,70,30)" fg:x="12179" fg:w="3"/><text x="55.2764%" y="159.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (38 samples, 0.17%)</title><rect x="55.3517%" y="133" width="0.1717%" height="15" fill="rgb(212,68,19)" fg:x="12251" fg:w="38"/><text x="55.6017%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e96 (9 samples, 0.04%)</title><rect x="55.5234%" y="133" width="0.0407%" height="15" fill="rgb(240,187,13)" fg:x="12289" fg:w="9"/><text x="55.7734%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209ea1 (5 samples, 0.02%)</title><rect x="55.5641%" y="133" width="0.0226%" height="15" fill="rgb(223,113,26)" fg:x="12298" fg:w="5"/><text x="55.8141%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209ebe (6 samples, 0.03%)</title><rect x="55.5912%" y="133" width="0.0271%" height="15" fill="rgb(206,192,2)" fg:x="12304" fg:w="6"/><text x="55.8412%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209edd (5 samples, 0.02%)</title><rect x="55.6364%" y="133" width="0.0226%" height="15" fill="rgb(241,108,4)" fg:x="12314" fg:w="5"/><text x="55.8864%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f65 (10 samples, 0.05%)</title><rect x="55.6680%" y="133" width="0.0452%" height="15" fill="rgb(247,173,49)" fg:x="12321" fg:w="10"/><text x="55.9180%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f78 (5 samples, 0.02%)</title><rect x="55.7177%" y="133" width="0.0226%" height="15" fill="rgb(224,114,35)" fg:x="12332" fg:w="5"/><text x="55.9677%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f7b (13 samples, 0.06%)</title><rect x="55.7403%" y="133" width="0.0587%" height="15" fill="rgb(245,159,27)" fg:x="12337" fg:w="13"/><text x="55.9903%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f8b (3 samples, 0.01%)</title><rect x="55.7990%" y="133" width="0.0136%" height="15" fill="rgb(245,172,44)" fg:x="12350" fg:w="3"/><text x="56.0490%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fa6 (7 samples, 0.03%)</title><rect x="55.8352%" y="133" width="0.0316%" height="15" fill="rgb(236,23,11)" fg:x="12358" fg:w="7"/><text x="56.0852%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fa8 (5 samples, 0.02%)</title><rect x="55.8668%" y="133" width="0.0226%" height="15" fill="rgb(205,117,38)" fg:x="12365" fg:w="5"/><text x="56.1168%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fba (3 samples, 0.01%)</title><rect x="55.8894%" y="133" width="0.0136%" height="15" fill="rgb(237,72,25)" fg:x="12370" fg:w="3"/><text x="56.1394%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fdf (6 samples, 0.03%)</title><rect x="55.9346%" y="133" width="0.0271%" height="15" fill="rgb(244,70,9)" fg:x="12380" fg:w="6"/><text x="56.1846%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209fe9 (4 samples, 0.02%)</title><rect x="55.9617%" y="133" width="0.0181%" height="15" fill="rgb(217,125,39)" fg:x="12386" fg:w="4"/><text x="56.2117%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209feb (5 samples, 0.02%)</title><rect x="55.9798%" y="133" width="0.0226%" height="15" fill="rgb(235,36,10)" fg:x="12390" fg:w="5"/><text x="56.2298%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209ff8 (4 samples, 0.02%)</title><rect x="56.0159%" y="133" width="0.0181%" height="15" fill="rgb(251,123,47)" fg:x="12398" fg:w="4"/><text x="56.2659%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209ffa (5 samples, 0.02%)</title><rect x="56.0340%" y="133" width="0.0226%" height="15" fill="rgb(221,13,13)" fg:x="12402" fg:w="5"/><text x="56.2840%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (233 samples, 1.05%)</title><rect x="56.0611%" y="133" width="1.0527%" height="15" fill="rgb(238,131,9)" fg:x="12408" fg:w="233"/><text x="56.3111%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a026 (4 samples, 0.02%)</title><rect x="57.1228%" y="133" width="0.0181%" height="15" fill="rgb(211,50,8)" fg:x="12643" fg:w="4"/><text x="57.3728%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b104 (6 samples, 0.03%)</title><rect x="57.1409%" y="133" width="0.0271%" height="15" fill="rgb(245,182,24)" fg:x="12647" fg:w="6"/><text x="57.3909%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b10c (6 samples, 0.03%)</title><rect x="57.1816%" y="133" width="0.0271%" height="15" fill="rgb(242,14,37)" fg:x="12656" fg:w="6"/><text x="57.4316%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b114 (4 samples, 0.02%)</title><rect x="57.2087%" y="133" width="0.0181%" height="15" fill="rgb(246,228,12)" fg:x="12662" fg:w="4"/><text x="57.4587%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b125 (10 samples, 0.05%)</title><rect x="57.2313%" y="133" width="0.0452%" height="15" fill="rgb(213,55,15)" fg:x="12667" fg:w="10"/><text x="57.4813%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b142 (8 samples, 0.04%)</title><rect x="57.2810%" y="133" width="0.0361%" height="15" fill="rgb(209,9,3)" fg:x="12678" fg:w="8"/><text x="57.5310%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b16b (7 samples, 0.03%)</title><rect x="57.3171%" y="133" width="0.0316%" height="15" fill="rgb(230,59,30)" fg:x="12686" fg:w="7"/><text x="57.5671%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b176 (7 samples, 0.03%)</title><rect x="57.3488%" y="133" width="0.0316%" height="15" fill="rgb(209,121,21)" fg:x="12693" fg:w="7"/><text x="57.5988%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b17a (3 samples, 0.01%)</title><rect x="57.3804%" y="133" width="0.0136%" height="15" fill="rgb(220,109,13)" fg:x="12700" fg:w="3"/><text x="57.6304%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b184 (8 samples, 0.04%)</title><rect x="57.3939%" y="133" width="0.0361%" height="15" fill="rgb(232,18,1)" fg:x="12703" fg:w="8"/><text x="57.6439%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b20d (15 samples, 0.07%)</title><rect x="57.4301%" y="133" width="0.0678%" height="15" fill="rgb(215,41,42)" fg:x="12711" fg:w="15"/><text x="57.6801%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b227 (9 samples, 0.04%)</title><rect x="57.4979%" y="133" width="0.0407%" height="15" fill="rgb(224,123,36)" fg:x="12726" fg:w="9"/><text x="57.7479%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c657 (5 samples, 0.02%)</title><rect x="57.5385%" y="117" width="0.0226%" height="15" fill="rgb(240,125,3)" fg:x="12735" fg:w="5"/><text x="57.7885%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c65f (4 samples, 0.02%)</title><rect x="57.5656%" y="117" width="0.0181%" height="15" fill="rgb(205,98,50)" fg:x="12741" fg:w="4"/><text x="57.8156%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c667 (3 samples, 0.01%)</title><rect x="57.5837%" y="117" width="0.0136%" height="15" fill="rgb(205,185,37)" fg:x="12745" fg:w="3"/><text x="57.8337%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c67b (7 samples, 0.03%)</title><rect x="57.5973%" y="117" width="0.0316%" height="15" fill="rgb(238,207,15)" fg:x="12748" fg:w="7"/><text x="57.8473%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c68b (5 samples, 0.02%)</title><rect x="57.6334%" y="117" width="0.0226%" height="15" fill="rgb(213,199,42)" fg:x="12756" fg:w="5"/><text x="57.8834%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (5 samples, 0.02%)</title><rect x="57.6695%" y="101" width="0.0226%" height="15" fill="rgb(235,201,11)" fg:x="12764" fg:w="5"/><text x="57.9195%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a03e (10 samples, 0.05%)</title><rect x="57.6967%" y="101" width="0.0452%" height="15" fill="rgb(207,46,11)" fg:x="12770" fg:w="10"/><text x="57.9467%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a04e (8 samples, 0.04%)</title><rect x="57.7418%" y="101" width="0.0361%" height="15" fill="rgb(241,35,35)" fg:x="12780" fg:w="8"/><text x="57.9918%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a068 (10 samples, 0.05%)</title><rect x="57.7961%" y="101" width="0.0452%" height="15" fill="rgb(243,32,47)" fg:x="12792" fg:w="10"/><text x="58.0461%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a07b (5 samples, 0.02%)</title><rect x="57.8412%" y="101" width="0.0226%" height="15" fill="rgb(247,202,23)" fg:x="12802" fg:w="5"/><text x="58.0912%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a120 (6 samples, 0.03%)</title><rect x="57.8774%" y="101" width="0.0271%" height="15" fill="rgb(219,102,11)" fg:x="12810" fg:w="6"/><text x="58.1274%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a134 (4 samples, 0.02%)</title><rect x="57.9090%" y="101" width="0.0181%" height="15" fill="rgb(243,110,44)" fg:x="12817" fg:w="4"/><text x="58.1590%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a143 (5 samples, 0.02%)</title><rect x="57.9316%" y="101" width="0.0226%" height="15" fill="rgb(222,74,54)" fg:x="12822" fg:w="5"/><text x="58.1816%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a153 (8 samples, 0.04%)</title><rect x="57.9723%" y="101" width="0.0361%" height="15" fill="rgb(216,99,12)" fg:x="12831" fg:w="8"/><text x="58.2223%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a15f (5 samples, 0.02%)</title><rect x="58.0174%" y="101" width="0.0226%" height="15" fill="rgb(226,22,26)" fg:x="12841" fg:w="5"/><text x="58.2674%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a180 (4 samples, 0.02%)</title><rect x="58.0400%" y="101" width="0.0181%" height="15" fill="rgb(217,163,10)" fg:x="12846" fg:w="4"/><text x="58.2900%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1a0 (8 samples, 0.04%)</title><rect x="58.0581%" y="101" width="0.0361%" height="15" fill="rgb(213,25,53)" fg:x="12850" fg:w="8"/><text x="58.3081%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1b2 (7 samples, 0.03%)</title><rect x="58.0988%" y="101" width="0.0316%" height="15" fill="rgb(252,105,26)" fg:x="12859" fg:w="7"/><text x="58.3488%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1bf (8 samples, 0.04%)</title><rect x="58.1439%" y="101" width="0.0361%" height="15" fill="rgb(220,39,43)" fg:x="12869" fg:w="8"/><text x="58.3939%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (182 samples, 0.82%)</title><rect x="58.1936%" y="101" width="0.8223%" height="15" fill="rgb(229,68,48)" fg:x="12880" fg:w="182"/><text x="58.4436%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1e0 (7 samples, 0.03%)</title><rect x="59.0250%" y="101" width="0.0316%" height="15" fill="rgb(252,8,32)" fg:x="13064" fg:w="7"/><text x="59.2750%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c760 (7 samples, 0.03%)</title><rect x="59.0566%" y="101" width="0.0316%" height="15" fill="rgb(223,20,43)" fg:x="13071" fg:w="7"/><text x="59.3066%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c768 (7 samples, 0.03%)</title><rect x="59.1018%" y="101" width="0.0316%" height="15" fill="rgb(229,81,49)" fg:x="13081" fg:w="7"/><text x="59.3518%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c770 (3 samples, 0.01%)</title><rect x="59.1379%" y="101" width="0.0136%" height="15" fill="rgb(236,28,36)" fg:x="13089" fg:w="3"/><text x="59.3879%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c77d (8 samples, 0.04%)</title><rect x="59.1515%" y="101" width="0.0361%" height="15" fill="rgb(249,185,26)" fg:x="13092" fg:w="8"/><text x="59.4015%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c782 (5 samples, 0.02%)</title><rect x="59.1876%" y="101" width="0.0226%" height="15" fill="rgb(249,174,33)" fg:x="13100" fg:w="5"/><text x="59.4376%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7df (5 samples, 0.02%)</title><rect x="59.2193%" y="101" width="0.0226%" height="15" fill="rgb(233,201,37)" fg:x="13107" fg:w="5"/><text x="59.4693%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7f0 (6 samples, 0.03%)</title><rect x="59.2419%" y="101" width="0.0271%" height="15" fill="rgb(221,78,26)" fg:x="13112" fg:w="6"/><text x="59.4919%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c84d (3 samples, 0.01%)</title><rect x="59.2690%" y="101" width="0.0136%" height="15" fill="rgb(250,127,30)" fg:x="13118" fg:w="3"/><text x="59.5190%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (6 samples, 0.03%)</title><rect x="59.2870%" y="85" width="0.0271%" height="15" fill="rgb(230,49,44)" fg:x="13122" fg:w="6"/><text x="59.5370%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (7 samples, 0.03%)</title><rect x="59.3187%" y="85" width="0.0316%" height="15" fill="rgb(229,67,23)" fg:x="13129" fg:w="7"/><text x="59.5687%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (9 samples, 0.04%)</title><rect x="59.3548%" y="85" width="0.0407%" height="15" fill="rgb(249,83,47)" fg:x="13137" fg:w="9"/><text x="59.6048%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (8 samples, 0.04%)</title><rect x="59.3955%" y="85" width="0.0361%" height="15" fill="rgb(215,43,3)" fg:x="13146" fg:w="8"/><text x="59.6455%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (5 samples, 0.02%)</title><rect x="59.4316%" y="85" width="0.0226%" height="15" fill="rgb(238,154,13)" fg:x="13154" fg:w="5"/><text x="59.6816%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (8 samples, 0.04%)</title><rect x="59.4542%" y="85" width="0.0361%" height="15" fill="rgb(219,56,2)" fg:x="13159" fg:w="8"/><text x="59.7042%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (21 samples, 0.09%)</title><rect x="59.4904%" y="85" width="0.0949%" height="15" fill="rgb(233,0,4)" fg:x="13167" fg:w="21"/><text x="59.7404%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (110 samples, 0.50%)</title><rect x="59.5852%" y="85" width="0.4970%" height="15" fill="rgb(235,30,7)" fg:x="13188" fg:w="110"/><text x="59.8352%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (9 samples, 0.04%)</title><rect x="60.0822%" y="85" width="0.0407%" height="15" fill="rgb(250,79,13)" fg:x="13298" fg:w="9"/><text x="60.3322%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (9 samples, 0.04%)</title><rect x="60.1229%" y="85" width="0.0407%" height="15" fill="rgb(211,146,34)" fg:x="13307" fg:w="9"/><text x="60.3729%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (33 samples, 0.15%)</title><rect x="60.1636%" y="85" width="0.1491%" height="15" fill="rgb(228,22,38)" fg:x="13316" fg:w="33"/><text x="60.4136%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (7 samples, 0.03%)</title><rect x="60.3127%" y="85" width="0.0316%" height="15" fill="rgb(235,168,5)" fg:x="13349" fg:w="7"/><text x="60.5627%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (6 samples, 0.03%)</title><rect x="60.3443%" y="85" width="0.0271%" height="15" fill="rgb(221,155,16)" fg:x="13356" fg:w="6"/><text x="60.5943%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (6 samples, 0.03%)</title><rect x="60.3714%" y="85" width="0.0271%" height="15" fill="rgb(215,215,53)" fg:x="13362" fg:w="6"/><text x="60.6214%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (5 samples, 0.02%)</title><rect x="60.3985%" y="85" width="0.0226%" height="15" fill="rgb(223,4,10)" fg:x="13368" fg:w="5"/><text x="60.6485%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (11 samples, 0.05%)</title><rect x="60.4301%" y="85" width="0.0497%" height="15" fill="rgb(234,103,6)" fg:x="13375" fg:w="11"/><text x="60.6801%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20943e (3 samples, 0.01%)</title><rect x="60.4798%" y="85" width="0.0136%" height="15" fill="rgb(227,97,0)" fg:x="13386" fg:w="3"/><text x="60.7298%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (5 samples, 0.02%)</title><rect x="60.4934%" y="85" width="0.0226%" height="15" fill="rgb(234,150,53)" fg:x="13389" fg:w="5"/><text x="60.7434%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (8 samples, 0.04%)</title><rect x="60.5160%" y="85" width="0.0361%" height="15" fill="rgb(228,201,54)" fg:x="13394" fg:w="8"/><text x="60.7660%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (12 samples, 0.05%)</title><rect x="60.5521%" y="85" width="0.0542%" height="15" fill="rgb(222,22,37)" fg:x="13402" fg:w="12"/><text x="60.8021%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (6 samples, 0.03%)</title><rect x="60.6063%" y="85" width="0.0271%" height="15" fill="rgb(237,53,32)" fg:x="13414" fg:w="6"/><text x="60.8563%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (5 samples, 0.02%)</title><rect x="60.6334%" y="85" width="0.0226%" height="15" fill="rgb(233,25,53)" fg:x="13420" fg:w="5"/><text x="60.8834%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (5 samples, 0.02%)</title><rect x="60.6560%" y="85" width="0.0226%" height="15" fill="rgb(210,40,34)" fg:x="13425" fg:w="5"/><text x="60.9060%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (6 samples, 0.03%)</title><rect x="60.6786%" y="85" width="0.0271%" height="15" fill="rgb(241,220,44)" fg:x="13430" fg:w="6"/><text x="60.9286%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (58 samples, 0.26%)</title><rect x="60.7193%" y="85" width="0.2621%" height="15" fill="rgb(235,28,35)" fg:x="13439" fg:w="58"/><text x="60.9693%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (4 samples, 0.02%)</title><rect x="60.9813%" y="85" width="0.0181%" height="15" fill="rgb(210,56,17)" fg:x="13497" fg:w="4"/><text x="61.2313%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (3 samples, 0.01%)</title><rect x="61.0039%" y="85" width="0.0136%" height="15" fill="rgb(224,130,29)" fg:x="13502" fg:w="3"/><text x="61.2539%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (4 samples, 0.02%)</title><rect x="61.0175%" y="85" width="0.0181%" height="15" fill="rgb(235,212,8)" fg:x="13505" fg:w="4"/><text x="61.2675%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (23 samples, 0.10%)</title><rect x="61.0356%" y="85" width="0.1039%" height="15" fill="rgb(223,33,50)" fg:x="13509" fg:w="23"/><text x="61.2856%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (3 samples, 0.01%)</title><rect x="61.1395%" y="85" width="0.0136%" height="15" fill="rgb(219,149,13)" fg:x="13532" fg:w="3"/><text x="61.3895%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (6 samples, 0.03%)</title><rect x="61.1530%" y="85" width="0.0271%" height="15" fill="rgb(250,156,29)" fg:x="13535" fg:w="6"/><text x="61.4030%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (4 samples, 0.02%)</title><rect x="61.1801%" y="85" width="0.0181%" height="15" fill="rgb(216,193,19)" fg:x="13541" fg:w="4"/><text x="61.4301%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (60 samples, 0.27%)</title><rect x="61.1982%" y="85" width="0.2711%" height="15" fill="rgb(216,135,14)" fg:x="13545" fg:w="60"/><text x="61.4482%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (4 samples, 0.02%)</title><rect x="61.4693%" y="85" width="0.0181%" height="15" fill="rgb(241,47,5)" fg:x="13605" fg:w="4"/><text x="61.7193%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209568 (4 samples, 0.02%)</title><rect x="61.4919%" y="85" width="0.0181%" height="15" fill="rgb(233,42,35)" fg:x="13610" fg:w="4"/><text x="61.7419%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (5 samples, 0.02%)</title><rect x="61.5100%" y="85" width="0.0226%" height="15" fill="rgb(231,13,6)" fg:x="13614" fg:w="5"/><text x="61.7600%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (5 samples, 0.02%)</title><rect x="61.5687%" y="85" width="0.0226%" height="15" fill="rgb(207,181,40)" fg:x="13627" fg:w="5"/><text x="61.8187%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (514 samples, 2.32%)</title><rect x="59.2825%" y="101" width="2.3223%" height="15" fill="rgb(254,173,49)" fg:x="13121" fg:w="514"/><text x="59.5325%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c85d (4 samples, 0.02%)</title><rect x="61.6048%" y="101" width="0.0181%" height="15" fill="rgb(221,1,38)" fg:x="13635" fg:w="4"/><text x="61.8548%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86a (9 samples, 0.04%)</title><rect x="61.6274%" y="101" width="0.0407%" height="15" fill="rgb(206,124,46)" fg:x="13640" fg:w="9"/><text x="61.8774%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (57 samples, 0.26%)</title><rect x="61.6681%" y="101" width="0.2575%" height="15" fill="rgb(249,21,11)" fg:x="13649" fg:w="57"/><text x="61.9181%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (55 samples, 0.25%)</title><rect x="61.6771%" y="85" width="0.2485%" height="15" fill="rgb(222,201,40)" fg:x="13651" fg:w="55"/><text x="61.9271%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c877 (4 samples, 0.02%)</title><rect x="61.9301%" y="101" width="0.0181%" height="15" fill="rgb(235,61,29)" fg:x="13707" fg:w="4"/><text x="62.1801%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fc (6 samples, 0.03%)</title><rect x="61.9482%" y="85" width="0.0271%" height="15" fill="rgb(219,207,3)" fg:x="13711" fg:w="6"/><text x="62.1982%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223704 (5 samples, 0.02%)</title><rect x="61.9889%" y="85" width="0.0226%" height="15" fill="rgb(222,56,46)" fg:x="13720" fg:w="5"/><text x="62.2389%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223709 (3 samples, 0.01%)</title><rect x="62.0115%" y="85" width="0.0136%" height="15" fill="rgb(239,76,54)" fg:x="13725" fg:w="3"/><text x="62.2615%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370c (3 samples, 0.01%)</title><rect x="62.0250%" y="85" width="0.0136%" height="15" fill="rgb(231,124,27)" fg:x="13728" fg:w="3"/><text x="62.2750%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223722 (3 samples, 0.01%)</title><rect x="62.0386%" y="85" width="0.0136%" height="15" fill="rgb(249,195,6)" fg:x="13731" fg:w="3"/><text x="62.2886%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223725 (7 samples, 0.03%)</title><rect x="62.0521%" y="85" width="0.0316%" height="15" fill="rgb(237,174,47)" fg:x="13734" fg:w="7"/><text x="62.3021%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22373f (7 samples, 0.03%)</title><rect x="62.0838%" y="85" width="0.0316%" height="15" fill="rgb(206,201,31)" fg:x="13741" fg:w="7"/><text x="62.3338%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223746 (5 samples, 0.02%)</title><rect x="62.1154%" y="85" width="0.0226%" height="15" fill="rgb(231,57,52)" fg:x="13748" fg:w="5"/><text x="62.3654%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22375f (4 samples, 0.02%)</title><rect x="62.1380%" y="85" width="0.0181%" height="15" fill="rgb(248,177,22)" fg:x="13753" fg:w="4"/><text x="62.3880%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237dd (6 samples, 0.03%)</title><rect x="62.1561%" y="85" width="0.0271%" height="15" fill="rgb(215,211,37)" fg:x="13757" fg:w="6"/><text x="62.4061%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ef (4 samples, 0.02%)</title><rect x="62.1877%" y="85" width="0.0181%" height="15" fill="rgb(241,128,51)" fg:x="13764" fg:w="4"/><text x="62.4377%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (8 samples, 0.04%)</title><rect x="62.2103%" y="85" width="0.0361%" height="15" fill="rgb(227,165,31)" fg:x="13769" fg:w="8"/><text x="62.4603%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223813 (4 samples, 0.02%)</title><rect x="62.2600%" y="85" width="0.0181%" height="15" fill="rgb(228,167,24)" fg:x="13780" fg:w="4"/><text x="62.5100%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223820 (5 samples, 0.02%)</title><rect x="62.2826%" y="85" width="0.0226%" height="15" fill="rgb(228,143,12)" fg:x="13785" fg:w="5"/><text x="62.5326%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382d (10 samples, 0.05%)</title><rect x="62.3052%" y="85" width="0.0452%" height="15" fill="rgb(249,149,8)" fg:x="13790" fg:w="10"/><text x="62.5552%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223841 (4 samples, 0.02%)</title><rect x="62.3639%" y="85" width="0.0181%" height="15" fill="rgb(243,35,44)" fg:x="13803" fg:w="4"/><text x="62.6139%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223849 (7 samples, 0.03%)</title><rect x="62.3820%" y="85" width="0.0316%" height="15" fill="rgb(246,89,9)" fg:x="13807" fg:w="7"/><text x="62.6320%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223861 (4 samples, 0.02%)</title><rect x="62.4181%" y="85" width="0.0181%" height="15" fill="rgb(233,213,13)" fg:x="13815" fg:w="4"/><text x="62.6681%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223866 (5 samples, 0.02%)</title><rect x="62.4362%" y="85" width="0.0226%" height="15" fill="rgb(233,141,41)" fg:x="13819" fg:w="5"/><text x="62.6862%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223870 (5 samples, 0.02%)</title><rect x="62.4588%" y="85" width="0.0226%" height="15" fill="rgb(239,167,4)" fg:x="13824" fg:w="5"/><text x="62.7088%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223881 (3 samples, 0.01%)</title><rect x="62.4949%" y="85" width="0.0136%" height="15" fill="rgb(209,217,16)" fg:x="13832" fg:w="3"/><text x="62.7449%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223884 (4 samples, 0.02%)</title><rect x="62.5085%" y="85" width="0.0181%" height="15" fill="rgb(219,88,35)" fg:x="13835" fg:w="4"/><text x="62.7585%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22388e (5 samples, 0.02%)</title><rect x="62.5265%" y="85" width="0.0226%" height="15" fill="rgb(220,193,23)" fg:x="13839" fg:w="5"/><text x="62.7765%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (103 samples, 0.47%)</title><rect x="62.5491%" y="85" width="0.4654%" height="15" fill="rgb(230,90,52)" fg:x="13844" fg:w="103"/><text x="62.7991%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (3 samples, 0.01%)</title><rect x="63.0235%" y="85" width="0.0136%" height="15" fill="rgb(252,106,19)" fg:x="13949" fg:w="3"/><text x="63.2735%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (5 samples, 0.02%)</title><rect x="63.0371%" y="85" width="0.0226%" height="15" fill="rgb(206,74,20)" fg:x="13952" fg:w="5"/><text x="63.2871%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d5 (3 samples, 0.01%)</title><rect x="63.0597%" y="85" width="0.0136%" height="15" fill="rgb(230,138,44)" fg:x="13957" fg:w="3"/><text x="63.3097%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (6 samples, 0.03%)</title><rect x="63.0823%" y="85" width="0.0271%" height="15" fill="rgb(235,182,43)" fg:x="13962" fg:w="6"/><text x="63.3323%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f5 (3 samples, 0.01%)</title><rect x="63.1184%" y="85" width="0.0136%" height="15" fill="rgb(242,16,51)" fg:x="13970" fg:w="3"/><text x="63.3684%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (32 samples, 0.14%)</title><rect x="63.1410%" y="85" width="0.1446%" height="15" fill="rgb(248,9,4)" fg:x="13975" fg:w="32"/><text x="63.3910%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (30 samples, 0.14%)</title><rect x="63.1500%" y="69" width="0.1355%" height="15" fill="rgb(210,31,22)" fg:x="13977" fg:w="30"/><text x="63.4000%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (6 samples, 0.03%)</title><rect x="63.2856%" y="85" width="0.0271%" height="15" fill="rgb(239,54,39)" fg:x="14007" fg:w="6"/><text x="63.5356%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (9 samples, 0.04%)</title><rect x="63.3127%" y="85" width="0.0407%" height="15" fill="rgb(230,99,41)" fg:x="14013" fg:w="9"/><text x="63.5627%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (3 samples, 0.01%)</title><rect x="63.3624%" y="85" width="0.0136%" height="15" fill="rgb(253,106,12)" fg:x="14024" fg:w="3"/><text x="63.6124%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (4 samples, 0.02%)</title><rect x="63.4076%" y="85" width="0.0181%" height="15" fill="rgb(213,46,41)" fg:x="14034" fg:w="4"/><text x="63.6576%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (4 samples, 0.02%)</title><rect x="63.4257%" y="85" width="0.0181%" height="15" fill="rgb(215,133,35)" fg:x="14038" fg:w="4"/><text x="63.6757%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (4 samples, 0.02%)</title><rect x="63.4482%" y="85" width="0.0181%" height="15" fill="rgb(213,28,5)" fg:x="14043" fg:w="4"/><text x="63.6982%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396c (3 samples, 0.01%)</title><rect x="63.4663%" y="85" width="0.0136%" height="15" fill="rgb(215,77,49)" fg:x="14047" fg:w="3"/><text x="63.7163%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (26 samples, 0.12%)</title><rect x="63.4889%" y="85" width="0.1175%" height="15" fill="rgb(248,100,22)" fg:x="14052" fg:w="26"/><text x="63.7389%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223999 (7 samples, 0.03%)</title><rect x="63.6064%" y="85" width="0.0316%" height="15" fill="rgb(208,67,9)" fg:x="14078" fg:w="7"/><text x="63.8564%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399b (3 samples, 0.01%)</title><rect x="63.6380%" y="85" width="0.0136%" height="15" fill="rgb(219,133,21)" fg:x="14085" fg:w="3"/><text x="63.8880%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (39 samples, 0.18%)</title><rect x="63.6516%" y="85" width="0.1762%" height="15" fill="rgb(246,46,29)" fg:x="14088" fg:w="39"/><text x="63.9016%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (3 samples, 0.01%)</title><rect x="63.8413%" y="85" width="0.0136%" height="15" fill="rgb(246,185,52)" fg:x="14130" fg:w="3"/><text x="64.0913%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (93 samples, 0.42%)</title><rect x="63.8684%" y="85" width="0.4202%" height="15" fill="rgb(252,136,11)" fg:x="14136" fg:w="93"/><text x="64.1184%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (10 samples, 0.05%)</title><rect x="64.3112%" y="85" width="0.0452%" height="15" fill="rgb(219,138,53)" fg:x="14234" fg:w="10"/><text x="64.5612%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (4 samples, 0.02%)</title><rect x="64.3609%" y="85" width="0.0181%" height="15" fill="rgb(211,51,23)" fg:x="14245" fg:w="4"/><text x="64.6109%" y="95.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (8 samples, 0.04%)</title><rect x="64.3790%" y="85" width="0.0361%" height="15" fill="rgb(247,221,28)" fg:x="14249" fg:w="8"/><text x="64.6290%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (554 samples, 2.50%)</title><rect x="61.9482%" y="101" width="2.5030%" height="15" fill="rgb(251,222,45)" fg:x="13711" fg:w="554"/><text x="62.1982%" y="111.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 0.04%)</title><rect x="64.4151%" y="85" width="0.0361%" height="15" fill="rgb(217,162,53)" fg:x="14257" fg:w="8"/><text x="64.6651%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c884 (8 samples, 0.04%)</title><rect x="64.4558%" y="101" width="0.0361%" height="15" fill="rgb(229,93,14)" fg:x="14266" fg:w="8"/><text x="64.7058%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c88c (11 samples, 0.05%)</title><rect x="64.4919%" y="101" width="0.0497%" height="15" fill="rgb(209,67,49)" fg:x="14274" fg:w="11"/><text x="64.7419%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c894 (10 samples, 0.05%)</title><rect x="64.5416%" y="101" width="0.0452%" height="15" fill="rgb(213,87,29)" fg:x="14285" fg:w="10"/><text x="64.7916%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (6 samples, 0.03%)</title><rect x="64.5868%" y="101" width="0.0271%" height="15" fill="rgb(205,151,52)" fg:x="14295" fg:w="6"/><text x="64.8368%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (9 samples, 0.04%)</title><rect x="64.6139%" y="101" width="0.0407%" height="15" fill="rgb(253,215,39)" fg:x="14301" fg:w="9"/><text x="64.8639%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (1,571 samples, 7.10%)</title><rect x="57.6560%" y="117" width="7.0980%" height="15" fill="rgb(221,220,41)" fg:x="12761" fg:w="1571"/><text x="57.9060%" y="127.50">libsystem_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.09%)</title><rect x="64.6636%" y="101" width="0.0904%" height="15" fill="rgb(218,133,21)" fg:x="14312" fg:w="20"/><text x="64.9136%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6b0 (9 samples, 0.04%)</title><rect x="64.7630%" y="117" width="0.0407%" height="15" fill="rgb(221,193,43)" fg:x="14334" fg:w="9"/><text x="65.0130%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6bb (5 samples, 0.02%)</title><rect x="64.8037%" y="117" width="0.0226%" height="15" fill="rgb(240,128,52)" fg:x="14343" fg:w="5"/><text x="65.0537%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6c2 (7 samples, 0.03%)</title><rect x="64.8263%" y="117" width="0.0316%" height="15" fill="rgb(253,114,12)" fg:x="14348" fg:w="7"/><text x="65.0763%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c736 (12 samples, 0.05%)</title><rect x="64.8579%" y="117" width="0.0542%" height="15" fill="rgb(215,223,47)" fg:x="14355" fg:w="12"/><text x="65.1079%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c740 (7 samples, 0.03%)</title><rect x="64.9121%" y="117" width="0.0316%" height="15" fill="rgb(248,225,23)" fg:x="14367" fg:w="7"/><text x="65.1621%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c750 (5 samples, 0.02%)</title><rect x="64.9483%" y="117" width="0.0226%" height="15" fill="rgb(250,108,0)" fg:x="14375" fg:w="5"/><text x="65.1983%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (1,646 samples, 7.44%)</title><rect x="57.5385%" y="133" width="7.4369%" height="15" fill="rgb(228,208,7)" fg:x="12735" fg:w="1646"/><text x="57.7885%" y="143.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b238 (7 samples, 0.03%)</title><rect x="64.9754%" y="133" width="0.0316%" height="15" fill="rgb(244,45,10)" fg:x="14381" fg:w="7"/><text x="65.2254%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b260 (3 samples, 0.01%)</title><rect x="65.0115%" y="133" width="0.0136%" height="15" fill="rgb(207,125,25)" fg:x="14389" fg:w="3"/><text x="65.2615%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b267 (3 samples, 0.01%)</title><rect x="65.0251%" y="133" width="0.0136%" height="15" fill="rgb(210,195,18)" fg:x="14392" fg:w="3"/><text x="65.2751%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c653 (15 samples, 0.07%)</title><rect x="65.0431%" y="133" width="0.0678%" height="15" fill="rgb(249,80,12)" fg:x="14396" fg:w="15"/><text x="65.2931%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2,230 samples, 10.08%)</title><rect x="55.0400%" y="149" width="10.0755%" height="15" fill="rgb(221,65,9)" fg:x="12182" fg:w="2230"/><text x="55.2900%" y="159.50">dateo_fun_remov..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b100 (6 samples, 0.03%)</title><rect x="65.1154%" y="149" width="0.0271%" height="15" fill="rgb(235,49,36)" fg:x="14412" fg:w="6"/><text x="65.3654%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,351 samples, 10.62%)</title><rect x="54.5701%" y="165" width="10.6221%" height="15" fill="rgb(225,32,20)" fg:x="12078" fg:w="2351"/><text x="54.8201%" y="175.50">dateo_fun_remove..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b26e (10 samples, 0.05%)</title><rect x="65.1471%" y="149" width="0.0452%" height="15" fill="rgb(215,141,46)" fg:x="14419" fg:w="10"/><text x="65.3971%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="65.1922%" y="165" width="0.0136%" height="15" fill="rgb(250,160,47)" fg:x="14429" fg:w="3"/><text x="65.4422%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (10 samples, 0.05%)</title><rect x="65.2058%" y="165" width="0.0452%" height="15" fill="rgb(216,222,40)" fg:x="14432" fg:w="10"/><text x="65.4558%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (3 samples, 0.01%)</title><rect x="65.2555%" y="165" width="0.0136%" height="15" fill="rgb(234,217,39)" fg:x="14443" fg:w="3"/><text x="65.5055%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (7 samples, 0.03%)</title><rect x="65.2781%" y="165" width="0.0316%" height="15" fill="rgb(207,178,40)" fg:x="14448" fg:w="7"/><text x="65.5281%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (11 samples, 0.05%)</title><rect x="65.3097%" y="165" width="0.0497%" height="15" fill="rgb(221,136,13)" fg:x="14455" fg:w="11"/><text x="65.5597%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (6 samples, 0.03%)</title><rect x="65.3594%" y="165" width="0.0271%" height="15" fill="rgb(249,199,10)" fg:x="14466" fg:w="6"/><text x="65.6094%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (9 samples, 0.04%)</title><rect x="65.3865%" y="165" width="0.0407%" height="15" fill="rgb(249,222,13)" fg:x="14472" fg:w="9"/><text x="65.6365%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (6 samples, 0.03%)</title><rect x="65.4317%" y="165" width="0.0271%" height="15" fill="rgb(244,185,38)" fg:x="14482" fg:w="6"/><text x="65.6817%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (29 samples, 0.13%)</title><rect x="65.4588%" y="165" width="0.1310%" height="15" fill="rgb(236,202,9)" fg:x="14488" fg:w="29"/><text x="65.7088%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (84 samples, 0.38%)</title><rect x="65.5898%" y="165" width="0.3795%" height="15" fill="rgb(250,229,37)" fg:x="14517" fg:w="84"/><text x="65.8398%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (5 samples, 0.02%)</title><rect x="65.9694%" y="165" width="0.0226%" height="15" fill="rgb(206,174,23)" fg:x="14601" fg:w="5"/><text x="66.2194%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (12 samples, 0.05%)</title><rect x="65.9920%" y="165" width="0.0542%" height="15" fill="rgb(211,33,43)" fg:x="14606" fg:w="12"/><text x="66.2420%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (49 samples, 0.22%)</title><rect x="66.0462%" y="165" width="0.2214%" height="15" fill="rgb(245,58,50)" fg:x="14618" fg:w="49"/><text x="66.2962%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (5 samples, 0.02%)</title><rect x="66.2676%" y="165" width="0.0226%" height="15" fill="rgb(244,68,36)" fg:x="14667" fg:w="5"/><text x="66.5176%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (4 samples, 0.02%)</title><rect x="66.2902%" y="165" width="0.0181%" height="15" fill="rgb(232,229,15)" fg:x="14672" fg:w="4"/><text x="66.5402%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (17 samples, 0.08%)</title><rect x="66.3082%" y="165" width="0.0768%" height="15" fill="rgb(254,30,23)" fg:x="14676" fg:w="17"/><text x="66.5582%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (4 samples, 0.02%)</title><rect x="66.3850%" y="165" width="0.0181%" height="15" fill="rgb(235,160,14)" fg:x="14693" fg:w="4"/><text x="66.6350%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (5 samples, 0.02%)</title><rect x="66.4031%" y="165" width="0.0226%" height="15" fill="rgb(212,155,44)" fg:x="14697" fg:w="5"/><text x="66.6531%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (8 samples, 0.04%)</title><rect x="66.4347%" y="165" width="0.0361%" height="15" fill="rgb(226,2,50)" fg:x="14704" fg:w="8"/><text x="66.6847%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (9 samples, 0.04%)</title><rect x="66.4709%" y="165" width="0.0407%" height="15" fill="rgb(234,177,6)" fg:x="14712" fg:w="9"/><text x="66.7209%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (7 samples, 0.03%)</title><rect x="66.5115%" y="165" width="0.0316%" height="15" fill="rgb(217,24,9)" fg:x="14721" fg:w="7"/><text x="66.7615%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (5 samples, 0.02%)</title><rect x="66.5432%" y="165" width="0.0226%" height="15" fill="rgb(220,13,46)" fg:x="14728" fg:w="5"/><text x="66.7932%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (4 samples, 0.02%)</title><rect x="66.5658%" y="165" width="0.0181%" height="15" fill="rgb(239,221,27)" fg:x="14733" fg:w="4"/><text x="66.8158%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (5 samples, 0.02%)</title><rect x="66.5838%" y="165" width="0.0226%" height="15" fill="rgb(222,198,25)" fg:x="14737" fg:w="5"/><text x="66.8338%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (51 samples, 0.23%)</title><rect x="66.6200%" y="165" width="0.2304%" height="15" fill="rgb(211,99,13)" fg:x="14745" fg:w="51"/><text x="66.8700%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (4 samples, 0.02%)</title><rect x="66.8504%" y="165" width="0.0181%" height="15" fill="rgb(232,111,31)" fg:x="14796" fg:w="4"/><text x="67.1004%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (18 samples, 0.08%)</title><rect x="66.8865%" y="165" width="0.0813%" height="15" fill="rgb(245,82,37)" fg:x="14804" fg:w="18"/><text x="67.1365%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (4 samples, 0.02%)</title><rect x="66.9679%" y="165" width="0.0181%" height="15" fill="rgb(227,149,46)" fg:x="14822" fg:w="4"/><text x="67.2179%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (6 samples, 0.03%)</title><rect x="66.9859%" y="165" width="0.0271%" height="15" fill="rgb(218,36,50)" fg:x="14826" fg:w="6"/><text x="67.2359%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (5 samples, 0.02%)</title><rect x="67.0131%" y="165" width="0.0226%" height="15" fill="rgb(226,80,48)" fg:x="14832" fg:w="5"/><text x="67.2631%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (49 samples, 0.22%)</title><rect x="67.0356%" y="165" width="0.2214%" height="15" fill="rgb(238,224,15)" fg:x="14837" fg:w="49"/><text x="67.2856%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (6 samples, 0.03%)</title><rect x="67.2570%" y="165" width="0.0271%" height="15" fill="rgb(241,136,10)" fg:x="14886" fg:w="6"/><text x="67.5070%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20955a (3 samples, 0.01%)</title><rect x="67.2841%" y="165" width="0.0136%" height="15" fill="rgb(208,32,45)" fg:x="14892" fg:w="3"/><text x="67.5341%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (9 samples, 0.04%)</title><rect x="67.3067%" y="165" width="0.0407%" height="15" fill="rgb(207,135,9)" fg:x="14897" fg:w="9"/><text x="67.5567%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (6 samples, 0.03%)</title><rect x="67.3519%" y="165" width="0.0271%" height="15" fill="rgb(206,86,44)" fg:x="14907" fg:w="6"/><text x="67.6019%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (10 samples, 0.05%)</title><rect x="67.3835%" y="165" width="0.0452%" height="15" fill="rgb(245,177,15)" fg:x="14914" fg:w="10"/><text x="67.6335%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (4 samples, 0.02%)</title><rect x="67.4378%" y="165" width="0.0181%" height="15" fill="rgb(206,64,50)" fg:x="14926" fg:w="4"/><text x="67.6878%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (5 samples, 0.02%)</title><rect x="67.4558%" y="165" width="0.0226%" height="15" fill="rgb(234,36,40)" fg:x="14930" fg:w="5"/><text x="67.7058%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (21 samples, 0.09%)</title><rect x="67.4784%" y="165" width="0.0949%" height="15" fill="rgb(213,64,8)" fg:x="14935" fg:w="21"/><text x="67.7284%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (7 samples, 0.03%)</title><rect x="67.5823%" y="165" width="0.0316%" height="15" fill="rgb(210,75,36)" fg:x="14958" fg:w="7"/><text x="67.8323%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (13 samples, 0.06%)</title><rect x="67.6185%" y="165" width="0.0587%" height="15" fill="rgb(229,88,21)" fg:x="14966" fg:w="13"/><text x="67.8685%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (10 samples, 0.05%)</title><rect x="67.6817%" y="165" width="0.0452%" height="15" fill="rgb(252,204,47)" fg:x="14980" fg:w="10"/><text x="67.9317%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (15 samples, 0.07%)</title><rect x="67.7450%" y="165" width="0.0678%" height="15" fill="rgb(208,77,27)" fg:x="14994" fg:w="15"/><text x="67.9950%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (8 samples, 0.04%)</title><rect x="67.8173%" y="165" width="0.0361%" height="15" fill="rgb(221,76,26)" fg:x="15010" fg:w="8"/><text x="68.0673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (16 samples, 0.07%)</title><rect x="67.8534%" y="165" width="0.0723%" height="15" fill="rgb(225,139,18)" fg:x="15018" fg:w="16"/><text x="68.1034%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (6 samples, 0.03%)</title><rect x="67.9257%" y="165" width="0.0271%" height="15" fill="rgb(230,137,11)" fg:x="15034" fg:w="6"/><text x="68.1757%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (6 samples, 0.03%)</title><rect x="67.9528%" y="165" width="0.0271%" height="15" fill="rgb(212,28,1)" fg:x="15040" fg:w="6"/><text x="68.2028%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (10 samples, 0.05%)</title><rect x="67.9890%" y="165" width="0.0452%" height="15" fill="rgb(248,164,17)" fg:x="15048" fg:w="10"/><text x="68.2390%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (6 samples, 0.03%)</title><rect x="68.0432%" y="165" width="0.0271%" height="15" fill="rgb(222,171,42)" fg:x="15060" fg:w="6"/><text x="68.2932%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (8 samples, 0.04%)</title><rect x="68.0793%" y="165" width="0.0361%" height="15" fill="rgb(243,84,45)" fg:x="15068" fg:w="8"/><text x="68.3293%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223849 (3 samples, 0.01%)</title><rect x="68.1200%" y="165" width="0.0136%" height="15" fill="rgb(252,49,23)" fg:x="15077" fg:w="3"/><text x="68.3700%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (5 samples, 0.02%)</title><rect x="68.1336%" y="165" width="0.0226%" height="15" fill="rgb(215,19,7)" fg:x="15080" fg:w="5"/><text x="68.3836%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (6 samples, 0.03%)</title><rect x="68.1833%" y="165" width="0.0271%" height="15" fill="rgb(238,81,41)" fg:x="15091" fg:w="6"/><text x="68.4333%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (7 samples, 0.03%)</title><rect x="68.2149%" y="165" width="0.0316%" height="15" fill="rgb(210,199,37)" fg:x="15098" fg:w="7"/><text x="68.4649%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (307 samples, 1.39%)</title><rect x="68.2465%" y="165" width="1.3871%" height="15" fill="rgb(244,192,49)" fg:x="15105" fg:w="307"/><text x="68.4965%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (14 samples, 0.06%)</title><rect x="69.6426%" y="165" width="0.0633%" height="15" fill="rgb(226,211,11)" fg:x="15414" fg:w="14"/><text x="69.8926%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (13 samples, 0.06%)</title><rect x="69.7149%" y="165" width="0.0587%" height="15" fill="rgb(236,162,54)" fg:x="15430" fg:w="13"/><text x="69.9649%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (8 samples, 0.04%)</title><rect x="69.7736%" y="165" width="0.0361%" height="15" fill="rgb(220,229,9)" fg:x="15443" fg:w="8"/><text x="70.0236%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (92 samples, 0.42%)</title><rect x="69.8098%" y="165" width="0.4157%" height="15" fill="rgb(250,87,22)" fg:x="15451" fg:w="92"/><text x="70.0598%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (91 samples, 0.41%)</title><rect x="69.8143%" y="149" width="0.4112%" height="15" fill="rgb(239,43,17)" fg:x="15452" fg:w="91"/><text x="70.0643%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223908 (4 samples, 0.02%)</title><rect x="70.2345%" y="165" width="0.0181%" height="15" fill="rgb(231,177,25)" fg:x="15545" fg:w="4"/><text x="70.4845%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (12 samples, 0.05%)</title><rect x="70.2526%" y="165" width="0.0542%" height="15" fill="rgb(219,179,1)" fg:x="15549" fg:w="12"/><text x="70.5026%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (40 samples, 0.18%)</title><rect x="70.3203%" y="165" width="0.1807%" height="15" fill="rgb(238,219,53)" fg:x="15564" fg:w="40"/><text x="70.5703%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (5 samples, 0.02%)</title><rect x="70.5101%" y="165" width="0.0226%" height="15" fill="rgb(232,167,36)" fg:x="15606" fg:w="5"/><text x="70.7601%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223928 (10 samples, 0.05%)</title><rect x="70.5327%" y="165" width="0.0452%" height="15" fill="rgb(244,19,51)" fg:x="15611" fg:w="10"/><text x="70.7827%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223939 (6 samples, 0.03%)</title><rect x="70.5959%" y="165" width="0.0271%" height="15" fill="rgb(224,6,22)" fg:x="15625" fg:w="6"/><text x="70.8459%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (4 samples, 0.02%)</title><rect x="70.6276%" y="165" width="0.0181%" height="15" fill="rgb(224,145,5)" fg:x="15632" fg:w="4"/><text x="70.8776%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22394d (7 samples, 0.03%)</title><rect x="70.6456%" y="165" width="0.0316%" height="15" fill="rgb(234,130,49)" fg:x="15636" fg:w="7"/><text x="70.8956%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (5 samples, 0.02%)</title><rect x="70.6818%" y="165" width="0.0226%" height="15" fill="rgb(254,6,2)" fg:x="15644" fg:w="5"/><text x="70.9318%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395d (7 samples, 0.03%)</title><rect x="70.7044%" y="165" width="0.0316%" height="15" fill="rgb(208,96,46)" fg:x="15649" fg:w="7"/><text x="70.9544%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396e (6 samples, 0.03%)</title><rect x="70.7450%" y="165" width="0.0271%" height="15" fill="rgb(239,3,39)" fg:x="15658" fg:w="6"/><text x="70.9950%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (24 samples, 0.11%)</title><rect x="70.7857%" y="165" width="0.1084%" height="15" fill="rgb(233,210,1)" fg:x="15667" fg:w="24"/><text x="71.0357%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223999 (4 samples, 0.02%)</title><rect x="70.8987%" y="165" width="0.0181%" height="15" fill="rgb(244,137,37)" fg:x="15692" fg:w="4"/><text x="71.1487%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399b (4 samples, 0.02%)</title><rect x="70.9167%" y="165" width="0.0181%" height="15" fill="rgb(240,136,2)" fg:x="15696" fg:w="4"/><text x="71.1667%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (93 samples, 0.42%)</title><rect x="70.9348%" y="165" width="0.4202%" height="15" fill="rgb(239,18,37)" fg:x="15700" fg:w="93"/><text x="71.1848%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (7 samples, 0.03%)</title><rect x="71.3595%" y="165" width="0.0316%" height="15" fill="rgb(218,185,22)" fg:x="15794" fg:w="7"/><text x="71.6095%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (9 samples, 0.04%)</title><rect x="71.3911%" y="165" width="0.0407%" height="15" fill="rgb(225,218,4)" fg:x="15801" fg:w="9"/><text x="71.6411%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (172 samples, 0.78%)</title><rect x="71.4408%" y="165" width="0.7771%" height="15" fill="rgb(230,182,32)" fg:x="15812" fg:w="172"/><text x="71.6908%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f6 (7 samples, 0.03%)</title><rect x="72.2225%" y="165" width="0.0316%" height="15" fill="rgb(242,56,43)" fg:x="15985" fg:w="7"/><text x="72.4725%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (6 samples, 0.03%)</title><rect x="72.2541%" y="165" width="0.0271%" height="15" fill="rgb(233,99,24)" fg:x="15992" fg:w="6"/><text x="72.5041%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (15 samples, 0.07%)</title><rect x="72.2857%" y="165" width="0.0678%" height="15" fill="rgb(234,209,42)" fg:x="15999" fg:w="15"/><text x="72.5357%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (17 samples, 0.08%)</title><rect x="72.3580%" y="165" width="0.0768%" height="15" fill="rgb(227,7,12)" fg:x="16015" fg:w="17"/><text x="72.6080%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (9 samples, 0.04%)</title><rect x="72.4439%" y="165" width="0.0407%" height="15" fill="rgb(245,203,43)" fg:x="16034" fg:w="9"/><text x="72.6939%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (13 samples, 0.06%)</title><rect x="72.4890%" y="165" width="0.0587%" height="15" fill="rgb(238,205,33)" fg:x="16044" fg:w="13"/><text x="72.7390%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (12 samples, 0.05%)</title><rect x="72.5478%" y="165" width="0.0542%" height="15" fill="rgb(231,56,7)" fg:x="16057" fg:w="12"/><text x="72.7978%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (8 samples, 0.04%)</title><rect x="72.6065%" y="165" width="0.0361%" height="15" fill="rgb(244,186,29)" fg:x="16070" fg:w="8"/><text x="72.8565%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d1d (3 samples, 0.01%)</title><rect x="72.6427%" y="165" width="0.0136%" height="15" fill="rgb(234,111,31)" fg:x="16078" fg:w="3"/><text x="72.8927%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (13 samples, 0.06%)</title><rect x="72.6562%" y="165" width="0.0587%" height="15" fill="rgb(241,149,10)" fg:x="16081" fg:w="13"/><text x="72.9062%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (15 samples, 0.07%)</title><rect x="72.7240%" y="165" width="0.0678%" height="15" fill="rgb(249,206,44)" fg:x="16096" fg:w="15"/><text x="72.9740%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (15 samples, 0.07%)</title><rect x="72.7918%" y="165" width="0.0678%" height="15" fill="rgb(251,153,30)" fg:x="16111" fg:w="15"/><text x="73.0418%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (21 samples, 0.09%)</title><rect x="72.8595%" y="165" width="0.0949%" height="15" fill="rgb(239,152,38)" fg:x="16126" fg:w="21"/><text x="73.1095%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (9,490 samples, 42.88%)</title><rect x="30.4749%" y="181" width="42.8772%" height="15" fill="rgb(249,139,47)" fg:x="6745" fg:w="9490"/><text x="30.7249%" y="191.50">dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (88 samples, 0.40%)</title><rect x="72.9544%" y="165" width="0.3976%" height="15" fill="rgb(244,64,35)" fg:x="16147" fg:w="88"/><text x="73.2044%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (676 samples, 3.05%)</title><rect x="73.4876%" y="165" width="3.0543%" height="15" fill="rgb(216,46,15)" fg:x="16265" fg:w="676"/><text x="73.7376%" y="175.50">dat..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d671 (7 samples, 0.03%)</title><rect x="76.5418%" y="101" width="0.0316%" height="15" fill="rgb(250,74,19)" fg:x="16941" fg:w="7"/><text x="76.7918%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ddf (7 samples, 0.03%)</title><rect x="76.5418%" y="85" width="0.0316%" height="15" fill="rgb(249,42,33)" fg:x="16941" fg:w="7"/><text x="76.7918%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (7 samples, 0.03%)</title><rect x="76.5418%" y="69" width="0.0316%" height="15" fill="rgb(242,149,17)" fg:x="16941" fg:w="7"/><text x="76.7918%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (7 samples, 0.03%)</title><rect x="76.5418%" y="53" width="0.0316%" height="15" fill="rgb(244,29,21)" fg:x="16941" fg:w="7"/><text x="76.7918%" y="63.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.05%)</title><rect x="76.5418%" y="165" width="0.0497%" height="15" fill="rgb(220,130,37)" fg:x="16941" fg:w="11"/><text x="76.7918%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (11 samples, 0.05%)</title><rect x="76.5418%" y="149" width="0.0497%" height="15" fill="rgb(211,67,2)" fg:x="16941" fg:w="11"/><text x="76.7918%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (11 samples, 0.05%)</title><rect x="76.5418%" y="133" width="0.0497%" height="15" fill="rgb(235,68,52)" fg:x="16941" fg:w="11"/><text x="76.7918%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (11 samples, 0.05%)</title><rect x="76.5418%" y="117" width="0.0497%" height="15" fill="rgb(246,142,3)" fg:x="16941" fg:w="11"/><text x="76.7918%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.05%)</title><rect x="76.6051%" y="117" width="0.0497%" height="15" fill="rgb(241,25,7)" fg:x="16955" fg:w="11"/><text x="76.8551%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (6 samples, 0.03%)</title><rect x="76.6593%" y="117" width="0.0271%" height="15" fill="rgb(242,119,39)" fg:x="16967" fg:w="6"/><text x="76.9093%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.11%)</title><rect x="76.5915%" y="133" width="0.1084%" height="15" fill="rgb(241,98,45)" fg:x="16952" fg:w="24"/><text x="76.8415%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all (26 samples, 0.12%)</title><rect x="76.5915%" y="165" width="0.1175%" height="15" fill="rgb(254,28,30)" fg:x="16952" fg:w="26"/><text x="76.8415%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.12%)</title><rect x="76.5915%" y="149" width="0.1175%" height="15" fill="rgb(241,142,54)" fg:x="16952" fg:w="26"/><text x="76.8415%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.06%)</title><rect x="77.2421%" y="133" width="0.0633%" height="15" fill="rgb(222,85,15)" fg:x="17096" fg:w="14"/><text x="77.4921%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (3 samples, 0.01%)</title><rect x="81.0328%" y="101" width="0.0136%" height="15" fill="rgb(210,85,47)" fg:x="17935" fg:w="3"/><text x="81.2828%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (6 samples, 0.03%)</title><rect x="81.0464%" y="101" width="0.0271%" height="15" fill="rgb(224,206,25)" fg:x="17938" fg:w="6"/><text x="81.2964%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (4 samples, 0.02%)</title><rect x="81.0871%" y="101" width="0.0181%" height="15" fill="rgb(243,201,19)" fg:x="17947" fg:w="4"/><text x="81.3371%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (5 samples, 0.02%)</title><rect x="81.1097%" y="101" width="0.0226%" height="15" fill="rgb(236,59,4)" fg:x="17952" fg:w="5"/><text x="81.3597%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (17 samples, 0.08%)</title><rect x="81.1322%" y="101" width="0.0768%" height="15" fill="rgb(254,179,45)" fg:x="17957" fg:w="17"/><text x="81.3822%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (115 samples, 0.52%)</title><rect x="81.2091%" y="101" width="0.5196%" height="15" fill="rgb(226,14,10)" fg:x="17974" fg:w="115"/><text x="81.4591%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (7 samples, 0.03%)</title><rect x="81.7286%" y="101" width="0.0316%" height="15" fill="rgb(244,27,41)" fg:x="18089" fg:w="7"/><text x="81.9786%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (3 samples, 0.01%)</title><rect x="81.7603%" y="101" width="0.0136%" height="15" fill="rgb(235,35,32)" fg:x="18096" fg:w="3"/><text x="82.0103%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (27 samples, 0.12%)</title><rect x="81.7738%" y="101" width="0.1220%" height="15" fill="rgb(218,68,31)" fg:x="18099" fg:w="27"/><text x="82.0238%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (6 samples, 0.03%)</title><rect x="81.8958%" y="101" width="0.0271%" height="15" fill="rgb(207,120,37)" fg:x="18126" fg:w="6"/><text x="82.1458%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (7 samples, 0.03%)</title><rect x="81.9229%" y="101" width="0.0316%" height="15" fill="rgb(227,98,0)" fg:x="18132" fg:w="7"/><text x="82.1729%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (15 samples, 0.07%)</title><rect x="81.9545%" y="101" width="0.0678%" height="15" fill="rgb(207,7,3)" fg:x="18139" fg:w="15"/><text x="82.2045%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (7 samples, 0.03%)</title><rect x="82.0268%" y="101" width="0.0316%" height="15" fill="rgb(206,98,19)" fg:x="18155" fg:w="7"/><text x="82.2768%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (9 samples, 0.04%)</title><rect x="82.0630%" y="101" width="0.0407%" height="15" fill="rgb(217,5,26)" fg:x="18163" fg:w="9"/><text x="82.3130%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (4 samples, 0.02%)</title><rect x="82.1217%" y="101" width="0.0181%" height="15" fill="rgb(235,190,38)" fg:x="18176" fg:w="4"/><text x="82.3717%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (6 samples, 0.03%)</title><rect x="82.1398%" y="101" width="0.0271%" height="15" fill="rgb(247,86,24)" fg:x="18180" fg:w="6"/><text x="82.3898%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (4 samples, 0.02%)</title><rect x="82.1669%" y="101" width="0.0181%" height="15" fill="rgb(205,101,16)" fg:x="18186" fg:w="4"/><text x="82.4169%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (7 samples, 0.03%)</title><rect x="82.1850%" y="101" width="0.0316%" height="15" fill="rgb(246,168,33)" fg:x="18190" fg:w="7"/><text x="82.4350%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (6 samples, 0.03%)</title><rect x="82.2166%" y="101" width="0.0271%" height="15" fill="rgb(231,114,1)" fg:x="18197" fg:w="6"/><text x="82.4666%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (7 samples, 0.03%)</title><rect x="82.2437%" y="101" width="0.0316%" height="15" fill="rgb(207,184,53)" fg:x="18203" fg:w="7"/><text x="82.4937%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (28 samples, 0.13%)</title><rect x="82.2889%" y="101" width="0.1265%" height="15" fill="rgb(224,95,51)" fg:x="18213" fg:w="28"/><text x="82.5389%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (4 samples, 0.02%)</title><rect x="82.4154%" y="101" width="0.0181%" height="15" fill="rgb(212,188,45)" fg:x="18241" fg:w="4"/><text x="82.6654%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (12 samples, 0.05%)</title><rect x="82.4470%" y="101" width="0.0542%" height="15" fill="rgb(223,154,38)" fg:x="18248" fg:w="12"/><text x="82.6970%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (23 samples, 0.10%)</title><rect x="82.5012%" y="101" width="0.1039%" height="15" fill="rgb(251,22,52)" fg:x="18260" fg:w="23"/><text x="82.7512%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (3 samples, 0.01%)</title><rect x="82.6097%" y="101" width="0.0136%" height="15" fill="rgb(229,209,22)" fg:x="18284" fg:w="3"/><text x="82.8597%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (5 samples, 0.02%)</title><rect x="82.6232%" y="101" width="0.0226%" height="15" fill="rgb(234,138,34)" fg:x="18287" fg:w="5"/><text x="82.8732%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (65 samples, 0.29%)</title><rect x="82.6503%" y="101" width="0.2937%" height="15" fill="rgb(212,95,11)" fg:x="18293" fg:w="65"/><text x="82.9003%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (3 samples, 0.01%)</title><rect x="82.9440%" y="101" width="0.0136%" height="15" fill="rgb(240,179,47)" fg:x="18358" fg:w="3"/><text x="83.1940%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (5 samples, 0.02%)</title><rect x="82.9666%" y="101" width="0.0226%" height="15" fill="rgb(240,163,11)" fg:x="18363" fg:w="5"/><text x="83.2166%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (7 samples, 0.03%)</title><rect x="82.9982%" y="101" width="0.0316%" height="15" fill="rgb(236,37,12)" fg:x="18370" fg:w="7"/><text x="83.2482%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (8 samples, 0.04%)</title><rect x="83.0344%" y="101" width="0.0361%" height="15" fill="rgb(232,164,16)" fg:x="18378" fg:w="8"/><text x="83.2844%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (5 samples, 0.02%)</title><rect x="83.0705%" y="101" width="0.0226%" height="15" fill="rgb(244,205,15)" fg:x="18386" fg:w="5"/><text x="83.3205%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,008 samples, 4.55%)</title><rect x="78.5614%" y="117" width="4.5543%" height="15" fill="rgb(223,117,47)" fg:x="17388" fg:w="1008"/><text x="78.8114%" y="127.50">dateo..</text></g><g><title>dateo_fun_remover`__rdl_alloc (16 samples, 0.07%)</title><rect x="83.1157%" y="117" width="0.0723%" height="15" fill="rgb(244,107,35)" fg:x="18396" fg:w="16"/><text x="83.3657%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (6 samples, 0.03%)</title><rect x="83.1925%" y="117" width="0.0271%" height="15" fill="rgb(205,140,8)" fg:x="18413" fg:w="6"/><text x="83.4425%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20938f (3 samples, 0.01%)</title><rect x="83.2377%" y="117" width="0.0136%" height="15" fill="rgb(228,84,46)" fg:x="18423" fg:w="3"/><text x="83.4877%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (5 samples, 0.02%)</title><rect x="83.2513%" y="117" width="0.0226%" height="15" fill="rgb(254,188,9)" fg:x="18426" fg:w="5"/><text x="83.5013%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (4 samples, 0.02%)</title><rect x="83.2738%" y="117" width="0.0181%" height="15" fill="rgb(206,112,54)" fg:x="18431" fg:w="4"/><text x="83.5238%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (4 samples, 0.02%)</title><rect x="83.2919%" y="117" width="0.0181%" height="15" fill="rgb(216,84,49)" fg:x="18435" fg:w="4"/><text x="83.5419%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (6 samples, 0.03%)</title><rect x="83.3145%" y="117" width="0.0271%" height="15" fill="rgb(214,194,35)" fg:x="18440" fg:w="6"/><text x="83.5645%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (9 samples, 0.04%)</title><rect x="83.3597%" y="117" width="0.0407%" height="15" fill="rgb(249,28,3)" fg:x="18450" fg:w="9"/><text x="83.6097%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (5 samples, 0.02%)</title><rect x="83.4004%" y="117" width="0.0226%" height="15" fill="rgb(222,56,52)" fg:x="18459" fg:w="5"/><text x="83.6504%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (6 samples, 0.03%)</title><rect x="83.4229%" y="117" width="0.0271%" height="15" fill="rgb(245,217,50)" fg:x="18464" fg:w="6"/><text x="83.6729%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (5 samples, 0.02%)</title><rect x="83.4501%" y="117" width="0.0226%" height="15" fill="rgb(213,201,24)" fg:x="18470" fg:w="5"/><text x="83.7001%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223813 (5 samples, 0.02%)</title><rect x="83.4817%" y="117" width="0.0226%" height="15" fill="rgb(248,116,28)" fg:x="18477" fg:w="5"/><text x="83.7317%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (5 samples, 0.02%)</title><rect x="83.5043%" y="117" width="0.0226%" height="15" fill="rgb(219,72,43)" fg:x="18482" fg:w="5"/><text x="83.7543%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (8 samples, 0.04%)</title><rect x="83.5449%" y="117" width="0.0361%" height="15" fill="rgb(209,138,14)" fg:x="18491" fg:w="8"/><text x="83.7949%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (4 samples, 0.02%)</title><rect x="83.5811%" y="117" width="0.0181%" height="15" fill="rgb(222,18,33)" fg:x="18499" fg:w="4"/><text x="83.8311%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223849 (3 samples, 0.01%)</title><rect x="83.5992%" y="117" width="0.0136%" height="15" fill="rgb(213,199,7)" fg:x="18503" fg:w="3"/><text x="83.8492%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (3 samples, 0.01%)</title><rect x="83.6127%" y="117" width="0.0136%" height="15" fill="rgb(250,110,10)" fg:x="18506" fg:w="3"/><text x="83.8627%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (3 samples, 0.01%)</title><rect x="83.6308%" y="117" width="0.0136%" height="15" fill="rgb(248,123,6)" fg:x="18510" fg:w="3"/><text x="83.8808%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (6 samples, 0.03%)</title><rect x="83.6579%" y="117" width="0.0271%" height="15" fill="rgb(206,91,31)" fg:x="18516" fg:w="6"/><text x="83.9079%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22387d (3 samples, 0.01%)</title><rect x="83.6850%" y="117" width="0.0136%" height="15" fill="rgb(211,154,13)" fg:x="18522" fg:w="3"/><text x="83.9350%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (3 samples, 0.01%)</title><rect x="83.6985%" y="117" width="0.0136%" height="15" fill="rgb(225,148,7)" fg:x="18525" fg:w="3"/><text x="83.9485%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (156 samples, 0.70%)</title><rect x="83.7121%" y="117" width="0.7048%" height="15" fill="rgb(220,160,43)" fg:x="18528" fg:w="156"/><text x="83.9621%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (4 samples, 0.02%)</title><rect x="84.4260%" y="117" width="0.0181%" height="15" fill="rgb(213,52,39)" fg:x="18686" fg:w="4"/><text x="84.6760%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (7 samples, 0.03%)</title><rect x="84.4440%" y="117" width="0.0316%" height="15" fill="rgb(243,137,7)" fg:x="18690" fg:w="7"/><text x="84.6940%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (59 samples, 0.27%)</title><rect x="84.4847%" y="117" width="0.2666%" height="15" fill="rgb(230,79,13)" fg:x="18699" fg:w="59"/><text x="84.7347%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (47 samples, 0.21%)</title><rect x="84.5389%" y="101" width="0.2124%" height="15" fill="rgb(247,105,23)" fg:x="18711" fg:w="47"/><text x="84.7889%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (4 samples, 0.02%)</title><rect x="84.7648%" y="117" width="0.0181%" height="15" fill="rgb(223,179,41)" fg:x="18761" fg:w="4"/><text x="85.0148%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (5 samples, 0.02%)</title><rect x="84.7829%" y="117" width="0.0226%" height="15" fill="rgb(218,9,34)" fg:x="18765" fg:w="5"/><text x="85.0329%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (3 samples, 0.01%)</title><rect x="84.8055%" y="117" width="0.0136%" height="15" fill="rgb(222,106,8)" fg:x="18770" fg:w="3"/><text x="85.0555%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (7 samples, 0.03%)</title><rect x="84.8190%" y="117" width="0.0316%" height="15" fill="rgb(211,220,0)" fg:x="18773" fg:w="7"/><text x="85.0690%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (5 samples, 0.02%)</title><rect x="84.8507%" y="117" width="0.0226%" height="15" fill="rgb(229,52,16)" fg:x="18780" fg:w="5"/><text x="85.1007%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396c (5 samples, 0.02%)</title><rect x="84.8733%" y="117" width="0.0226%" height="15" fill="rgb(212,155,18)" fg:x="18785" fg:w="5"/><text x="85.1233%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (21 samples, 0.09%)</title><rect x="84.9004%" y="117" width="0.0949%" height="15" fill="rgb(242,21,14)" fg:x="18791" fg:w="21"/><text x="85.1504%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399b (3 samples, 0.01%)</title><rect x="84.9953%" y="117" width="0.0136%" height="15" fill="rgb(222,19,48)" fg:x="18812" fg:w="3"/><text x="85.2453%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (62 samples, 0.28%)</title><rect x="85.0088%" y="117" width="0.2801%" height="15" fill="rgb(232,45,27)" fg:x="18815" fg:w="62"/><text x="85.2588%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (6 samples, 0.03%)</title><rect x="85.2935%" y="117" width="0.0271%" height="15" fill="rgb(249,103,42)" fg:x="18878" fg:w="6"/><text x="85.5435%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (3 samples, 0.01%)</title><rect x="85.3206%" y="117" width="0.0136%" height="15" fill="rgb(246,81,33)" fg:x="18884" fg:w="3"/><text x="85.5706%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (98 samples, 0.44%)</title><rect x="85.3386%" y="117" width="0.4428%" height="15" fill="rgb(252,33,42)" fg:x="18888" fg:w="98"/><text x="85.5886%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (3 samples, 0.01%)</title><rect x="85.7859%" y="117" width="0.0136%" height="15" fill="rgb(209,212,41)" fg:x="18987" fg:w="3"/><text x="86.0359%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (4 samples, 0.02%)</title><rect x="85.7995%" y="117" width="0.0181%" height="15" fill="rgb(207,154,6)" fg:x="18990" fg:w="4"/><text x="86.0495%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (10 samples, 0.05%)</title><rect x="85.8221%" y="117" width="0.0452%" height="15" fill="rgb(223,64,47)" fg:x="18995" fg:w="10"/><text x="86.0721%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (8 samples, 0.04%)</title><rect x="85.8673%" y="117" width="0.0361%" height="15" fill="rgb(211,161,38)" fg:x="19005" fg:w="8"/><text x="86.1173%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (6 samples, 0.03%)</title><rect x="85.9034%" y="117" width="0.0271%" height="15" fill="rgb(219,138,40)" fg:x="19013" fg:w="6"/><text x="86.1534%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfd (3 samples, 0.01%)</title><rect x="85.9350%" y="117" width="0.0136%" height="15" fill="rgb(241,228,46)" fg:x="19020" fg:w="3"/><text x="86.1850%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (7 samples, 0.03%)</title><rect x="85.9486%" y="117" width="0.0316%" height="15" fill="rgb(223,209,38)" fg:x="19023" fg:w="7"/><text x="86.1986%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (7 samples, 0.03%)</title><rect x="85.9802%" y="117" width="0.0316%" height="15" fill="rgb(236,164,45)" fg:x="19030" fg:w="7"/><text x="86.2302%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (4 samples, 0.02%)</title><rect x="86.0118%" y="117" width="0.0181%" height="15" fill="rgb(231,15,5)" fg:x="19037" fg:w="4"/><text x="86.2618%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (5 samples, 0.02%)</title><rect x="86.0435%" y="117" width="0.0226%" height="15" fill="rgb(252,35,15)" fg:x="19044" fg:w="5"/><text x="86.2935%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (4 samples, 0.02%)</title><rect x="86.0706%" y="117" width="0.0181%" height="15" fill="rgb(248,181,18)" fg:x="19050" fg:w="4"/><text x="86.3206%" y="127.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (10 samples, 0.05%)</title><rect x="86.0886%" y="117" width="0.0452%" height="15" fill="rgb(233,39,42)" fg:x="19054" fg:w="10"/><text x="86.3386%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,963 samples, 8.87%)</title><rect x="77.3054%" y="133" width="8.8691%" height="15" fill="rgb(238,110,33)" fg:x="17110" fg:w="1963"/><text x="77.5554%" y="143.50">dateo_fun_rem..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.04%)</title><rect x="86.1338%" y="117" width="0.0407%" height="15" fill="rgb(233,195,10)" fg:x="19064" fg:w="9"/><text x="86.3838%" y="127.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$log (3 samples, 0.01%)</title><rect x="86.1745%" y="133" width="0.0136%" height="15" fill="rgb(254,105,3)" fg:x="19073" fg:w="3"/><text x="86.4245%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (10 samples, 0.05%)</title><rect x="86.1926%" y="133" width="0.0452%" height="15" fill="rgb(221,225,9)" fg:x="19077" fg:w="10"/><text x="86.4426%" y="143.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (7 samples, 0.03%)</title><rect x="86.2377%" y="133" width="0.0316%" height="15" fill="rgb(224,227,45)" fg:x="19087" fg:w="7"/><text x="86.4877%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (3 samples, 0.01%)</title><rect x="86.3462%" y="117" width="0.0136%" height="15" fill="rgb(229,198,43)" fg:x="19111" fg:w="3"/><text x="86.5962%" y="127.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (6 samples, 0.03%)</title><rect x="86.4049%" y="101" width="0.0271%" height="15" fill="rgb(206,209,35)" fg:x="19124" fg:w="6"/><text x="86.6549%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f65 (3 samples, 0.01%)</title><rect x="86.4501%" y="101" width="0.0136%" height="15" fill="rgb(245,195,53)" fg:x="19134" fg:w="3"/><text x="86.7001%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f7b (4 samples, 0.02%)</title><rect x="86.4727%" y="101" width="0.0181%" height="15" fill="rgb(240,92,26)" fg:x="19139" fg:w="4"/><text x="86.7227%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (35 samples, 0.16%)</title><rect x="86.5179%" y="101" width="0.1581%" height="15" fill="rgb(207,40,23)" fg:x="19149" fg:w="35"/><text x="86.7679%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b114 (3 samples, 0.01%)</title><rect x="86.6850%" y="101" width="0.0136%" height="15" fill="rgb(223,111,35)" fg:x="19186" fg:w="3"/><text x="86.9350%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b227 (3 samples, 0.01%)</title><rect x="86.7302%" y="101" width="0.0136%" height="15" fill="rgb(229,147,28)" fg:x="19196" fg:w="3"/><text x="86.9802%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a04e (3 samples, 0.01%)</title><rect x="86.7754%" y="69" width="0.0136%" height="15" fill="rgb(211,29,28)" fg:x="19206" fg:w="3"/><text x="87.0254%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a05a (4 samples, 0.02%)</title><rect x="86.7890%" y="69" width="0.0181%" height="15" fill="rgb(228,72,33)" fg:x="19209" fg:w="4"/><text x="87.0390%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (35 samples, 0.16%)</title><rect x="86.8703%" y="69" width="0.1581%" height="15" fill="rgb(205,214,31)" fg:x="19227" fg:w="35"/><text x="87.1203%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c760 (3 samples, 0.01%)</title><rect x="87.0329%" y="69" width="0.0136%" height="15" fill="rgb(224,111,15)" fg:x="19263" fg:w="3"/><text x="87.2829%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c77d (3 samples, 0.01%)</title><rect x="87.0555%" y="69" width="0.0136%" height="15" fill="rgb(253,21,26)" fg:x="19268" fg:w="3"/><text x="87.3055%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (27 samples, 0.12%)</title><rect x="87.0872%" y="53" width="0.1220%" height="15" fill="rgb(245,139,43)" fg:x="19275" fg:w="27"/><text x="87.3372%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (3 samples, 0.01%)</title><rect x="87.2091%" y="53" width="0.0136%" height="15" fill="rgb(252,170,7)" fg:x="19302" fg:w="3"/><text x="87.4591%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (3 samples, 0.01%)</title><rect x="87.2272%" y="53" width="0.0136%" height="15" fill="rgb(231,118,14)" fg:x="19306" fg:w="3"/><text x="87.4772%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (3 samples, 0.01%)</title><rect x="87.2543%" y="53" width="0.0136%" height="15" fill="rgb(238,83,0)" fg:x="19312" fg:w="3"/><text x="87.5043%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (3 samples, 0.01%)</title><rect x="87.2995%" y="53" width="0.0136%" height="15" fill="rgb(221,39,39)" fg:x="19322" fg:w="3"/><text x="87.5495%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (12 samples, 0.05%)</title><rect x="87.3311%" y="53" width="0.0542%" height="15" fill="rgb(222,119,46)" fg:x="19329" fg:w="12"/><text x="87.5811%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (3 samples, 0.01%)</title><rect x="87.3854%" y="53" width="0.0136%" height="15" fill="rgb(222,165,49)" fg:x="19341" fg:w="3"/><text x="87.6354%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (3 samples, 0.01%)</title><rect x="87.4034%" y="53" width="0.0136%" height="15" fill="rgb(219,113,52)" fg:x="19345" fg:w="3"/><text x="87.6534%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (9 samples, 0.04%)</title><rect x="87.4305%" y="53" width="0.0407%" height="15" fill="rgb(214,7,15)" fg:x="19351" fg:w="9"/><text x="87.6805%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (4 samples, 0.02%)</title><rect x="87.4757%" y="53" width="0.0181%" height="15" fill="rgb(235,32,4)" fg:x="19361" fg:w="4"/><text x="87.7257%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (95 samples, 0.43%)</title><rect x="87.0781%" y="69" width="0.4292%" height="15" fill="rgb(238,90,54)" fg:x="19273" fg:w="95"/><text x="87.3281%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (9 samples, 0.04%)</title><rect x="87.5164%" y="69" width="0.0407%" height="15" fill="rgb(213,208,19)" fg:x="19370" fg:w="9"/><text x="87.7664%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.04%)</title><rect x="87.5164%" y="53" width="0.0407%" height="15" fill="rgb(233,156,4)" fg:x="19370" fg:w="9"/><text x="87.7664%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (26 samples, 0.12%)</title><rect x="87.6158%" y="53" width="0.1175%" height="15" fill="rgb(207,194,5)" fg:x="19392" fg:w="26"/><text x="87.8658%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (3 samples, 0.01%)</title><rect x="87.7378%" y="53" width="0.0136%" height="15" fill="rgb(206,111,30)" fg:x="19419" fg:w="3"/><text x="87.9878%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (10 samples, 0.05%)</title><rect x="87.7604%" y="53" width="0.0452%" height="15" fill="rgb(243,70,54)" fg:x="19424" fg:w="10"/><text x="88.0104%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (10 samples, 0.05%)</title><rect x="87.7604%" y="37" width="0.0452%" height="15" fill="rgb(242,28,8)" fg:x="19424" fg:w="10"/><text x="88.0104%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (4 samples, 0.02%)</title><rect x="87.8417%" y="53" width="0.0181%" height="15" fill="rgb(219,106,18)" fg:x="19442" fg:w="4"/><text x="88.0917%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (19 samples, 0.09%)</title><rect x="87.8688%" y="53" width="0.0858%" height="15" fill="rgb(244,222,10)" fg:x="19448" fg:w="19"/><text x="88.1188%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (3 samples, 0.01%)</title><rect x="87.9546%" y="53" width="0.0136%" height="15" fill="rgb(236,179,52)" fg:x="19467" fg:w="3"/><text x="88.2046%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (92 samples, 0.42%)</title><rect x="87.5570%" y="69" width="0.4157%" height="15" fill="rgb(213,23,39)" fg:x="19379" fg:w="92"/><text x="87.8070%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c884 (3 samples, 0.01%)</title><rect x="87.9727%" y="69" width="0.0136%" height="15" fill="rgb(238,48,10)" fg:x="19471" fg:w="3"/><text x="88.2227%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f9 (3 samples, 0.01%)</title><rect x="87.9863%" y="69" width="0.0136%" height="15" fill="rgb(251,196,23)" fg:x="19474" fg:w="3"/><text x="88.2363%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (272 samples, 1.23%)</title><rect x="86.7754%" y="85" width="1.2289%" height="15" fill="rgb(250,152,24)" fg:x="19206" fg:w="272"/><text x="87.0254%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c6c2 (3 samples, 0.01%)</title><rect x="88.0314%" y="85" width="0.0136%" height="15" fill="rgb(209,150,17)" fg:x="19484" fg:w="3"/><text x="88.2814%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (292 samples, 1.32%)</title><rect x="86.7438%" y="101" width="1.3193%" height="15" fill="rgb(234,202,34)" fg:x="19199" fg:w="292"/><text x="86.9938%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (401 samples, 1.81%)</title><rect x="86.2694%" y="133" width="1.8118%" height="15" fill="rgb(253,148,53)" fg:x="19094" fg:w="401"/><text x="86.5194%" y="143.50">d..</text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (381 samples, 1.72%)</title><rect x="86.3597%" y="117" width="1.7214%" height="15" fill="rgb(218,129,16)" fg:x="19114" fg:w="381"/><text x="86.6097%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f20470 (99 samples, 0.45%)</title><rect x="88.0811%" y="133" width="0.4473%" height="15" fill="rgb(216,85,19)" fg:x="19495" fg:w="99"/><text x="88.3311%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (180 samples, 0.81%)</title><rect x="88.5284%" y="133" width="0.8133%" height="15" fill="rgb(235,228,7)" fg:x="19594" fg:w="180"/><text x="88.7784%" y="143.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (3 samples, 0.01%)</title><rect x="89.3417%" y="133" width="0.0136%" height="15" fill="rgb(245,175,0)" fg:x="19774" fg:w="3"/><text x="89.5917%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (14 samples, 0.06%)</title><rect x="89.4095%" y="133" width="0.0633%" height="15" fill="rgb(208,168,36)" fg:x="19789" fg:w="14"/><text x="89.6595%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (4 samples, 0.02%)</title><rect x="89.4773%" y="133" width="0.0181%" height="15" fill="rgb(246,171,24)" fg:x="19804" fg:w="4"/><text x="89.7273%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (3 samples, 0.01%)</title><rect x="89.5179%" y="133" width="0.0136%" height="15" fill="rgb(215,142,24)" fg:x="19813" fg:w="3"/><text x="89.7679%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (5 samples, 0.02%)</title><rect x="89.5541%" y="133" width="0.0226%" height="15" fill="rgb(250,187,7)" fg:x="19821" fg:w="5"/><text x="89.8041%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (5 samples, 0.02%)</title><rect x="89.5947%" y="133" width="0.0226%" height="15" fill="rgb(228,66,33)" fg:x="19830" fg:w="5"/><text x="89.8447%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (9 samples, 0.04%)</title><rect x="89.6263%" y="133" width="0.0407%" height="15" fill="rgb(234,215,21)" fg:x="19837" fg:w="9"/><text x="89.8763%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (5 samples, 0.02%)</title><rect x="89.6760%" y="133" width="0.0226%" height="15" fill="rgb(222,191,20)" fg:x="19848" fg:w="5"/><text x="89.9260%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (3 samples, 0.01%)</title><rect x="89.7122%" y="133" width="0.0136%" height="15" fill="rgb(245,79,54)" fg:x="19856" fg:w="3"/><text x="89.9622%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (13 samples, 0.06%)</title><rect x="89.7348%" y="133" width="0.0587%" height="15" fill="rgb(240,10,37)" fg:x="19861" fg:w="13"/><text x="89.9848%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (3 samples, 0.01%)</title><rect x="89.7935%" y="133" width="0.0136%" height="15" fill="rgb(214,192,32)" fg:x="19874" fg:w="3"/><text x="90.0435%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (5 samples, 0.02%)</title><rect x="89.8071%" y="133" width="0.0226%" height="15" fill="rgb(209,36,54)" fg:x="19877" fg:w="5"/><text x="90.0571%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (6 samples, 0.03%)</title><rect x="89.8297%" y="133" width="0.0271%" height="15" fill="rgb(220,10,11)" fg:x="19882" fg:w="6"/><text x="90.0797%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,910 samples, 13.15%)</title><rect x="76.7361%" y="149" width="13.1478%" height="15" fill="rgb(221,106,17)" fg:x="16984" fg:w="2910"/><text x="76.9861%" y="159.50">dateo_fun_remover`&lt;a..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (6 samples, 0.03%)</title><rect x="89.8568%" y="133" width="0.0271%" height="15" fill="rgb(251,142,44)" fg:x="19888" fg:w="6"/><text x="90.1068%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (2,925 samples, 13.22%)</title><rect x="76.7090%" y="165" width="13.2156%" height="15" fill="rgb(238,13,15)" fg:x="16978" fg:w="2925"/><text x="76.9590%" y="175.50">dateo_fun_remover`da..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (13 samples, 0.06%)</title><rect x="89.9562%" y="165" width="0.0587%" height="15" fill="rgb(208,107,27)" fg:x="19910" fg:w="13"/><text x="90.2062%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (7 samples, 0.03%)</title><rect x="90.0149%" y="165" width="0.0316%" height="15" fill="rgb(205,136,37)" fg:x="19923" fg:w="7"/><text x="90.2649%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.03%)</title><rect x="90.0149%" y="149" width="0.0316%" height="15" fill="rgb(250,205,27)" fg:x="19923" fg:w="7"/><text x="90.2649%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (8 samples, 0.04%)</title><rect x="90.0736%" y="165" width="0.0361%" height="15" fill="rgb(210,80,43)" fg:x="19936" fg:w="8"/><text x="90.3236%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (4 samples, 0.02%)</title><rect x="90.1188%" y="165" width="0.0181%" height="15" fill="rgb(247,160,36)" fg:x="19946" fg:w="4"/><text x="90.3688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (3 samples, 0.01%)</title><rect x="90.1459%" y="165" width="0.0136%" height="15" fill="rgb(234,13,49)" fg:x="19952" fg:w="3"/><text x="90.3959%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (3,723 samples, 16.82%)</title><rect x="73.3520%" y="181" width="16.8210%" height="15" fill="rgb(234,122,0)" fg:x="16235" fg:w="3723"/><text x="73.6020%" y="191.50">dateo_fun_remover`dateo_fu..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (4 samples, 0.02%)</title><rect x="90.1730%" y="181" width="0.0181%" height="15" fill="rgb(207,146,38)" fg:x="19958" fg:w="4"/><text x="90.4230%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (7 samples, 0.03%)</title><rect x="90.1956%" y="181" width="0.0316%" height="15" fill="rgb(207,177,25)" fg:x="19963" fg:w="7"/><text x="90.4456%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (15 samples, 0.07%)</title><rect x="90.2273%" y="181" width="0.0678%" height="15" fill="rgb(211,178,42)" fg:x="19970" fg:w="15"/><text x="90.4773%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (15 samples, 0.07%)</title><rect x="90.2996%" y="181" width="0.0678%" height="15" fill="rgb(230,69,54)" fg:x="19986" fg:w="15"/><text x="90.5496%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (13 samples, 0.06%)</title><rect x="90.3718%" y="181" width="0.0587%" height="15" fill="rgb(214,135,41)" fg:x="20002" fg:w="13"/><text x="90.6218%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (12 samples, 0.05%)</title><rect x="90.4396%" y="181" width="0.0542%" height="15" fill="rgb(237,67,25)" fg:x="20017" fg:w="12"/><text x="90.6896%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (17 samples, 0.08%)</title><rect x="90.4938%" y="181" width="0.0768%" height="15" fill="rgb(222,189,50)" fg:x="20029" fg:w="17"/><text x="90.7438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e6c (4 samples, 0.02%)</title><rect x="90.5752%" y="181" width="0.0181%" height="15" fill="rgb(245,148,34)" fg:x="20047" fg:w="4"/><text x="90.8252%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (21 samples, 0.09%)</title><rect x="90.5932%" y="181" width="0.0949%" height="15" fill="rgb(222,29,6)" fg:x="20051" fg:w="21"/><text x="90.8432%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e72 (3 samples, 0.01%)</title><rect x="90.6881%" y="181" width="0.0136%" height="15" fill="rgb(221,189,43)" fg:x="20072" fg:w="3"/><text x="90.9381%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (87 samples, 0.39%)</title><rect x="90.7243%" y="181" width="0.3931%" height="15" fill="rgb(207,36,27)" fg:x="20080" fg:w="87"/><text x="90.9743%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (87 samples, 0.39%)</title><rect x="90.7243%" y="165" width="0.3931%" height="15" fill="rgb(217,90,24)" fg:x="20080" fg:w="87"/><text x="90.9743%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (87 samples, 0.39%)</title><rect x="90.7243%" y="149" width="0.3931%" height="15" fill="rgb(224,66,35)" fg:x="20080" fg:w="87"/><text x="90.9743%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (87 samples, 0.39%)</title><rect x="90.7243%" y="133" width="0.3931%" height="15" fill="rgb(221,13,50)" fg:x="20080" fg:w="87"/><text x="90.9743%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (9 samples, 0.04%)</title><rect x="91.1173%" y="181" width="0.0407%" height="15" fill="rgb(236,68,49)" fg:x="20167" fg:w="9"/><text x="91.3673%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (6 samples, 0.03%)</title><rect x="91.1625%" y="181" width="0.0271%" height="15" fill="rgb(229,146,28)" fg:x="20177" fg:w="6"/><text x="91.4125%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (5 samples, 0.02%)</title><rect x="91.1941%" y="181" width="0.0226%" height="15" fill="rgb(225,31,38)" fg:x="20184" fg:w="5"/><text x="91.4441%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (4 samples, 0.02%)</title><rect x="91.2213%" y="181" width="0.0181%" height="15" fill="rgb(250,208,3)" fg:x="20190" fg:w="4"/><text x="91.4713%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (6 samples, 0.03%)</title><rect x="91.2393%" y="181" width="0.0271%" height="15" fill="rgb(246,54,23)" fg:x="20194" fg:w="6"/><text x="91.4893%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (7 samples, 0.03%)</title><rect x="91.2800%" y="181" width="0.0316%" height="15" fill="rgb(243,76,11)" fg:x="20203" fg:w="7"/><text x="91.5300%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (5 samples, 0.02%)</title><rect x="91.3116%" y="181" width="0.0226%" height="15" fill="rgb(245,21,50)" fg:x="20210" fg:w="5"/><text x="91.5616%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (6 samples, 0.03%)</title><rect x="91.3342%" y="181" width="0.0271%" height="15" fill="rgb(228,9,43)" fg:x="20215" fg:w="6"/><text x="91.5842%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (5 samples, 0.02%)</title><rect x="91.3658%" y="181" width="0.0226%" height="15" fill="rgb(208,100,47)" fg:x="20222" fg:w="5"/><text x="91.6158%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (5 samples, 0.02%)</title><rect x="91.3884%" y="181" width="0.0226%" height="15" fill="rgb(232,26,8)" fg:x="20227" fg:w="5"/><text x="91.6384%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (3 samples, 0.01%)</title><rect x="91.4155%" y="181" width="0.0136%" height="15" fill="rgb(216,166,38)" fg:x="20233" fg:w="3"/><text x="91.6655%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (3 samples, 0.01%)</title><rect x="91.4291%" y="181" width="0.0136%" height="15" fill="rgb(251,202,51)" fg:x="20236" fg:w="3"/><text x="91.6791%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22382d (7 samples, 0.03%)</title><rect x="91.4426%" y="181" width="0.0316%" height="15" fill="rgb(254,216,34)" fg:x="20239" fg:w="7"/><text x="91.6926%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (5 samples, 0.02%)</title><rect x="91.4788%" y="181" width="0.0226%" height="15" fill="rgb(251,32,27)" fg:x="20247" fg:w="5"/><text x="91.7288%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (3 samples, 0.01%)</title><rect x="91.5059%" y="181" width="0.0136%" height="15" fill="rgb(208,127,28)" fg:x="20253" fg:w="3"/><text x="91.7559%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (7 samples, 0.03%)</title><rect x="91.5511%" y="181" width="0.0316%" height="15" fill="rgb(224,137,22)" fg:x="20263" fg:w="7"/><text x="91.8011%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22387d (4 samples, 0.02%)</title><rect x="91.5827%" y="181" width="0.0181%" height="15" fill="rgb(254,70,32)" fg:x="20270" fg:w="4"/><text x="91.8327%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (5 samples, 0.02%)</title><rect x="91.6098%" y="181" width="0.0226%" height="15" fill="rgb(229,75,37)" fg:x="20276" fg:w="5"/><text x="91.8598%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (187 samples, 0.84%)</title><rect x="91.6369%" y="181" width="0.8449%" height="15" fill="rgb(252,64,23)" fg:x="20282" fg:w="187"/><text x="91.8869%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (3 samples, 0.01%)</title><rect x="92.4863%" y="181" width="0.0136%" height="15" fill="rgb(232,162,48)" fg:x="20470" fg:w="3"/><text x="92.7363%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (7 samples, 0.03%)</title><rect x="92.4999%" y="181" width="0.0316%" height="15" fill="rgb(246,160,12)" fg:x="20473" fg:w="7"/><text x="92.7499%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (5 samples, 0.02%)</title><rect x="92.5315%" y="181" width="0.0226%" height="15" fill="rgb(247,166,0)" fg:x="20480" fg:w="5"/><text x="92.7815%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (4 samples, 0.02%)</title><rect x="92.5631%" y="181" width="0.0181%" height="15" fill="rgb(249,219,21)" fg:x="20487" fg:w="4"/><text x="92.8131%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (50 samples, 0.23%)</title><rect x="92.5857%" y="181" width="0.2259%" height="15" fill="rgb(205,209,3)" fg:x="20492" fg:w="50"/><text x="92.8357%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (46 samples, 0.21%)</title><rect x="92.6038%" y="165" width="0.2078%" height="15" fill="rgb(243,44,1)" fg:x="20496" fg:w="46"/><text x="92.8538%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (5 samples, 0.02%)</title><rect x="92.8207%" y="181" width="0.0226%" height="15" fill="rgb(206,159,16)" fg:x="20544" fg:w="5"/><text x="93.0707%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (11 samples, 0.05%)</title><rect x="92.8523%" y="181" width="0.0497%" height="15" fill="rgb(244,77,30)" fg:x="20551" fg:w="11"/><text x="93.1023%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (3 samples, 0.01%)</title><rect x="92.9246%" y="181" width="0.0136%" height="15" fill="rgb(218,69,12)" fg:x="20567" fg:w="3"/><text x="93.1746%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223939 (5 samples, 0.02%)</title><rect x="92.9381%" y="181" width="0.0226%" height="15" fill="rgb(212,87,7)" fg:x="20570" fg:w="5"/><text x="93.1881%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395d (3 samples, 0.01%)</title><rect x="92.9833%" y="181" width="0.0136%" height="15" fill="rgb(245,114,25)" fg:x="20580" fg:w="3"/><text x="93.2333%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (52 samples, 0.23%)</title><rect x="93.0421%" y="181" width="0.2349%" height="15" fill="rgb(210,61,42)" fg:x="20593" fg:w="52"/><text x="93.2921%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (33 samples, 0.15%)</title><rect x="93.2951%" y="181" width="0.1491%" height="15" fill="rgb(211,52,33)" fg:x="20649" fg:w="33"/><text x="93.5451%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (5 samples, 0.02%)</title><rect x="93.4487%" y="181" width="0.0226%" height="15" fill="rgb(234,58,33)" fg:x="20683" fg:w="5"/><text x="93.6987%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (56 samples, 0.25%)</title><rect x="93.4758%" y="181" width="0.2530%" height="15" fill="rgb(220,115,36)" fg:x="20689" fg:w="56"/><text x="93.7258%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239c0 (4 samples, 0.02%)</title><rect x="93.7288%" y="181" width="0.0181%" height="15" fill="rgb(243,153,54)" fg:x="20745" fg:w="4"/><text x="93.9788%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (4 samples, 0.02%)</title><rect x="93.7469%" y="181" width="0.0181%" height="15" fill="rgb(251,47,18)" fg:x="20749" fg:w="4"/><text x="93.9969%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (7 samples, 0.03%)</title><rect x="93.7650%" y="181" width="0.0316%" height="15" fill="rgb(242,102,42)" fg:x="20753" fg:w="7"/><text x="94.0150%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (12 samples, 0.05%)</title><rect x="93.8011%" y="181" width="0.0542%" height="15" fill="rgb(234,31,38)" fg:x="20761" fg:w="12"/><text x="94.0511%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (13 samples, 0.06%)</title><rect x="93.8553%" y="181" width="0.0587%" height="15" fill="rgb(221,117,51)" fg:x="20773" fg:w="13"/><text x="94.1053%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (14 samples, 0.06%)</title><rect x="93.9141%" y="181" width="0.0633%" height="15" fill="rgb(212,20,18)" fg:x="20786" fg:w="14"/><text x="94.1641%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (9 samples, 0.04%)</title><rect x="93.9773%" y="181" width="0.0407%" height="15" fill="rgb(245,133,36)" fg:x="20800" fg:w="9"/><text x="94.2273%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (4 samples, 0.02%)</title><rect x="94.0180%" y="181" width="0.0181%" height="15" fill="rgb(212,6,19)" fg:x="20809" fg:w="4"/><text x="94.2680%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (11 samples, 0.05%)</title><rect x="94.0451%" y="181" width="0.0497%" height="15" fill="rgb(218,1,36)" fg:x="20815" fg:w="11"/><text x="94.2951%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (4 samples, 0.02%)</title><rect x="94.0948%" y="181" width="0.0181%" height="15" fill="rgb(246,84,54)" fg:x="20826" fg:w="4"/><text x="94.3448%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (3 samples, 0.01%)</title><rect x="94.1129%" y="181" width="0.0136%" height="15" fill="rgb(242,110,6)" fg:x="20830" fg:w="3"/><text x="94.3629%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (10 samples, 0.05%)</title><rect x="94.1309%" y="181" width="0.0452%" height="15" fill="rgb(214,47,5)" fg:x="20834" fg:w="10"/><text x="94.3809%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d2c (3 samples, 0.01%)</title><rect x="94.1761%" y="181" width="0.0136%" height="15" fill="rgb(218,159,25)" fg:x="20844" fg:w="3"/><text x="94.4261%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (8 samples, 0.04%)</title><rect x="94.1897%" y="181" width="0.0361%" height="15" fill="rgb(215,211,28)" fg:x="20847" fg:w="8"/><text x="94.4397%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (7 samples, 0.03%)</title><rect x="94.2258%" y="181" width="0.0316%" height="15" fill="rgb(238,59,32)" fg:x="20855" fg:w="7"/><text x="94.4758%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (16 samples, 0.07%)</title><rect x="94.2574%" y="181" width="0.0723%" height="15" fill="rgb(226,82,3)" fg:x="20862" fg:w="16"/><text x="94.5074%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.06%)</title><rect x="94.3297%" y="181" width="0.0587%" height="15" fill="rgb(240,164,32)" fg:x="20878" fg:w="13"/><text x="94.5797%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (19,042 samples, 86.03%)</title><rect x="13.3782%" y="197" width="86.0344%" height="15" fill="rgb(232,46,7)" fg:x="2961" fg:w="19042"/><text x="13.6282%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,112 samples, 5.02%)</title><rect x="94.3885%" y="181" width="5.0242%" height="15" fill="rgb(229,129,53)" fg:x="20891" fg:w="1112"/><text x="94.6385%" y="191.50">libsys..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (7 samples, 0.03%)</title><rect x="99.4126%" y="197" width="0.0316%" height="15" fill="rgb(234,188,29)" fg:x="22003" fg:w="7"/><text x="99.6626%" y="207.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (19 samples, 0.09%)</title><rect x="99.4443%" y="197" width="0.0858%" height="15" fill="rgb(246,141,4)" fg:x="22010" fg:w="19"/><text x="99.6943%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (15 samples, 0.07%)</title><rect x="99.5301%" y="197" width="0.0678%" height="15" fill="rgb(229,23,39)" fg:x="22029" fg:w="15"/><text x="99.7801%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (11 samples, 0.05%)</title><rect x="99.5979%" y="197" width="0.0497%" height="15" fill="rgb(206,12,3)" fg:x="22044" fg:w="11"/><text x="99.8479%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (10 samples, 0.05%)</title><rect x="99.6521%" y="197" width="0.0452%" height="15" fill="rgb(252,226,20)" fg:x="22056" fg:w="10"/><text x="99.9021%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (7 samples, 0.03%)</title><rect x="99.7018%" y="197" width="0.0316%" height="15" fill="rgb(216,123,35)" fg:x="22067" fg:w="7"/><text x="99.9518%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (6 samples, 0.03%)</title><rect x="99.7379%" y="197" width="0.0271%" height="15" fill="rgb(212,68,40)" fg:x="22075" fg:w="6"/><text x="99.9879%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (13 samples, 0.06%)</title><rect x="99.7786%" y="197" width="0.0587%" height="15" fill="rgb(254,125,32)" fg:x="22084" fg:w="13"/><text x="100.0286%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (5 samples, 0.02%)</title><rect x="99.8780%" y="197" width="0.0226%" height="15" fill="rgb(253,97,22)" fg:x="22106" fg:w="5"/><text x="100.1280%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (5 samples, 0.02%)</title><rect x="99.9142%" y="197" width="0.0226%" height="15" fill="rgb(241,101,14)" fg:x="22114" fg:w="5"/><text x="100.1642%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (4 samples, 0.02%)</title><rect x="99.9548%" y="197" width="0.0181%" height="15" fill="rgb(238,103,29)" fg:x="22123" fg:w="4"/><text x="100.2048%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (3 samples, 0.01%)</title><rect x="99.9729%" y="197" width="0.0136%" height="15" fill="rgb(233,195,47)" fg:x="22127" fg:w="3"/><text x="100.2229%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (22,131 samples, 99.99%)</title><rect x="0.0045%" y="213" width="99.9910%" height="15" fill="rgb(246,218,30)" fg:x="1" fg:w="22131"/><text x="0.2545%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>all (22,133 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(219,145,47)" fg:x="0" fg:w="22133"/><text x="0.2500%" y="351.50"></text></g><g><title>dyld`start (22,133 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(243,12,26)" fg:x="0" fg:w="22133"/><text x="0.2500%" y="335.50">dyld`start</text></g><g><title>dateo_fun_remover`main (22,133 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(214,87,16)" fg:x="0" fg:w="22133"/><text x="0.2500%" y="319.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (22,133 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(208,99,42)" fg:x="0" fg:w="22133"/><text x="0.2500%" y="303.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (22,132 samples, 100.00%)</title><rect x="0.0045%" y="277" width="99.9955%" height="15" fill="rgb(253,99,2)" fg:x="1" fg:w="22132"/><text x="0.2545%" y="287.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (22,132 samples, 100.00%)</title><rect x="0.0045%" y="261" width="99.9955%" height="15" fill="rgb(220,168,23)" fg:x="1" fg:w="22132"/><text x="0.2545%" y="271.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (22,132 samples, 100.00%)</title><rect x="0.0045%" y="245" width="99.9955%" height="15" fill="rgb(242,38,24)" fg:x="1" fg:w="22132"/><text x="0.2545%" y="255.50">dateo_fun_remover`dateo_fun_remover::main</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (22,132 samples, 100.00%)</title><rect x="0.0045%" y="229" width="99.9955%" height="15" fill="rgb(225,182,9)" fg:x="1" fg:w="22132"/><text x="0.2545%" y="239.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g></svg></svg>