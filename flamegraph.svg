<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="17453"><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="2.7159%" y="133" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="474" fg:w="2"/><text x="2.9659%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="2.7331%" y="133" width="0.0286%" height="15" fill="rgb(217,0,24)" fg:x="477" fg:w="5"/><text x="2.9831%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="2.7388%" y="117" width="0.0229%" height="15" fill="rgb(221,193,54)" fg:x="478" fg:w="4"/><text x="2.9888%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.02%)</title><rect x="2.7388%" y="101" width="0.0229%" height="15" fill="rgb(248,212,6)" fg:x="478" fg:w="4"/><text x="2.9888%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.02%)</title><rect x="2.7388%" y="85" width="0.0229%" height="15" fill="rgb(208,68,35)" fg:x="478" fg:w="4"/><text x="2.9888%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.02%)</title><rect x="2.7445%" y="69" width="0.0172%" height="15" fill="rgb(232,128,0)" fg:x="479" fg:w="3"/><text x="2.9945%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.02%)</title><rect x="2.7445%" y="53" width="0.0172%" height="15" fill="rgb(207,160,47)" fg:x="479" fg:w="3"/><text x="2.9945%" y="63.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;itertools::adaptors::Product&lt;alloc::vec::into_iter::IntoIter&lt;f64&gt;,alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt;,dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs::{{closure}}&gt;&gt; (2 samples, 0.01%)</title><rect x="2.7674%" y="133" width="0.0115%" height="15" fill="rgb(228,23,34)" fg:x="483" fg:w="2"/><text x="3.0174%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="2.7674%" y="117" width="0.0115%" height="15" fill="rgb(218,30,26)" fg:x="483" fg:w="2"/><text x="3.0174%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (2 samples, 0.01%)</title><rect x="2.7846%" y="133" width="0.0115%" height="15" fill="rgb(220,122,19)" fg:x="486" fg:w="2"/><text x="3.0346%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.02%)</title><rect x="2.7961%" y="133" width="0.0172%" height="15" fill="rgb(250,228,42)" fg:x="488" fg:w="3"/><text x="3.0461%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.13%)</title><rect x="2.7044%" y="149" width="0.1261%" height="15" fill="rgb(240,193,28)" fg:x="472" fg:w="22"/><text x="2.9544%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="2.8190%" y="133" width="0.0115%" height="15" fill="rgb(216,20,37)" fg:x="492" fg:w="2"/><text x="3.0690%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="2.8935%" y="101" width="0.0344%" height="15" fill="rgb(206,188,39)" fg:x="505" fg:w="6"/><text x="3.1435%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.03%)</title><rect x="2.8992%" y="85" width="0.0286%" height="15" fill="rgb(217,207,13)" fg:x="506" fg:w="5"/><text x="3.1492%" y="95.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="2.9279%" y="101" width="0.0115%" height="15" fill="rgb(231,73,38)" fg:x="511" fg:w="2"/><text x="3.1779%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="2.9451%" y="101" width="0.0172%" height="15" fill="rgb(225,20,46)" fg:x="514" fg:w="3"/><text x="3.1951%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.07%)</title><rect x="2.8935%" y="117" width="0.0745%" height="15" fill="rgb(210,31,41)" fg:x="505" fg:w="13"/><text x="3.1435%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="2.9680%" y="117" width="0.0172%" height="15" fill="rgb(221,200,47)" fg:x="518" fg:w="3"/><text x="3.2180%" y="127.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="2.9737%" y="101" width="0.0115%" height="15" fill="rgb(226,26,5)" fg:x="519" fg:w="2"/><text x="3.2237%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="2.9966%" y="53" width="0.0115%" height="15" fill="rgb(249,33,26)" fg:x="523" fg:w="2"/><text x="3.2466%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="3.0081%" y="37" width="0.0115%" height="15" fill="rgb(235,183,28)" fg:x="525" fg:w="2"/><text x="3.2581%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.02%)</title><rect x="3.0081%" y="53" width="0.0229%" height="15" fill="rgb(221,5,38)" fg:x="525" fg:w="4"/><text x="3.2581%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.0195%" y="37" width="0.0115%" height="15" fill="rgb(247,18,42)" fg:x="527" fg:w="2"/><text x="3.2695%" y="47.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.05%)</title><rect x="2.9852%" y="117" width="0.0516%" height="15" fill="rgb(241,131,45)" fg:x="521" fg:w="9"/><text x="3.2352%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (9 samples, 0.05%)</title><rect x="2.9852%" y="101" width="0.0516%" height="15" fill="rgb(249,31,29)" fg:x="521" fg:w="9"/><text x="3.2352%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (9 samples, 0.05%)</title><rect x="2.9852%" y="85" width="0.0516%" height="15" fill="rgb(225,111,53)" fg:x="521" fg:w="9"/><text x="3.2352%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.04%)</title><rect x="2.9966%" y="69" width="0.0401%" height="15" fill="rgb(238,160,17)" fg:x="523" fg:w="7"/><text x="3.2466%" y="79.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;itertools::adaptors::Product&lt;alloc::vec::into_iter::IntoIter&lt;f64&gt;,alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt;,dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs::{{closure}}&gt;&gt; (2 samples, 0.01%)</title><rect x="3.0367%" y="117" width="0.0115%" height="15" fill="rgb(214,148,48)" fg:x="530" fg:w="2"/><text x="3.2867%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="3.0367%" y="101" width="0.0115%" height="15" fill="rgb(232,36,49)" fg:x="530" fg:w="2"/><text x="3.2867%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.03%)</title><rect x="3.0482%" y="117" width="0.0286%" height="15" fill="rgb(209,103,24)" fg:x="532" fg:w="5"/><text x="3.2982%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="3.0768%" y="117" width="0.0115%" height="15" fill="rgb(229,88,8)" fg:x="537" fg:w="2"/><text x="3.3268%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.0883%" y="117" width="0.0115%" height="15" fill="rgb(213,181,19)" fg:x="539" fg:w="2"/><text x="3.3383%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 0.26%)</title><rect x="2.8476%" y="133" width="0.2578%" height="15" fill="rgb(254,191,54)" fg:x="497" fg:w="45"/><text x="3.0976%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.1284%" y="101" width="0.0115%" height="15" fill="rgb(241,83,37)" fg:x="546" fg:w="2"/><text x="3.3784%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="3.1685%" y="85" width="0.0172%" height="15" fill="rgb(233,36,39)" fg:x="553" fg:w="3"/><text x="3.4185%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="3.1685%" y="69" width="0.0172%" height="15" fill="rgb(226,3,54)" fg:x="553" fg:w="3"/><text x="3.4185%" y="79.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="3.1857%" y="85" width="0.0115%" height="15" fill="rgb(245,192,40)" fg:x="556" fg:w="2"/><text x="3.4357%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.04%)</title><rect x="3.1972%" y="85" width="0.0401%" height="15" fill="rgb(238,167,29)" fg:x="558" fg:w="7"/><text x="3.4472%" y="95.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.11%)</title><rect x="3.1399%" y="101" width="0.1146%" height="15" fill="rgb(232,182,51)" fg:x="548" fg:w="20"/><text x="3.3899%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="3.2430%" y="85" width="0.0115%" height="15" fill="rgb(231,60,39)" fg:x="566" fg:w="2"/><text x="3.4930%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="3.2430%" y="69" width="0.0115%" height="15" fill="rgb(208,69,12)" fg:x="566" fg:w="2"/><text x="3.4930%" y="79.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.16%)</title><rect x="3.1112%" y="117" width="0.1604%" height="15" fill="rgb(235,93,37)" fg:x="543" fg:w="28"/><text x="3.3612%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="3.2602%" y="101" width="0.0115%" height="15" fill="rgb(213,116,39)" fg:x="569" fg:w="2"/><text x="3.5102%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="3.2602%" y="85" width="0.0115%" height="15" fill="rgb(222,207,29)" fg:x="569" fg:w="2"/><text x="3.5102%" y="95.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (31 samples, 0.18%)</title><rect x="3.1112%" y="133" width="0.1776%" height="15" fill="rgb(206,96,30)" fg:x="543" fg:w="31"/><text x="3.3612%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.2774%" y="117" width="0.0115%" height="15" fill="rgb(218,138,4)" fg:x="572" fg:w="2"/><text x="3.5274%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (84 samples, 0.48%)</title><rect x="2.8362%" y="149" width="0.4813%" height="15" fill="rgb(250,191,14)" fg:x="495" fg:w="84"/><text x="3.0862%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="3.3003%" y="133" width="0.0172%" height="15" fill="rgb(239,60,40)" fg:x="576" fg:w="3"/><text x="3.5503%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (110 samples, 0.63%)</title><rect x="2.7044%" y="165" width="0.6303%" height="15" fill="rgb(206,27,48)" fg:x="472" fg:w="110"/><text x="2.9544%" y="175.50"></text></g><g><title>dateo_fun_remover`itertools::adaptors::cartesian_product (2 samples, 0.01%)</title><rect x="3.3232%" y="149" width="0.0115%" height="15" fill="rgb(225,35,8)" fg:x="580" fg:w="2"/><text x="3.5732%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.01%)</title><rect x="3.3404%" y="149" width="0.0115%" height="15" fill="rgb(250,213,24)" fg:x="583" fg:w="2"/><text x="3.5904%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.02%)</title><rect x="3.3576%" y="133" width="0.0229%" height="15" fill="rgb(247,123,22)" fg:x="586" fg:w="4"/><text x="3.6076%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.04%)</title><rect x="3.3519%" y="149" width="0.0401%" height="15" fill="rgb(231,138,38)" fg:x="585" fg:w="7"/><text x="3.6019%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.3805%" y="133" width="0.0115%" height="15" fill="rgb(231,145,46)" fg:x="590" fg:w="2"/><text x="3.6305%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;dateo_fun_remover::finder::atom::Atom as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="3.3920%" y="133" width="0.0115%" height="15" fill="rgb(251,118,11)" fg:x="592" fg:w="2"/><text x="3.6420%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.3920%" y="117" width="0.0115%" height="15" fill="rgb(217,147,25)" fg:x="592" fg:w="2"/><text x="3.6420%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::fill_hole (2 samples, 0.01%)</title><rect x="3.4034%" y="133" width="0.0115%" height="15" fill="rgb(247,81,37)" fg:x="594" fg:w="2"/><text x="3.6534%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::fill_hole (5 samples, 0.03%)</title><rect x="3.3920%" y="149" width="0.0286%" height="15" fill="rgb(209,12,38)" fg:x="592" fg:w="5"/><text x="3.6420%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (2 samples, 0.01%)</title><rect x="3.4263%" y="133" width="0.0115%" height="15" fill="rgb(227,1,9)" fg:x="598" fg:w="2"/><text x="3.6763%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.4263%" y="117" width="0.0115%" height="15" fill="rgb(248,47,43)" fg:x="598" fg:w="2"/><text x="3.6763%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Memo::get (4 samples, 0.02%)</title><rect x="3.4378%" y="133" width="0.0229%" height="15" fill="rgb(221,10,30)" fg:x="600" fg:w="4"/><text x="3.6878%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (2 samples, 0.01%)</title><rect x="3.4493%" y="117" width="0.0115%" height="15" fill="rgb(210,229,1)" fg:x="602" fg:w="2"/><text x="3.6993%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (8 samples, 0.05%)</title><rect x="3.4206%" y="149" width="0.0458%" height="15" fill="rgb(222,148,37)" fg:x="597" fg:w="8"/><text x="3.6706%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (3 samples, 0.02%)</title><rect x="3.4894%" y="133" width="0.0172%" height="15" fill="rgb(234,67,33)" fg:x="609" fg:w="3"/><text x="3.7394%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="3.4894%" y="117" width="0.0172%" height="15" fill="rgb(247,98,35)" fg:x="609" fg:w="3"/><text x="3.7394%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::join_vals (31 samples, 0.18%)</title><rect x="3.3347%" y="165" width="0.1776%" height="15" fill="rgb(247,138,52)" fg:x="582" fg:w="31"/><text x="3.5847%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (7 samples, 0.04%)</title><rect x="3.4722%" y="149" width="0.0401%" height="15" fill="rgb(213,79,30)" fg:x="606" fg:w="7"/><text x="3.7222%" y="159.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (144 samples, 0.83%)</title><rect x="2.6929%" y="181" width="0.8251%" height="15" fill="rgb(246,177,23)" fg:x="470" fg:w="144"/><text x="2.9429%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (661 samples, 3.79%)</title><rect x="0.0172%" y="197" width="3.7873%" height="15" fill="rgb(230,62,27)" fg:x="3" fg:w="661"/><text x="0.2672%" y="207.50">date..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (50 samples, 0.29%)</title><rect x="3.5180%" y="181" width="0.2865%" height="15" fill="rgb(216,154,8)" fg:x="614" fg:w="50"/><text x="3.7680%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (663 samples, 3.80%)</title><rect x="0.0172%" y="213" width="3.7988%" height="15" fill="rgb(244,35,45)" fg:x="3" fg:w="663"/><text x="0.2672%" y="223.50">date..</text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="3.8045%" y="197" width="0.0115%" height="15" fill="rgb(251,115,12)" fg:x="664" fg:w="2"/><text x="4.0545%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="3.8045%" y="181" width="0.0115%" height="15" fill="rgb(240,54,50)" fg:x="664" fg:w="2"/><text x="4.0545%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="3.8045%" y="165" width="0.0115%" height="15" fill="rgb(233,84,52)" fg:x="664" fg:w="2"/><text x="4.0545%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="3.8045%" y="149" width="0.0115%" height="15" fill="rgb(207,117,47)" fg:x="664" fg:w="2"/><text x="4.0545%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="3.8045%" y="133" width="0.0115%" height="15" fill="rgb(249,43,39)" fg:x="664" fg:w="2"/><text x="4.0545%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.8160%" y="213" width="0.0115%" height="15" fill="rgb(209,38,44)" fg:x="666" fg:w="2"/><text x="4.0660%" y="223.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (8 samples, 0.05%)</title><rect x="3.8274%" y="213" width="0.0458%" height="15" fill="rgb(236,212,23)" fg:x="668" fg:w="8"/><text x="4.0774%" y="223.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (2 samples, 0.01%)</title><rect x="3.8733%" y="213" width="0.0115%" height="15" fill="rgb(242,79,21)" fg:x="676" fg:w="2"/><text x="4.1233%" y="223.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,346 samples, 7.71%)</title><rect x="55.0851%" y="165" width="7.7121%" height="15" fill="rgb(211,96,35)" fg:x="9614" fg:w="1346"/><text x="55.3351%" y="175.50">dateo_fun_r..</text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9,163 samples, 52.50%)</title><rect x="10.6285%" y="181" width="52.5010%" height="15" fill="rgb(253,215,40)" fg:x="1855" fg:w="9163"/><text x="10.8785%" y="191.50">dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (58 samples, 0.33%)</title><rect x="62.7972%" y="165" width="0.3323%" height="15" fill="rgb(211,81,21)" fg:x="10960" fg:w="58"/><text x="63.0472%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.05%)</title><rect x="63.1295%" y="181" width="0.0458%" height="15" fill="rgb(208,190,38)" fg:x="11018" fg:w="8"/><text x="63.3795%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (40 samples, 0.23%)</title><rect x="63.1754%" y="181" width="0.2292%" height="15" fill="rgb(235,213,38)" fg:x="11026" fg:w="40"/><text x="63.4254%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (39 samples, 0.22%)</title><rect x="63.1811%" y="165" width="0.2235%" height="15" fill="rgb(237,122,38)" fg:x="11027" fg:w="39"/><text x="63.4311%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10,398 samples, 59.58%)</title><rect x="3.8847%" y="197" width="59.5772%" height="15" fill="rgb(244,218,35)" fg:x="678" fg:w="10398"/><text x="4.1347%" y="207.50">dateo_fun_remover`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Fro..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (10 samples, 0.06%)</title><rect x="63.4046%" y="181" width="0.0573%" height="15" fill="rgb(240,68,47)" fg:x="11066" fg:w="10"/><text x="63.6546%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.05%)</title><rect x="63.4676%" y="197" width="0.0516%" height="15" fill="rgb(210,16,53)" fg:x="11077" fg:w="9"/><text x="63.7176%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (18 samples, 0.10%)</title><rect x="63.5192%" y="149" width="0.1031%" height="15" fill="rgb(235,124,12)" fg:x="11086" fg:w="18"/><text x="63.7692%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (18 samples, 0.10%)</title><rect x="63.5192%" y="133" width="0.1031%" height="15" fill="rgb(224,169,11)" fg:x="11086" fg:w="18"/><text x="63.7692%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`write (18 samples, 0.10%)</title><rect x="63.5192%" y="117" width="0.1031%" height="15" fill="rgb(250,166,2)" fg:x="11086" fg:w="18"/><text x="63.7692%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (19 samples, 0.11%)</title><rect x="63.5192%" y="181" width="0.1089%" height="15" fill="rgb(242,216,29)" fg:x="11086" fg:w="19"/><text x="63.7692%" y="191.50"></text></g><g><title>dateo_fun_remover`core::fmt::write (19 samples, 0.11%)</title><rect x="63.5192%" y="165" width="0.1089%" height="15" fill="rgb(230,116,27)" fg:x="11086" fg:w="19"/><text x="63.7692%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (10,429 samples, 59.75%)</title><rect x="3.8847%" y="213" width="59.7548%" height="15" fill="rgb(228,99,48)" fg:x="678" fg:w="10429"/><text x="4.1347%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects</text></g><g><title>dateo_fun_remover`std::io::stdio::_print (21 samples, 0.12%)</title><rect x="63.5192%" y="197" width="0.1203%" height="15" fill="rgb(253,11,6)" fg:x="11086" fg:w="21"/><text x="63.7692%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="63.6567%" y="117" width="0.0115%" height="15" fill="rgb(247,143,39)" fg:x="11110" fg:w="2"/><text x="63.9067%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="63.6567%" y="101" width="0.0115%" height="15" fill="rgb(236,97,10)" fg:x="11110" fg:w="2"/><text x="63.9067%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="63.6567%" y="85" width="0.0115%" height="15" fill="rgb(233,208,19)" fg:x="11110" fg:w="2"/><text x="63.9067%" y="95.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="63.6509%" y="197" width="0.0229%" height="15" fill="rgb(216,164,2)" fg:x="11109" fg:w="4"/><text x="63.9009%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::init_node_key (4 samples, 0.02%)</title><rect x="63.6509%" y="181" width="0.0229%" height="15" fill="rgb(220,129,5)" fg:x="11109" fg:w="4"/><text x="63.9009%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::fmt::format::format_inner (4 samples, 0.02%)</title><rect x="63.6509%" y="165" width="0.0229%" height="15" fill="rgb(242,17,10)" fg:x="11109" fg:w="4"/><text x="63.9009%" y="175.50"></text></g><g><title>dateo_fun_remover`core::fmt::write (3 samples, 0.02%)</title><rect x="63.6567%" y="149" width="0.0172%" height="15" fill="rgb(242,107,0)" fg:x="11110" fg:w="3"/><text x="63.9067%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="63.6567%" y="133" width="0.0172%" height="15" fill="rgb(251,28,31)" fg:x="11110" fg:w="3"/><text x="63.9067%" y="143.50"></text></g><g><title>dateo_fun_remover`core::fmt::write (4 samples, 0.02%)</title><rect x="63.6796%" y="181" width="0.0229%" height="15" fill="rgb(233,223,10)" fg:x="11114" fg:w="4"/><text x="63.9296%" y="191.50"></text></g><g><title>dateo_fun_remover`core::fmt::float::float_to_decimal_common_shortest (4 samples, 0.02%)</title><rect x="63.6796%" y="165" width="0.0229%" height="15" fill="rgb(215,21,27)" fg:x="11114" fg:w="4"/><text x="63.9296%" y="175.50"></text></g><g><title>dateo_fun_remover`core::num::flt2dec::strategy::grisu::format_shortest_opt (3 samples, 0.02%)</title><rect x="63.6853%" y="149" width="0.0172%" height="15" fill="rgb(232,23,21)" fg:x="11115" fg:w="3"/><text x="63.9353%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::populate (12 samples, 0.07%)</title><rect x="63.6395%" y="213" width="0.0688%" height="15" fill="rgb(244,5,23)" fg:x="11107" fg:w="12"/><text x="63.8895%" y="223.50"></text></g><g><title>dateo_fun_remover`alloc::fmt::format::format_inner (6 samples, 0.03%)</title><rect x="63.6739%" y="197" width="0.0344%" height="15" fill="rgb(226,81,46)" fg:x="11113" fg:w="6"/><text x="63.9239%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (4 samples, 0.02%)</title><rect x="67.6216%" y="101" width="0.0229%" height="15" fill="rgb(247,70,30)" fg:x="11802" fg:w="4"/><text x="67.8716%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (4 samples, 0.02%)</title><rect x="67.6216%" y="85" width="0.0229%" height="15" fill="rgb(212,68,19)" fg:x="11802" fg:w="4"/><text x="67.8716%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (4 samples, 0.02%)</title><rect x="67.6216%" y="69" width="0.0229%" height="15" fill="rgb(240,187,13)" fg:x="11802" fg:w="4"/><text x="67.8716%" y="79.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.10%)</title><rect x="67.6159%" y="181" width="0.0974%" height="15" fill="rgb(223,113,26)" fg:x="11801" fg:w="17"/><text x="67.8659%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (17 samples, 0.10%)</title><rect x="67.6159%" y="165" width="0.0974%" height="15" fill="rgb(206,192,2)" fg:x="11801" fg:w="17"/><text x="67.8659%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (17 samples, 0.10%)</title><rect x="67.6159%" y="149" width="0.0974%" height="15" fill="rgb(241,108,4)" fg:x="11801" fg:w="17"/><text x="67.8659%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (17 samples, 0.10%)</title><rect x="67.6159%" y="133" width="0.0974%" height="15" fill="rgb(247,173,49)" fg:x="11801" fg:w="17"/><text x="67.8659%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (17 samples, 0.10%)</title><rect x="67.6159%" y="117" width="0.0974%" height="15" fill="rgb(224,114,35)" fg:x="11801" fg:w="17"/><text x="67.8659%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.06%)</title><rect x="67.6503%" y="101" width="0.0630%" height="15" fill="rgb(245,159,27)" fg:x="11807" fg:w="11"/><text x="67.9003%" y="111.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all (2 samples, 0.01%)</title><rect x="67.7133%" y="181" width="0.0115%" height="15" fill="rgb(245,172,44)" fg:x="11818" fg:w="2"/><text x="67.9633%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (406 samples, 2.33%)</title><rect x="65.4157%" y="197" width="2.3262%" height="15" fill="rgb(236,23,11)" fg:x="11417" fg:w="406"/><text x="65.6657%" y="207.50">d..</text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (2 samples, 0.01%)</title><rect x="67.7305%" y="181" width="0.0115%" height="15" fill="rgb(205,117,38)" fg:x="11821" fg:w="2"/><text x="67.9805%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="67.7419%" y="197" width="0.0229%" height="15" fill="rgb(237,72,25)" fg:x="11823" fg:w="4"/><text x="67.9919%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (830 samples, 4.76%)</title><rect x="67.7649%" y="197" width="4.7556%" height="15" fill="rgb(244,70,9)" fg:x="11827" fg:w="830"/><text x="68.0149%" y="207.50">dateo_..</text></g><g><title>dateo_fun_remover`DYLD-STUB$$log (4 samples, 0.02%)</title><rect x="72.5205%" y="197" width="0.0229%" height="15" fill="rgb(217,125,39)" fg:x="12657" fg:w="4"/><text x="72.7705%" y="207.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$memcpy (3 samples, 0.02%)</title><rect x="72.5434%" y="197" width="0.0172%" height="15" fill="rgb(235,36,10)" fg:x="12661" fg:w="3"/><text x="72.7934%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (7 samples, 0.04%)</title><rect x="72.5663%" y="197" width="0.0401%" height="15" fill="rgb(251,123,47)" fg:x="12665" fg:w="7"/><text x="72.8163%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (9 samples, 0.05%)</title><rect x="72.6064%" y="197" width="0.0516%" height="15" fill="rgb(221,13,13)" fg:x="12672" fg:w="9"/><text x="72.8564%" y="207.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (2 samples, 0.01%)</title><rect x="72.6580%" y="197" width="0.0115%" height="15" fill="rgb(238,131,9)" fg:x="12681" fg:w="2"/><text x="72.9080%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (3 samples, 0.02%)</title><rect x="72.7268%" y="117" width="0.0172%" height="15" fill="rgb(211,50,8)" fg:x="12693" fg:w="3"/><text x="72.9768%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.02%)</title><rect x="72.7268%" y="101" width="0.0172%" height="15" fill="rgb(245,182,24)" fg:x="12693" fg:w="3"/><text x="72.9768%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (39 samples, 0.22%)</title><rect x="72.7439%" y="117" width="0.2235%" height="15" fill="rgb(242,14,37)" fg:x="12696" fg:w="39"/><text x="72.9939%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_large (39 samples, 0.22%)</title><rect x="72.7439%" y="101" width="0.2235%" height="15" fill="rgb(246,228,12)" fg:x="12696" fg:w="39"/><text x="72.9939%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (39 samples, 0.22%)</title><rect x="72.7439%" y="85" width="0.2235%" height="15" fill="rgb(213,55,15)" fg:x="12696" fg:w="39"/><text x="72.9939%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (39 samples, 0.22%)</title><rect x="72.7439%" y="69" width="0.2235%" height="15" fill="rgb(209,9,3)" fg:x="12696" fg:w="39"/><text x="72.9939%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (46 samples, 0.26%)</title><rect x="72.7268%" y="149" width="0.2636%" height="15" fill="rgb(230,59,30)" fg:x="12693" fg:w="46"/><text x="72.9768%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (46 samples, 0.26%)</title><rect x="72.7268%" y="133" width="0.2636%" height="15" fill="rgb(209,121,21)" fg:x="12693" fg:w="46"/><text x="72.9768%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="72.9731%" y="117" width="0.0172%" height="15" fill="rgb(220,109,13)" fg:x="12736" fg:w="3"/><text x="73.2231%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.33%)</title><rect x="72.6695%" y="197" width="0.3266%" height="15" fill="rgb(232,18,1)" fg:x="12683" fg:w="57"/><text x="72.9195%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (47 samples, 0.27%)</title><rect x="72.7268%" y="181" width="0.2693%" height="15" fill="rgb(215,41,42)" fg:x="12693" fg:w="47"/><text x="72.9768%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (47 samples, 0.27%)</title><rect x="72.7268%" y="165" width="0.2693%" height="15" fill="rgb(224,123,36)" fg:x="12693" fg:w="47"/><text x="72.9768%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Memo::get (4 samples, 0.02%)</title><rect x="72.9960%" y="197" width="0.0229%" height="15" fill="rgb(240,125,3)" fg:x="12740" fg:w="4"/><text x="73.2460%" y="207.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (17 samples, 0.10%)</title><rect x="79.1841%" y="149" width="0.0974%" height="15" fill="rgb(205,98,50)" fg:x="13820" fg:w="17"/><text x="79.4341%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (406 samples, 2.33%)</title><rect x="79.2815%" y="149" width="2.3262%" height="15" fill="rgb(205,185,37)" fg:x="13837" fg:w="406"/><text x="79.5315%" y="159.50">d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (29 samples, 0.17%)</title><rect x="81.6077%" y="149" width="0.1662%" height="15" fill="rgb(238,207,15)" fg:x="14243" fg:w="29"/><text x="81.8577%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (956 samples, 5.48%)</title><rect x="76.5771%" y="165" width="5.4776%" height="15" fill="rgb(213,199,42)" fg:x="13365" fg:w="956"/><text x="76.8271%" y="175.50">dateo_f..</text></g><g><title>libsystem_m.dylib`trunc (49 samples, 0.28%)</title><rect x="81.7739%" y="149" width="0.2808%" height="15" fill="rgb(235,201,11)" fg:x="14272" fg:w="49"/><text x="82.0239%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="82.0547%" y="165" width="0.0286%" height="15" fill="rgb(207,46,11)" fg:x="14321" fg:w="5"/><text x="82.3047%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="82.0604%" y="149" width="0.0229%" height="15" fill="rgb(241,35,35)" fg:x="14322" fg:w="4"/><text x="82.3104%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.02%)</title><rect x="82.0604%" y="133" width="0.0229%" height="15" fill="rgb(243,32,47)" fg:x="14322" fg:w="4"/><text x="82.3104%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="82.0719%" y="117" width="0.0115%" height="15" fill="rgb(247,202,23)" fg:x="14324" fg:w="2"/><text x="82.3219%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.01%)</title><rect x="82.0719%" y="101" width="0.0115%" height="15" fill="rgb(219,102,11)" fg:x="14324" fg:w="2"/><text x="82.3219%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="82.0719%" y="85" width="0.0115%" height="15" fill="rgb(243,110,44)" fg:x="14324" fg:w="2"/><text x="82.3219%" y="95.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (49 samples, 0.28%)</title><rect x="82.0833%" y="165" width="0.2808%" height="15" fill="rgb(222,74,54)" fg:x="14326" fg:w="49"/><text x="82.3333%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (11 samples, 0.06%)</title><rect x="82.3641%" y="165" width="0.0630%" height="15" fill="rgb(216,99,12)" fg:x="14375" fg:w="11"/><text x="82.6141%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,848 samples, 10.59%)</title><rect x="73.8670%" y="181" width="10.5884%" height="15" fill="rgb(226,22,26)" fg:x="12892" fg:w="1848"/><text x="74.1170%" y="191.50">dateo_fun_remov..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (354 samples, 2.03%)</title><rect x="82.4271%" y="165" width="2.0283%" height="15" fill="rgb(217,163,10)" fg:x="14386" fg:w="354"/><text x="82.6771%" y="175.50">l..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="84.4554%" y="181" width="0.0401%" height="15" fill="rgb(213,25,53)" fg:x="14740" fg:w="7"/><text x="84.7054%" y="191.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (10 samples, 0.06%)</title><rect x="84.4955%" y="181" width="0.0573%" height="15" fill="rgb(252,105,26)" fg:x="14747" fg:w="10"/><text x="84.7455%" y="191.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (16 samples, 0.09%)</title><rect x="84.8336%" y="149" width="0.0917%" height="15" fill="rgb(220,39,43)" fg:x="14806" fg:w="16"/><text x="85.0836%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.02%)</title><rect x="84.9252%" y="149" width="0.0229%" height="15" fill="rgb(229,68,48)" fg:x="14822" fg:w="4"/><text x="85.1752%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (131 samples, 0.75%)</title><rect x="84.9481%" y="149" width="0.7506%" height="15" fill="rgb(252,8,32)" fg:x="14826" fg:w="131"/><text x="85.1981%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (8 samples, 0.05%)</title><rect x="85.8821%" y="133" width="0.0458%" height="15" fill="rgb(223,20,43)" fg:x="14989" fg:w="8"/><text x="86.1321%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.03%)</title><rect x="86.0826%" y="117" width="0.0286%" height="15" fill="rgb(229,81,49)" fg:x="15024" fg:w="5"/><text x="86.3326%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (108 samples, 0.62%)</title><rect x="86.1113%" y="117" width="0.6188%" height="15" fill="rgb(236,28,36)" fg:x="15029" fg:w="108"/><text x="86.3613%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (176 samples, 1.01%)</title><rect x="86.9363%" y="101" width="1.0084%" height="15" fill="rgb(249,185,26)" fg:x="15173" fg:w="176"/><text x="87.1863%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.07%)</title><rect x="87.8703%" y="85" width="0.0745%" height="15" fill="rgb(249,174,33)" fg:x="15336" fg:w="13"/><text x="88.1203%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (152 samples, 0.87%)</title><rect x="87.9448%" y="101" width="0.8709%" height="15" fill="rgb(233,201,37)" fg:x="15349" fg:w="152"/><text x="88.1948%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="88.8157%" y="101" width="0.0172%" height="15" fill="rgb(221,78,26)" fg:x="15501" fg:w="3"/><text x="89.0657%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="88.8157%" y="85" width="0.0172%" height="15" fill="rgb(250,127,30)" fg:x="15501" fg:w="3"/><text x="89.0657%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="88.8214%" y="69" width="0.0115%" height="15" fill="rgb(230,49,44)" fg:x="15502" fg:w="2"/><text x="89.0714%" y="79.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.02%)</title><rect x="88.8329%" y="101" width="0.0172%" height="15" fill="rgb(229,67,23)" fg:x="15504" fg:w="3"/><text x="89.0829%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="88.8501%" y="101" width="0.0115%" height="15" fill="rgb(249,83,47)" fg:x="15507" fg:w="2"/><text x="89.1001%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (380 samples, 2.18%)</title><rect x="86.7301%" y="117" width="2.1773%" height="15" fill="rgb(215,43,3)" fg:x="15137" fg:w="380"/><text x="86.9801%" y="127.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.05%)</title><rect x="88.8615%" y="101" width="0.0458%" height="15" fill="rgb(238,154,13)" fg:x="15509" fg:w="8"/><text x="89.1115%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="88.9074%" y="117" width="0.0115%" height="15" fill="rgb(219,56,2)" fg:x="15517" fg:w="2"/><text x="89.1574%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="88.9074%" y="101" width="0.0115%" height="15" fill="rgb(233,0,4)" fg:x="15517" fg:w="2"/><text x="89.1574%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (743 samples, 4.26%)</title><rect x="84.6960%" y="165" width="4.2571%" height="15" fill="rgb(235,30,7)" fg:x="14782" fg:w="743"/><text x="84.9460%" y="175.50">dateo..</text></g><g><title>libsystem_malloc.dylib`realloc (568 samples, 3.25%)</title><rect x="85.6987%" y="149" width="3.2545%" height="15" fill="rgb(250,79,13)" fg:x="14957" fg:w="568"/><text x="85.9487%" y="159.50">lib..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (528 samples, 3.03%)</title><rect x="85.9279%" y="133" width="3.0253%" height="15" fill="rgb(211,146,34)" fg:x="14997" fg:w="528"/><text x="86.1779%" y="143.50">lib..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="88.9245%" y="117" width="0.0286%" height="15" fill="rgb(228,22,38)" fg:x="15520" fg:w="5"/><text x="89.1745%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (770 samples, 4.41%)</title><rect x="84.5528%" y="181" width="4.4118%" height="15" fill="rgb(235,168,5)" fg:x="14757" fg:w="770"/><text x="84.8028%" y="191.50">dateo..</text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="88.9532%" y="165" width="0.0115%" height="15" fill="rgb(221,155,16)" fg:x="15525" fg:w="2"/><text x="89.2032%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="88.9646%" y="181" width="0.0115%" height="15" fill="rgb(215,215,53)" fg:x="15527" fg:w="2"/><text x="89.2146%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (7 samples, 0.04%)</title><rect x="88.9761%" y="181" width="0.0401%" height="15" fill="rgb(223,4,10)" fg:x="15529" fg:w="7"/><text x="89.2261%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.15%)</title><rect x="89.0162%" y="181" width="0.1490%" height="15" fill="rgb(234,103,6)" fg:x="15536" fg:w="26"/><text x="89.2662%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (496 samples, 2.84%)</title><rect x="89.1652%" y="181" width="2.8419%" height="15" fill="rgb(227,97,0)" fg:x="15562" fg:w="496"/><text x="89.4152%" y="191.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (35 samples, 0.20%)</title><rect x="91.8066%" y="165" width="0.2005%" height="15" fill="rgb(234,150,53)" fg:x="16023" fg:w="35"/><text x="92.0566%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.02%)</title><rect x="92.0071%" y="181" width="0.0229%" height="15" fill="rgb(228,201,54)" fg:x="16058" fg:w="4"/><text x="92.2571%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (202 samples, 1.16%)</title><rect x="92.0300%" y="181" width="1.1574%" height="15" fill="rgb(222,22,37)" fg:x="16062" fg:w="202"/><text x="92.2800%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.01%)</title><rect x="93.1874%" y="181" width="0.0115%" height="15" fill="rgb(237,53,32)" fg:x="16264" fg:w="2"/><text x="93.4374%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.03%)</title><rect x="93.1989%" y="181" width="0.0344%" height="15" fill="rgb(233,25,53)" fg:x="16266" fg:w="6"/><text x="93.4489%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (3,556 samples, 20.37%)</title><rect x="73.0190%" y="197" width="20.3747%" height="15" fill="rgb(210,40,34)" fg:x="12744" fg:w="3556"/><text x="73.2690%" y="207.50">dateo_fun_remover`dateo_fun_remo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.16%)</title><rect x="93.2333%" y="181" width="0.1604%" height="15" fill="rgb(241,220,44)" fg:x="16272" fg:w="28"/><text x="93.4833%" y="191.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d4470 (90 samples, 0.52%)</title><rect x="93.3937%" y="197" width="0.5157%" height="15" fill="rgb(235,28,35)" fg:x="16300" fg:w="90"/><text x="93.6437%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (394 samples, 2.26%)</title><rect x="93.9094%" y="197" width="2.2575%" height="15" fill="rgb(210,56,17)" fg:x="16390" fg:w="394"/><text x="94.1594%" y="207.50">l..</text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (5 samples, 0.03%)</title><rect x="96.1668%" y="197" width="0.0286%" height="15" fill="rgb(224,130,29)" fg:x="16784" fg:w="5"/><text x="96.4168%" y="207.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (9 samples, 0.05%)</title><rect x="96.1955%" y="197" width="0.0516%" height="15" fill="rgb(235,212,8)" fg:x="16789" fg:w="9"/><text x="96.4455%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.10%)</title><rect x="96.2528%" y="197" width="0.0974%" height="15" fill="rgb(223,33,50)" fg:x="16799" fg:w="17"/><text x="96.5028%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (261 samples, 1.50%)</title><rect x="96.3502%" y="197" width="1.4954%" height="15" fill="rgb(219,149,13)" fg:x="16816" fg:w="261"/><text x="96.6002%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.10%)</title><rect x="97.7482%" y="181" width="0.0974%" height="15" fill="rgb(250,156,29)" fg:x="17060" fg:w="17"/><text x="97.9982%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (42 samples, 0.24%)</title><rect x="97.8456%" y="197" width="0.2406%" height="15" fill="rgb(216,193,19)" fg:x="17077" fg:w="42"/><text x="98.0956%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="98.0863%" y="197" width="0.0172%" height="15" fill="rgb(216,135,14)" fg:x="17119" fg:w="3"/><text x="98.3363%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="98.1092%" y="197" width="0.0229%" height="15" fill="rgb(241,47,5)" fg:x="17123" fg:w="4"/><text x="98.3592%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (6 samples, 0.03%)</title><rect x="98.1321%" y="197" width="0.0344%" height="15" fill="rgb(233,42,35)" fg:x="17127" fg:w="6"/><text x="98.3821%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.01%)</title><rect x="98.1665%" y="197" width="0.0115%" height="15" fill="rgb(231,13,6)" fg:x="17133" fg:w="2"/><text x="98.4165%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (6 samples, 0.03%)</title><rect x="98.1780%" y="197" width="0.0344%" height="15" fill="rgb(207,181,40)" fg:x="17135" fg:w="6"/><text x="98.4280%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (10 samples, 0.06%)</title><rect x="98.2123%" y="197" width="0.0573%" height="15" fill="rgb(254,173,49)" fg:x="17141" fg:w="10"/><text x="98.4623%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (6,046 samples, 34.64%)</title><rect x="63.7082%" y="213" width="34.6416%" height="15" fill="rgb(221,1,38)" fg:x="11119" fg:w="6046"/><text x="63.9582%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.08%)</title><rect x="98.2696%" y="197" width="0.0802%" height="15" fill="rgb(206,124,46)" fg:x="17151" fg:w="14"/><text x="98.5196%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (2 samples, 0.01%)</title><rect x="98.3499%" y="213" width="0.0115%" height="15" fill="rgb(249,21,11)" fg:x="17165" fg:w="2"/><text x="98.5999%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.02%)</title><rect x="98.3613%" y="213" width="0.0229%" height="15" fill="rgb(222,201,40)" fg:x="17167" fg:w="4"/><text x="98.6113%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.17%)</title><rect x="98.3842%" y="213" width="0.1662%" height="15" fill="rgb(235,61,29)" fg:x="17171" fg:w="29"/><text x="98.6342%" y="223.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17,202 samples, 98.56%)</title><rect x="0.0172%" y="229" width="98.5619%" height="15" fill="rgb(219,207,3)" fg:x="3" fg:w="17202"/><text x="0.2672%" y="239.50">dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (5 samples, 0.03%)</title><rect x="98.5504%" y="213" width="0.0286%" height="15" fill="rgb(222,56,46)" fg:x="17200" fg:w="5"/><text x="98.8004%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,204 samples, 98.57%)</title><rect x="0.0115%" y="261" width="98.5733%" height="15" fill="rgb(239,76,54)" fg:x="2" fg:w="17204"/><text x="0.2615%" y="271.50">dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,204 samples, 98.57%)</title><rect x="0.0115%" y="245" width="98.5733%" height="15" fill="rgb(231,124,27)" fg:x="2" fg:w="17204"/><text x="0.2615%" y="255.50">dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>dateo_fun_remover`&lt;itertools::permutations::Permutations&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="98.5848%" y="229" width="0.0115%" height="15" fill="rgb(249,195,6)" fg:x="17206" fg:w="2"/><text x="98.8348%" y="239.50"></text></g><g><title>dateo_fun_remover`itertools::permutations::CompleteState::advance (2 samples, 0.01%)</title><rect x="98.5848%" y="213" width="0.0115%" height="15" fill="rgb(237,174,47)" fg:x="17206" fg:w="2"/><text x="98.8348%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="98.5848%" y="245" width="0.0172%" height="15" fill="rgb(206,201,31)" fg:x="17206" fg:w="3"/><text x="98.8348%" y="255.50"></text></g><g><title>dateo_fun_remover`alloc::fmt::format::format_inner (2 samples, 0.01%)</title><rect x="98.6020%" y="245" width="0.0115%" height="15" fill="rgb(231,57,52)" fg:x="17209" fg:w="2"/><text x="98.8520%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.06%)</title><rect x="98.6306%" y="213" width="0.0630%" height="15" fill="rgb(248,177,22)" fg:x="17214" fg:w="11"/><text x="98.8806%" y="223.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (5 samples, 0.03%)</title><rect x="98.6650%" y="197" width="0.0286%" height="15" fill="rgb(215,211,37)" fg:x="17220" fg:w="5"/><text x="98.9150%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="98.6936%" y="213" width="0.0115%" height="15" fill="rgb(241,128,51)" fg:x="17225" fg:w="2"/><text x="98.9436%" y="223.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="98.6936%" y="197" width="0.0115%" height="15" fill="rgb(227,165,31)" fg:x="17225" fg:w="2"/><text x="98.9436%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="98.6936%" y="181" width="0.0115%" height="15" fill="rgb(228,167,24)" fg:x="17225" fg:w="2"/><text x="98.9436%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="98.6936%" y="165" width="0.0115%" height="15" fill="rgb(228,143,12)" fg:x="17225" fg:w="2"/><text x="98.9436%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.09%)</title><rect x="98.6191%" y="229" width="0.0917%" height="15" fill="rgb(249,149,8)" fg:x="17212" fg:w="16"/><text x="98.8691%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.01%)</title><rect x="98.7166%" y="165" width="0.0115%" height="15" fill="rgb(243,35,44)" fg:x="17229" fg:w="2"/><text x="98.9666%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.03%)</title><rect x="98.7166%" y="181" width="0.0286%" height="15" fill="rgb(246,89,9)" fg:x="17229" fg:w="5"/><text x="98.9666%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="98.7280%" y="165" width="0.0172%" height="15" fill="rgb(233,213,13)" fg:x="17231" fg:w="3"/><text x="98.9780%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.04%)</title><rect x="98.7166%" y="229" width="0.0401%" height="15" fill="rgb(233,141,41)" fg:x="17229" fg:w="7"/><text x="98.9666%" y="239.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="98.7166%" y="213" width="0.0401%" height="15" fill="rgb(239,167,4)" fg:x="17229" fg:w="7"/><text x="98.9666%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.04%)</title><rect x="98.7166%" y="197" width="0.0401%" height="15" fill="rgb(209,217,16)" fg:x="17229" fg:w="7"/><text x="98.9666%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="98.7452%" y="181" width="0.0115%" height="15" fill="rgb(219,88,35)" fg:x="17234" fg:w="2"/><text x="98.9952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="98.7452%" y="165" width="0.0115%" height="15" fill="rgb(220,193,23)" fg:x="17234" fg:w="2"/><text x="98.9952%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (26 samples, 0.15%)</title><rect x="98.6191%" y="245" width="0.1490%" height="15" fill="rgb(230,90,52)" fg:x="17212" fg:w="26"/><text x="98.8691%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,237 samples, 98.76%)</title><rect x="0.0115%" y="277" width="98.7624%" height="15" fill="rgb(252,106,19)" fg:x="2" fg:w="17237"/><text x="0.2615%" y="287.50">dateo_fun_remover`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (33 samples, 0.19%)</title><rect x="98.5848%" y="261" width="0.1891%" height="15" fill="rgb(206,74,20)" fg:x="17206" fg:w="33"/><text x="98.8348%" y="271.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="98.7796%" y="277" width="0.0172%" height="15" fill="rgb(230,138,44)" fg:x="17240" fg:w="3"/><text x="99.0296%" y="287.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (2 samples, 0.01%)</title><rect x="98.7853%" y="261" width="0.0115%" height="15" fill="rgb(235,182,43)" fg:x="17241" fg:w="2"/><text x="99.0353%" y="271.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="98.7853%" y="245" width="0.0115%" height="15" fill="rgb(242,16,51)" fg:x="17241" fg:w="2"/><text x="99.0353%" y="255.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (2 samples, 0.01%)</title><rect x="98.7968%" y="261" width="0.0115%" height="15" fill="rgb(248,9,4)" fg:x="17243" fg:w="2"/><text x="99.0468%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="98.7968%" y="245" width="0.0115%" height="15" fill="rgb(210,31,22)" fg:x="17243" fg:w="2"/><text x="99.0468%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,246 samples, 98.81%)</title><rect x="0.0057%" y="341" width="98.8140%" height="15" fill="rgb(239,54,39)" fg:x="1" fg:w="17246"/><text x="0.2557%" y="351.50">dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,246 samples, 98.81%)</title><rect x="0.0057%" y="325" width="98.8140%" height="15" fill="rgb(230,99,41)" fg:x="1" fg:w="17246"/><text x="0.2557%" y="335.50">dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17,246 samples, 98.81%)</title><rect x="0.0057%" y="309" width="98.8140%" height="15" fill="rgb(253,106,12)" fg:x="1" fg:w="17246"/><text x="0.2557%" y="319.50">dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,245 samples, 98.81%)</title><rect x="0.0115%" y="293" width="98.8082%" height="15" fill="rgb(213,46,41)" fg:x="2" fg:w="17245"/><text x="0.2615%" y="303.50">dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u32,dateo_fun_remover::finder::atom::Atom)&gt;&gt; (4 samples, 0.02%)</title><rect x="98.7968%" y="277" width="0.0229%" height="15" fill="rgb(215,133,35)" fg:x="17243" fg:w="4"/><text x="99.0468%" y="287.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.28%)</title><rect x="98.8483%" y="213" width="0.2808%" height="15" fill="rgb(213,28,5)" fg:x="17252" fg:w="49"/><text x="99.0983%" y="223.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 0.09%)</title><rect x="99.0374%" y="197" width="0.0917%" height="15" fill="rgb(215,77,49)" fg:x="17285" fg:w="16"/><text x="99.2874%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 0.33%)</title><rect x="98.8197%" y="229" width="0.3266%" height="15" fill="rgb(248,100,22)" fg:x="17247" fg:w="57"/><text x="99.0697%" y="239.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (2 samples, 0.01%)</title><rect x="99.1348%" y="213" width="0.0115%" height="15" fill="rgb(208,67,9)" fg:x="17302" fg:w="2"/><text x="99.3848%" y="223.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (58 samples, 0.33%)</title><rect x="98.8197%" y="245" width="0.3323%" height="15" fill="rgb(219,133,21)" fg:x="17247" fg:w="58"/><text x="99.0697%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="99.1577%" y="229" width="0.0229%" height="15" fill="rgb(246,46,29)" fg:x="17306" fg:w="4"/><text x="99.4077%" y="239.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.17%)</title><rect x="99.1807%" y="229" width="0.1719%" height="15" fill="rgb(246,185,52)" fg:x="17310" fg:w="30"/><text x="99.4307%" y="239.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="99.3525%" y="229" width="0.0115%" height="15" fill="rgb(252,136,11)" fg:x="17340" fg:w="2"/><text x="99.6025%" y="239.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="99.3525%" y="213" width="0.0115%" height="15" fill="rgb(219,138,53)" fg:x="17340" fg:w="2"/><text x="99.6025%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="99.3525%" y="197" width="0.0115%" height="15" fill="rgb(211,51,23)" fg:x="17340" fg:w="2"/><text x="99.6025%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="99.3525%" y="181" width="0.0115%" height="15" fill="rgb(247,221,28)" fg:x="17340" fg:w="2"/><text x="99.6025%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="99.3525%" y="165" width="0.0115%" height="15" fill="rgb(251,222,45)" fg:x="17340" fg:w="2"/><text x="99.6025%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="99.3525%" y="149" width="0.0115%" height="15" fill="rgb(217,162,53)" fg:x="17340" fg:w="2"/><text x="99.6025%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (15 samples, 0.09%)</title><rect x="99.5645%" y="181" width="0.0859%" height="15" fill="rgb(229,93,14)" fg:x="17377" fg:w="15"/><text x="99.8145%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (2 samples, 0.01%)</title><rect x="99.6505%" y="181" width="0.0115%" height="15" fill="rgb(209,67,49)" fg:x="17392" fg:w="2"/><text x="99.9005%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.23%)</title><rect x="99.4385%" y="197" width="0.2292%" height="15" fill="rgb(213,87,29)" fg:x="17355" fg:w="40"/><text x="99.6885%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 0.35%)</title><rect x="99.3869%" y="213" width="0.3495%" height="15" fill="rgb(205,151,52)" fg:x="17346" fg:w="61"/><text x="99.6369%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.07%)</title><rect x="99.6677%" y="197" width="0.0688%" height="15" fill="rgb(253,215,39)" fg:x="17395" fg:w="12"/><text x="99.9177%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="99.7422%" y="149" width="0.0115%" height="15" fill="rgb(221,220,41)" fg:x="17408" fg:w="2"/><text x="99.9922%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.04%)</title><rect x="99.7364%" y="213" width="0.0401%" height="15" fill="rgb(218,133,21)" fg:x="17407" fg:w="7"/><text x="99.9864%" y="223.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="99.7364%" y="197" width="0.0401%" height="15" fill="rgb(221,193,43)" fg:x="17407" fg:w="7"/><text x="99.9864%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.04%)</title><rect x="99.7364%" y="181" width="0.0401%" height="15" fill="rgb(240,128,52)" fg:x="17407" fg:w="7"/><text x="99.9864%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.04%)</title><rect x="99.7364%" y="165" width="0.0401%" height="15" fill="rgb(253,114,12)" fg:x="17407" fg:w="7"/><text x="99.9864%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.02%)</title><rect x="99.7536%" y="149" width="0.0229%" height="15" fill="rgb(215,223,47)" fg:x="17410" fg:w="4"/><text x="100.0036%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="99.7594%" y="133" width="0.0172%" height="15" fill="rgb(248,225,23)" fg:x="17411" fg:w="3"/><text x="100.0094%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.09%)</title><rect x="99.7765%" y="213" width="0.0917%" height="15" fill="rgb(250,108,0)" fg:x="17414" fg:w="16"/><text x="100.0265%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.04%)</title><rect x="99.8739%" y="213" width="0.0401%" height="15" fill="rgb(228,208,7)" fg:x="17431" fg:w="7"/><text x="100.1239%" y="223.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (97 samples, 0.56%)</title><rect x="99.3640%" y="229" width="0.5558%" height="15" fill="rgb(244,45,10)" fg:x="17342" fg:w="97"/><text x="99.6140%" y="239.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d4470 (3 samples, 0.02%)</title><rect x="99.9198%" y="229" width="0.0172%" height="15" fill="rgb(207,125,25)" fg:x="17439" fg:w="3"/><text x="100.1698%" y="239.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (4 samples, 0.02%)</title><rect x="99.9370%" y="229" width="0.0229%" height="15" fill="rgb(210,195,18)" fg:x="17442" fg:w="4"/><text x="100.1870%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.02%)</title><rect x="99.9656%" y="229" width="0.0172%" height="15" fill="rgb(249,80,12)" fg:x="17447" fg:w="3"/><text x="100.2156%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (17,451 samples, 99.99%)</title><rect x="0.0057%" y="357" width="99.9885%" height="15" fill="rgb(221,65,9)" fg:x="1" fg:w="17451"/><text x="0.2557%" y="367.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve_square (205 samples, 1.17%)</title><rect x="98.8197%" y="341" width="1.1746%" height="15" fill="rgb(235,49,36)" fg:x="17247" fg:w="205"/><text x="99.0697%" y="351.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (205 samples, 1.17%)</title><rect x="98.8197%" y="325" width="1.1746%" height="15" fill="rgb(225,32,20)" fg:x="17247" fg:w="205"/><text x="99.0697%" y="335.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 1.17%)</title><rect x="98.8197%" y="309" width="1.1746%" height="15" fill="rgb(215,141,46)" fg:x="17247" fg:w="205"/><text x="99.0697%" y="319.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (205 samples, 1.17%)</title><rect x="98.8197%" y="293" width="1.1746%" height="15" fill="rgb(250,160,47)" fg:x="17247" fg:w="205"/><text x="99.0697%" y="303.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 1.17%)</title><rect x="98.8197%" y="277" width="1.1746%" height="15" fill="rgb(216,222,40)" fg:x="17247" fg:w="205"/><text x="99.0697%" y="287.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (205 samples, 1.17%)</title><rect x="98.8197%" y="261" width="1.1746%" height="15" fill="rgb(234,217,39)" fg:x="17247" fg:w="205"/><text x="99.0697%" y="271.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (147 samples, 0.84%)</title><rect x="99.1520%" y="245" width="0.8423%" height="15" fill="rgb(207,178,40)" fg:x="17305" fg:w="147"/><text x="99.4020%" y="255.50"></text></g><g><title>all (17,453 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(221,136,13)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="479.50"></text></g><g><title>dyld`start (17,453 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="463.50">dyld`start</text></g><g><title>dateo_fun_remover`main (17,453 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(249,222,13)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="447.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (17,453 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(244,185,38)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="431.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (17,453 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(236,202,9)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="415.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (17,453 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(250,229,37)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="399.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (17,453 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(206,174,23)" fg:x="0" fg:w="17453"/><text x="0.2500%" y="383.50">dateo_fun_remover`dateo_fun_remover::main</text></g></svg></svg>