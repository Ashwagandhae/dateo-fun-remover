<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="358" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="341.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="341.00"> </text><svg id="frames" x="10" width="1180" total_samples="7254"><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.0000%" y="197" width="0.0138%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>datoe_solver`&lt;itertools::combinations_with_replacement::CombinationsWithReplacement&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0138%" y="197" width="0.0138%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2638%" y="207.50"></text></g><g><title>datoe_solver`__rdl_dealloc (5 samples, 0.07%)</title><rect x="0.0276%" y="197" width="0.0689%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="5"/><text x="0.2776%" y="207.50"></text></g><g><title>datoe_solver`__rust_dealloc (2 samples, 0.03%)</title><rect x="0.0965%" y="197" width="0.0276%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="2"/><text x="0.3465%" y="207.50"></text></g><g><title>datoe_solver`__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.1241%" y="165" width="0.0138%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="1"/><text x="0.3741%" y="175.50"></text></g><g><title>datoe_solver`__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.1379%" y="149" width="0.0138%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="1"/><text x="0.3879%" y="159.50"></text></g><g><title>datoe_solver`__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.3033%" y="133" width="0.0138%" height="15" fill="rgb(207,160,47)" fg:x="22" fg:w="1"/><text x="0.5533%" y="143.50"></text></g><g><title>datoe_solver`__rust_dealloc (1 samples, 0.01%)</title><rect x="0.3171%" y="133" width="0.0138%" height="15" fill="rgb(228,23,34)" fg:x="23" fg:w="1"/><text x="0.5671%" y="143.50"></text></g><g><title>datoe_solver`__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.7444%" y="117" width="0.0138%" height="15" fill="rgb(218,30,26)" fg:x="54" fg:w="1"/><text x="0.9944%" y="127.50"></text></g><g><title>datoe_solver`__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.9512%" y="101" width="0.0138%" height="15" fill="rgb(220,122,19)" fg:x="69" fg:w="1"/><text x="1.2012%" y="111.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (7 samples, 0.10%)</title><rect x="1.0615%" y="85" width="0.0965%" height="15" fill="rgb(250,228,42)" fg:x="77" fg:w="7"/><text x="1.3115%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.40%)</title><rect x="1.1580%" y="85" width="0.3998%" height="15" fill="rgb(240,193,28)" fg:x="84" fg:w="29"/><text x="1.4080%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="1.5164%" y="69" width="0.0414%" height="15" fill="rgb(216,20,37)" fg:x="110" fg:w="3"/><text x="1.7664%" y="79.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (44 samples, 0.61%)</title><rect x="0.9650%" y="101" width="0.6066%" height="15" fill="rgb(206,188,39)" fg:x="70" fg:w="44"/><text x="1.2150%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="1.5578%" y="85" width="0.0138%" height="15" fill="rgb(217,207,13)" fg:x="113" fg:w="1"/><text x="1.8078%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="1.5715%" y="101" width="0.0138%" height="15" fill="rgb(231,73,38)" fg:x="114" fg:w="1"/><text x="1.8215%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (49 samples, 0.68%)</title><rect x="1.5853%" y="101" width="0.6755%" height="15" fill="rgb(225,20,46)" fg:x="115" fg:w="49"/><text x="1.8353%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.07%)</title><rect x="2.1919%" y="85" width="0.0689%" height="15" fill="rgb(210,31,41)" fg:x="159" fg:w="5"/><text x="2.4419%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="2.2608%" y="101" width="0.0138%" height="15" fill="rgb(221,200,47)" fg:x="164" fg:w="1"/><text x="2.5108%" y="111.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (111 samples, 1.53%)</title><rect x="0.7582%" y="117" width="1.5302%" height="15" fill="rgb(226,26,5)" fg:x="55" fg:w="111"/><text x="1.0082%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="2.2746%" y="101" width="0.0138%" height="15" fill="rgb(249,33,26)" fg:x="165" fg:w="1"/><text x="2.5246%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="2.2746%" y="85" width="0.0138%" height="15" fill="rgb(235,183,28)" fg:x="165" fg:w="1"/><text x="2.5246%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="2.2746%" y="69" width="0.0138%" height="15" fill="rgb(221,5,38)" fg:x="165" fg:w="1"/><text x="2.5246%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="2.2884%" y="117" width="0.0138%" height="15" fill="rgb(247,18,42)" fg:x="166" fg:w="1"/><text x="2.5384%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (42 samples, 0.58%)</title><rect x="2.3022%" y="117" width="0.5790%" height="15" fill="rgb(241,131,45)" fg:x="167" fg:w="42"/><text x="2.5522%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="2.8674%" y="101" width="0.0138%" height="15" fill="rgb(249,31,29)" fg:x="208" fg:w="1"/><text x="3.1174%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="2.8812%" y="117" width="0.0276%" height="15" fill="rgb(225,111,53)" fg:x="209" fg:w="2"/><text x="3.1312%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (201 samples, 2.77%)</title><rect x="0.3309%" y="133" width="2.7709%" height="15" fill="rgb(238,160,17)" fg:x="24" fg:w="201"/><text x="0.5809%" y="143.50">da..</text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (14 samples, 0.19%)</title><rect x="2.9087%" y="117" width="0.1930%" height="15" fill="rgb(214,148,48)" fg:x="211" fg:w="14"/><text x="3.1587%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (14 samples, 0.19%)</title><rect x="2.9087%" y="101" width="0.1930%" height="15" fill="rgb(232,36,49)" fg:x="211" fg:w="14"/><text x="3.1587%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.19%)</title><rect x="2.9087%" y="85" width="0.1930%" height="15" fill="rgb(209,103,24)" fg:x="211" fg:w="14"/><text x="3.1587%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (46 samples, 0.63%)</title><rect x="3.1017%" y="133" width="0.6341%" height="15" fill="rgb(229,88,8)" fg:x="225" fg:w="46"/><text x="3.3517%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="3.6945%" y="117" width="0.0414%" height="15" fill="rgb(213,181,19)" fg:x="268" fg:w="3"/><text x="3.9445%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="3.7359%" y="133" width="0.0138%" height="15" fill="rgb(254,191,54)" fg:x="271" fg:w="1"/><text x="3.9859%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (15 samples, 0.21%)</title><rect x="3.7497%" y="133" width="0.2068%" height="15" fill="rgb(241,83,37)" fg:x="272" fg:w="15"/><text x="3.9997%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (15 samples, 0.21%)</title><rect x="3.7497%" y="117" width="0.2068%" height="15" fill="rgb(233,36,39)" fg:x="272" fg:w="15"/><text x="3.9997%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`madvise (15 samples, 0.21%)</title><rect x="3.7497%" y="101" width="0.2068%" height="15" fill="rgb(226,3,54)" fg:x="272" fg:w="15"/><text x="3.9997%" y="111.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (277 samples, 3.82%)</title><rect x="0.1516%" y="149" width="3.8186%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="277"/><text x="0.4016%" y="159.50">dato..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="3.9564%" y="133" width="0.0138%" height="15" fill="rgb(238,167,29)" fg:x="287" fg:w="1"/><text x="4.2064%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (30 samples, 0.41%)</title><rect x="3.9702%" y="149" width="0.4136%" height="15" fill="rgb(232,182,51)" fg:x="288" fg:w="30"/><text x="4.2202%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="4.3424%" y="133" width="0.0414%" height="15" fill="rgb(231,60,39)" fg:x="315" fg:w="3"/><text x="4.5924%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.06%)</title><rect x="4.3838%" y="149" width="0.0551%" height="15" fill="rgb(208,69,12)" fg:x="318" fg:w="4"/><text x="4.6338%" y="159.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;datoe_solver::finder::atom::Atom&gt;&gt; (343 samples, 4.73%)</title><rect x="0.1379%" y="165" width="4.7284%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="343"/><text x="0.3879%" y="175.50">datoe_..</text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (31 samples, 0.43%)</title><rect x="4.4389%" y="149" width="0.4274%" height="15" fill="rgb(213,116,39)" fg:x="322" fg:w="31"/><text x="4.6889%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (31 samples, 0.43%)</title><rect x="4.4389%" y="133" width="0.4274%" height="15" fill="rgb(222,207,29)" fg:x="322" fg:w="31"/><text x="4.6889%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (30 samples, 0.41%)</title><rect x="4.4527%" y="117" width="0.4136%" height="15" fill="rgb(206,96,30)" fg:x="323" fg:w="30"/><text x="4.7027%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (1 samples, 0.01%)</title><rect x="4.8663%" y="165" width="0.0138%" height="15" fill="rgb(218,138,4)" fg:x="353" fg:w="1"/><text x="5.1163%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="4.8801%" y="165" width="0.0138%" height="15" fill="rgb(250,191,14)" fg:x="354" fg:w="1"/><text x="5.1301%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="4.8939%" y="149" width="0.0138%" height="15" fill="rgb(239,60,40)" fg:x="355" fg:w="1"/><text x="5.1439%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.04%)</title><rect x="4.8939%" y="165" width="0.0414%" height="15" fill="rgb(206,27,48)" fg:x="355" fg:w="3"/><text x="5.1439%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_large (2 samples, 0.03%)</title><rect x="4.9076%" y="149" width="0.0276%" height="15" fill="rgb(225,35,8)" fg:x="356" fg:w="2"/><text x="5.1576%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (2 samples, 0.03%)</title><rect x="4.9076%" y="133" width="0.0276%" height="15" fill="rgb(250,213,24)" fg:x="356" fg:w="2"/><text x="5.1576%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.03%)</title><rect x="4.9076%" y="117" width="0.0276%" height="15" fill="rgb(247,123,22)" fg:x="356" fg:w="2"/><text x="5.1576%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::Finder&gt; (352 samples, 4.85%)</title><rect x="0.1241%" y="197" width="4.8525%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="352"/><text x="0.3741%" y="207.50">datoe_..</text></g><g><title>datoe_solver`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (352 samples, 4.85%)</title><rect x="0.1241%" y="181" width="4.8525%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="352"/><text x="0.3741%" y="191.50">datoe_..</text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.04%)</title><rect x="4.9352%" y="165" width="0.0414%" height="15" fill="rgb(251,118,11)" fg:x="358" fg:w="3"/><text x="5.1852%" y="175.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (5 samples, 0.07%)</title><rect x="4.9766%" y="197" width="0.0689%" height="15" fill="rgb(217,147,25)" fg:x="361" fg:w="5"/><text x="5.2266%" y="207.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="5.2661%" y="181" width="0.0414%" height="15" fill="rgb(247,81,37)" fg:x="382" fg:w="3"/><text x="5.5161%" y="191.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (29 samples, 0.40%)</title><rect x="11.3179%" y="117" width="0.3998%" height="15" fill="rgb(209,12,38)" fg:x="821" fg:w="29"/><text x="11.5679%" y="127.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (449 samples, 6.19%)</title><rect x="9.6361%" y="133" width="6.1897%" height="15" fill="rgb(227,1,9)" fg:x="699" fg:w="449"/><text x="9.8861%" y="143.50">datoe_so..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (298 samples, 4.11%)</title><rect x="11.7177%" y="117" width="4.1081%" height="15" fill="rgb(248,47,43)" fg:x="850" fg:w="298"/><text x="11.9677%" y="127.50">libs..</text></g><g><title>datoe_solver`__rdl_alloc (6 samples, 0.08%)</title><rect x="15.8258%" y="133" width="0.0827%" height="15" fill="rgb(221,10,30)" fg:x="1148" fg:w="6"/><text x="16.0758%" y="143.50"></text></g><g><title>datoe_solver`__rust_alloc (2 samples, 0.03%)</title><rect x="15.9085%" y="133" width="0.0276%" height="15" fill="rgb(210,229,1)" fg:x="1154" fg:w="2"/><text x="16.1585%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.19%)</title><rect x="15.9360%" y="133" width="0.1930%" height="15" fill="rgb(222,148,37)" fg:x="1156" fg:w="14"/><text x="16.1860%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.07%)</title><rect x="16.1290%" y="133" width="0.0689%" height="15" fill="rgb(234,67,33)" fg:x="1170" fg:w="5"/><text x="16.3790%" y="143.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (848 samples, 11.69%)</title><rect x="8.4092%" y="149" width="11.6901%" height="15" fill="rgb(247,98,35)" fg:x="610" fg:w="848"/><text x="8.6592%" y="159.50">datoe_solver`&lt;dat..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (283 samples, 3.90%)</title><rect x="16.1980%" y="133" width="3.9013%" height="15" fill="rgb(247,138,52)" fg:x="1175" fg:w="283"/><text x="16.4480%" y="143.50">libs..</text></g><g><title>datoe_solver`__rdl_alloc (8 samples, 0.11%)</title><rect x="20.0993%" y="149" width="0.1103%" height="15" fill="rgb(213,79,30)" fg:x="1458" fg:w="8"/><text x="20.3493%" y="159.50"></text></g><g><title>datoe_solver`__rust_alloc (2 samples, 0.03%)</title><rect x="20.2095%" y="149" width="0.0276%" height="15" fill="rgb(246,177,23)" fg:x="1466" fg:w="2"/><text x="20.4595%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.23%)</title><rect x="20.2371%" y="149" width="0.2344%" height="15" fill="rgb(230,62,27)" fg:x="1468" fg:w="17"/><text x="20.4871%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.04%)</title><rect x="20.4715%" y="149" width="0.0414%" height="15" fill="rgb(216,154,8)" fg:x="1485" fg:w="3"/><text x="20.7215%" y="159.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (1,289 samples, 17.77%)</title><rect x="6.8514%" y="165" width="17.7695%" height="15" fill="rgb(244,35,45)" fg:x="497" fg:w="1289"/><text x="7.1014%" y="175.50">datoe_solver`&lt;datoe_solver::..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (298 samples, 4.11%)</title><rect x="20.5128%" y="149" width="4.1081%" height="15" fill="rgb(251,115,12)" fg:x="1488" fg:w="298"/><text x="20.7628%" y="159.50">libs..</text></g><g><title>datoe_solver`__rdl_alloc (3 samples, 0.04%)</title><rect x="24.6209%" y="165" width="0.0414%" height="15" fill="rgb(240,54,50)" fg:x="1786" fg:w="3"/><text x="24.8709%" y="175.50"></text></g><g><title>datoe_solver`__rust_alloc (3 samples, 0.04%)</title><rect x="24.6623%" y="165" width="0.0414%" height="15" fill="rgb(233,84,52)" fg:x="1789" fg:w="3"/><text x="24.9123%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.34%)</title><rect x="24.7036%" y="165" width="0.3446%" height="15" fill="rgb(207,117,47)" fg:x="1792" fg:w="25"/><text x="24.9536%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.04%)</title><rect x="25.0482%" y="165" width="0.0414%" height="15" fill="rgb(249,43,39)" fg:x="1817" fg:w="3"/><text x="25.2982%" y="175.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (1,715 samples, 23.64%)</title><rect x="5.3074%" y="181" width="23.6421%" height="15" fill="rgb(209,38,44)" fg:x="385" fg:w="1715"/><text x="5.5574%" y="191.50">datoe_solver`&lt;datoe_solver::finder::at..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (280 samples, 3.86%)</title><rect x="25.0896%" y="165" width="3.8599%" height="15" fill="rgb(236,212,23)" fg:x="1820" fg:w="280"/><text x="25.3396%" y="175.50">libs..</text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.08%)</title><rect x="29.0460%" y="149" width="0.0827%" height="15" fill="rgb(242,79,21)" fg:x="2107" fg:w="6"/><text x="29.2960%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.08%)</title><rect x="29.0460%" y="133" width="0.0827%" height="15" fill="rgb(211,96,35)" fg:x="2107" fg:w="6"/><text x="29.2960%" y="143.50"></text></g><g><title>datoe_solver`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="29.1288%" y="149" width="0.0138%" height="15" fill="rgb(253,215,40)" fg:x="2113" fg:w="1"/><text x="29.3788%" y="159.50"></text></g><g><title>datoe_solver`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="29.1839%" y="117" width="0.0138%" height="15" fill="rgb(211,81,21)" fg:x="2117" fg:w="1"/><text x="29.4339%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="29.1839%" y="101" width="0.0138%" height="15" fill="rgb(208,190,38)" fg:x="2117" fg:w="1"/><text x="29.4339%" y="111.50"></text></g><g><title>datoe_solver`itertools::lazy_buffer::LazyBuffer&lt;I&gt;::get_next (5 samples, 0.07%)</title><rect x="29.1425%" y="149" width="0.0689%" height="15" fill="rgb(235,213,38)" fg:x="2114" fg:w="5"/><text x="29.3925%" y="159.50"></text></g><g><title>datoe_solver`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.06%)</title><rect x="29.1563%" y="133" width="0.0551%" height="15" fill="rgb(237,122,38)" fg:x="2115" fg:w="4"/><text x="29.4063%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="29.1977%" y="117" width="0.0138%" height="15" fill="rgb(244,218,35)" fg:x="2118" fg:w="1"/><text x="29.4477%" y="127.50"></text></g><g><title>datoe_solver`&lt;itertools::combinations_with_replacement::CombinationsWithReplacement&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.21%)</title><rect x="29.0185%" y="165" width="0.2068%" height="15" fill="rgb(240,68,47)" fg:x="2105" fg:w="15"/><text x="29.2685%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="29.2115%" y="149" width="0.0138%" height="15" fill="rgb(210,16,53)" fg:x="2119" fg:w="1"/><text x="29.4615%" y="159.50"></text></g><g><title>datoe_solver`&lt;itertools::adaptors::Product&lt;I,J&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.33%)</title><rect x="28.9495%" y="181" width="0.3309%" height="15" fill="rgb(235,124,12)" fg:x="2100" fg:w="24"/><text x="29.1995%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="29.2253%" y="165" width="0.0551%" height="15" fill="rgb(224,169,11)" fg:x="2120" fg:w="4"/><text x="29.4753%" y="175.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (160 samples, 2.21%)</title><rect x="29.7905%" y="165" width="2.2057%" height="15" fill="rgb(250,166,2)" fg:x="2161" fg:w="160"/><text x="30.0405%" y="175.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (128 samples, 1.76%)</title><rect x="30.2316%" y="149" width="1.7645%" height="15" fill="rgb(242,216,29)" fg:x="2193" fg:w="128"/><text x="30.4816%" y="159.50"></text></g><g><title>datoe_solver`__rdl_alloc (3 samples, 0.04%)</title><rect x="31.9961%" y="165" width="0.0414%" height="15" fill="rgb(230,116,27)" fg:x="2321" fg:w="3"/><text x="32.2461%" y="175.50"></text></g><g><title>datoe_solver`__rust_alloc (3 samples, 0.04%)</title><rect x="32.0375%" y="165" width="0.0414%" height="15" fill="rgb(228,99,48)" fg:x="2324" fg:w="3"/><text x="32.2875%" y="175.50"></text></g><g><title>datoe_solver`__rdl_realloc (1 samples, 0.01%)</title><rect x="32.1064%" y="133" width="0.0138%" height="15" fill="rgb(253,11,6)" fg:x="2329" fg:w="1"/><text x="32.3564%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.11%)</title><rect x="32.1202%" y="133" width="0.1103%" height="15" fill="rgb(247,143,39)" fg:x="2330" fg:w="8"/><text x="32.3702%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.07%)</title><rect x="32.2305%" y="133" width="0.0689%" height="15" fill="rgb(236,97,10)" fg:x="2338" fg:w="5"/><text x="32.4805%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.04%)</title><rect x="32.3408%" y="101" width="0.0414%" height="15" fill="rgb(233,208,19)" fg:x="2346" fg:w="3"/><text x="32.5908%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.15%)</title><rect x="32.4097%" y="85" width="0.1516%" height="15" fill="rgb(216,164,2)" fg:x="2351" fg:w="11"/><text x="32.6597%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="32.5476%" y="69" width="0.0138%" height="15" fill="rgb(220,129,5)" fg:x="2361" fg:w="1"/><text x="32.7976%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.08%)</title><rect x="32.5613%" y="85" width="0.0827%" height="15" fill="rgb(242,17,10)" fg:x="2362" fg:w="6"/><text x="32.8113%" y="95.50"></text></g><g><title>datoe_solver`alloc::raw_vec::finish_grow (47 samples, 0.65%)</title><rect x="32.1064%" y="149" width="0.6479%" height="15" fill="rgb(242,107,0)" fg:x="2329" fg:w="47"/><text x="32.3564%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (33 samples, 0.45%)</title><rect x="32.2994%" y="133" width="0.4549%" height="15" fill="rgb(251,28,31)" fg:x="2343" fg:w="33"/><text x="32.5494%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (32 samples, 0.44%)</title><rect x="32.3132%" y="117" width="0.4411%" height="15" fill="rgb(233,223,10)" fg:x="2344" fg:w="32"/><text x="32.5632%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (27 samples, 0.37%)</title><rect x="32.3821%" y="101" width="0.3722%" height="15" fill="rgb(215,21,27)" fg:x="2349" fg:w="27"/><text x="32.6321%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.11%)</title><rect x="32.6441%" y="85" width="0.1103%" height="15" fill="rgb(232,23,21)" fg:x="2368" fg:w="8"/><text x="32.8941%" y="95.50"></text></g><g><title>datoe_solver`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.69%)</title><rect x="32.0789%" y="165" width="0.6893%" height="15" fill="rgb(244,5,23)" fg:x="2327" fg:w="50"/><text x="32.3289%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="32.7543%" y="149" width="0.0138%" height="15" fill="rgb(226,81,46)" fg:x="2376" fg:w="1"/><text x="33.0043%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.12%)</title><rect x="32.7681%" y="165" width="0.1241%" height="15" fill="rgb(247,70,30)" fg:x="2377" fg:w="9"/><text x="33.0181%" y="175.50"></text></g><g><title>datoe_solver`&lt;itertools::combinations_with_replacement::CombinationsWithReplacement&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (263 samples, 3.63%)</title><rect x="29.2804%" y="181" width="3.6256%" height="15" fill="rgb(212,68,19)" fg:x="2124" fg:w="263"/><text x="29.5304%" y="191.50">dato..</text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="32.8922%" y="165" width="0.0138%" height="15" fill="rgb(240,187,13)" fg:x="2386" fg:w="1"/><text x="33.1422%" y="175.50"></text></g><g><title>datoe_solver`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="32.9060%" y="181" width="0.0138%" height="15" fill="rgb(223,113,26)" fg:x="2387" fg:w="1"/><text x="33.1560%" y="191.50"></text></g><g><title>datoe_solver`__rdl_alloc (6 samples, 0.08%)</title><rect x="32.9198%" y="181" width="0.0827%" height="15" fill="rgb(206,192,2)" fg:x="2388" fg:w="6"/><text x="33.1698%" y="191.50"></text></g><g><title>datoe_solver`__rdl_dealloc (9 samples, 0.12%)</title><rect x="33.0025%" y="181" width="0.1241%" height="15" fill="rgb(241,108,4)" fg:x="2394" fg:w="9"/><text x="33.2525%" y="191.50"></text></g><g><title>datoe_solver`alloc::vec::from_elem (4 samples, 0.06%)</title><rect x="33.1266%" y="181" width="0.0551%" height="15" fill="rgb(247,173,49)" fg:x="2403" fg:w="4"/><text x="33.3766%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.06%)</title><rect x="33.1266%" y="165" width="0.0551%" height="15" fill="rgb(224,114,35)" fg:x="2403" fg:w="4"/><text x="33.3766%" y="175.50"></text></g><g><title>datoe_solver`__rdl_dealloc (10 samples, 0.14%)</title><rect x="33.4298%" y="165" width="0.1379%" height="15" fill="rgb(245,159,27)" fg:x="2425" fg:w="10"/><text x="33.6798%" y="175.50"></text></g><g><title>datoe_solver`__rust_dealloc (2 samples, 0.03%)</title><rect x="33.5677%" y="165" width="0.0276%" height="15" fill="rgb(245,172,44)" fg:x="2435" fg:w="2"/><text x="33.8177%" y="175.50"></text></g><g><title>datoe_solver`__rdl_dealloc (8 samples, 0.11%)</title><rect x="33.9261%" y="149" width="0.1103%" height="15" fill="rgb(236,23,11)" fg:x="2461" fg:w="8"/><text x="34.1761%" y="159.50"></text></g><g><title>datoe_solver`__rust_dealloc (1 samples, 0.01%)</title><rect x="34.0364%" y="149" width="0.0138%" height="15" fill="rgb(205,117,38)" fg:x="2469" fg:w="1"/><text x="34.2864%" y="159.50"></text></g><g><title>datoe_solver`__rdl_dealloc (5 samples, 0.07%)</title><rect x="34.3535%" y="133" width="0.0689%" height="15" fill="rgb(237,72,25)" fg:x="2492" fg:w="5"/><text x="34.6035%" y="143.50"></text></g><g><title>datoe_solver`__rust_dealloc (3 samples, 0.04%)</title><rect x="34.4224%" y="133" width="0.0414%" height="15" fill="rgb(244,70,9)" fg:x="2497" fg:w="3"/><text x="34.6724%" y="143.50"></text></g><g><title>datoe_solver`__rdl_dealloc (2 samples, 0.03%)</title><rect x="34.8084%" y="117" width="0.0276%" height="15" fill="rgb(217,125,39)" fg:x="2525" fg:w="2"/><text x="35.0584%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (102 samples, 1.41%)</title><rect x="34.8360%" y="117" width="1.4061%" height="15" fill="rgb(235,36,10)" fg:x="2527" fg:w="102"/><text x="35.0860%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (78 samples, 1.08%)</title><rect x="35.1668%" y="101" width="1.0753%" height="15" fill="rgb(251,123,47)" fg:x="2551" fg:w="78"/><text x="35.4168%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="36.2421%" y="117" width="0.0138%" height="15" fill="rgb(221,13,13)" fg:x="2629" fg:w="1"/><text x="36.4921%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (264 samples, 3.64%)</title><rect x="36.2559%" y="117" width="3.6394%" height="15" fill="rgb(238,131,9)" fg:x="2630" fg:w="264"/><text x="36.5059%" y="127.50">libs..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.12%)</title><rect x="39.7712%" y="101" width="0.1241%" height="15" fill="rgb(211,50,8)" fg:x="2885" fg:w="9"/><text x="40.0212%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.23%)</title><rect x="39.8952%" y="117" width="0.2344%" height="15" fill="rgb(245,182,24)" fg:x="2894" fg:w="17"/><text x="40.1452%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (1 samples, 0.01%)</title><rect x="40.1296%" y="117" width="0.0138%" height="15" fill="rgb(242,14,37)" fg:x="2911" fg:w="1"/><text x="40.3796%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (414 samples, 5.71%)</title><rect x="34.4637%" y="133" width="5.7072%" height="15" fill="rgb(246,228,12)" fg:x="2500" fg:w="414"/><text x="34.7137%" y="143.50">datoe_s..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.03%)</title><rect x="40.1434%" y="117" width="0.0276%" height="15" fill="rgb(213,55,15)" fg:x="2912" fg:w="2"/><text x="40.3934%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (5 samples, 0.07%)</title><rect x="40.1709%" y="133" width="0.0689%" height="15" fill="rgb(209,9,3)" fg:x="2914" fg:w="5"/><text x="40.4209%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (412 samples, 5.68%)</title><rect x="40.2399%" y="133" width="5.6796%" height="15" fill="rgb(230,59,30)" fg:x="2919" fg:w="412"/><text x="40.4899%" y="143.50">libsyst..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (36 samples, 0.50%)</title><rect x="45.4232%" y="117" width="0.4963%" height="15" fill="rgb(209,121,21)" fg:x="3295" fg:w="36"/><text x="45.6732%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.44%)</title><rect x="45.9195%" y="133" width="0.4411%" height="15" fill="rgb(220,109,13)" fg:x="3331" fg:w="32"/><text x="46.1695%" y="143.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (4 samples, 0.06%)</title><rect x="46.3606%" y="133" width="0.0551%" height="15" fill="rgb(232,18,1)" fg:x="3363" fg:w="4"/><text x="46.6106%" y="143.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (900 samples, 12.41%)</title><rect x="34.0502%" y="149" width="12.4069%" height="15" fill="rgb(215,41,42)" fg:x="2470" fg:w="900"/><text x="34.3002%" y="159.50">datoe_solver`core::..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="46.4158%" y="133" width="0.0414%" height="15" fill="rgb(224,123,36)" fg:x="3367" fg:w="3"/><text x="46.6658%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (6 samples, 0.08%)</title><rect x="46.4571%" y="149" width="0.0827%" height="15" fill="rgb(240,125,3)" fg:x="3370" fg:w="6"/><text x="46.7071%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (470 samples, 6.48%)</title><rect x="46.5398%" y="149" width="6.4792%" height="15" fill="rgb(205,98,50)" fg:x="3376" fg:w="470"/><text x="46.7898%" y="159.50">libsyste..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (23 samples, 0.32%)</title><rect x="52.7020%" y="133" width="0.3171%" height="15" fill="rgb(205,185,37)" fg:x="3823" fg:w="23"/><text x="52.9520%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.43%)</title><rect x="53.0190%" y="149" width="0.4274%" height="15" fill="rgb(238,207,15)" fg:x="3846" fg:w="31"/><text x="53.2690%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (2 samples, 0.03%)</title><rect x="53.4464%" y="149" width="0.0276%" height="15" fill="rgb(213,199,42)" fg:x="3877" fg:w="2"/><text x="53.6964%" y="159.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.03%)</title><rect x="53.4739%" y="149" width="0.0276%" height="15" fill="rgb(235,201,11)" fg:x="3879" fg:w="2"/><text x="53.7239%" y="159.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (1,445 samples, 19.92%)</title><rect x="33.5953%" y="165" width="19.9200%" height="15" fill="rgb(207,46,11)" fg:x="2437" fg:w="1445"/><text x="33.8453%" y="175.50">datoe_solver`core::ptr::drop_in..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="53.5015%" y="149" width="0.0138%" height="15" fill="rgb(241,35,35)" fg:x="3881" fg:w="1"/><text x="53.7515%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (4 samples, 0.06%)</title><rect x="53.5153%" y="165" width="0.0551%" height="15" fill="rgb(243,32,47)" fg:x="3882" fg:w="4"/><text x="53.7653%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (342 samples, 4.71%)</title><rect x="53.5704%" y="165" width="4.7146%" height="15" fill="rgb(247,202,23)" fg:x="3886" fg:w="342"/><text x="53.8204%" y="175.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (21 samples, 0.29%)</title><rect x="57.9956%" y="149" width="0.2895%" height="15" fill="rgb(219,102,11)" fg:x="4207" fg:w="21"/><text x="58.2456%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.44%)</title><rect x="58.2851%" y="165" width="0.4411%" height="15" fill="rgb(243,110,44)" fg:x="4228" fg:w="32"/><text x="58.5351%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (7 samples, 0.10%)</title><rect x="58.7262%" y="165" width="0.0965%" height="15" fill="rgb(222,74,54)" fg:x="4260" fg:w="7"/><text x="58.9762%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="58.8227%" y="165" width="0.0138%" height="15" fill="rgb(216,99,12)" fg:x="4267" fg:w="1"/><text x="59.0727%" y="175.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (1,865 samples, 25.71%)</title><rect x="33.1817%" y="181" width="25.7100%" height="15" fill="rgb(226,22,26)" fg:x="2407" fg:w="1865"/><text x="33.4317%" y="191.50">datoe_solver`core::ptr::drop_in_place&lt;dat..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.06%)</title><rect x="58.8365%" y="165" width="0.0551%" height="15" fill="rgb(217,163,10)" fg:x="4268" fg:w="4"/><text x="59.0865%" y="175.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (73 samples, 1.01%)</title><rect x="59.2776%" y="165" width="1.0063%" height="15" fill="rgb(213,25,53)" fg:x="4300" fg:w="73"/><text x="59.5276%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.54%)</title><rect x="59.7463%" y="149" width="0.5376%" height="15" fill="rgb(252,105,26)" fg:x="4334" fg:w="39"/><text x="59.9963%" y="159.50"></text></g><g><title>datoe_solver`__rdl_alloc (2 samples, 0.03%)</title><rect x="60.2840%" y="165" width="0.0276%" height="15" fill="rgb(220,39,43)" fg:x="4373" fg:w="2"/><text x="60.5340%" y="175.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (140 samples, 1.93%)</title><rect x="60.9457%" y="149" width="1.9300%" height="15" fill="rgb(229,68,48)" fg:x="4421" fg:w="140"/><text x="61.1957%" y="159.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (69 samples, 0.95%)</title><rect x="61.9245%" y="133" width="0.9512%" height="15" fill="rgb(252,8,32)" fg:x="4492" fg:w="69"/><text x="62.1745%" y="143.50"></text></g><g><title>datoe_solver`__rust_alloc (1 samples, 0.01%)</title><rect x="62.8757%" y="149" width="0.0138%" height="15" fill="rgb(223,20,43)" fg:x="4561" fg:w="1"/><text x="63.1257%" y="159.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (148 samples, 2.04%)</title><rect x="63.6063%" y="133" width="2.0403%" height="15" fill="rgb(229,81,49)" fg:x="4614" fg:w="148"/><text x="63.8563%" y="143.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (63 samples, 0.87%)</title><rect x="64.7781%" y="117" width="0.8685%" height="15" fill="rgb(236,28,36)" fg:x="4699" fg:w="63"/><text x="65.0281%" y="127.50"></text></g><g><title>datoe_solver`__rdl_alloc (2 samples, 0.03%)</title><rect x="65.6465%" y="133" width="0.0276%" height="15" fill="rgb(249,185,26)" fg:x="4762" fg:w="2"/><text x="65.8965%" y="143.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (146 samples, 2.01%)</title><rect x="66.4047%" y="117" width="2.0127%" height="15" fill="rgb(249,174,33)" fg:x="4817" fg:w="146"/><text x="66.6547%" y="127.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (68 samples, 0.94%)</title><rect x="67.4800%" y="101" width="0.9374%" height="15" fill="rgb(233,201,37)" fg:x="4895" fg:w="68"/><text x="67.7300%" y="111.50"></text></g><g><title>datoe_solver`__rdl_alloc (5 samples, 0.07%)</title><rect x="68.4174%" y="117" width="0.0689%" height="15" fill="rgb(221,78,26)" fg:x="4963" fg:w="5"/><text x="68.6674%" y="127.50"></text></g><g><title>datoe_solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (158 samples, 2.18%)</title><rect x="68.9688%" y="101" width="2.1781%" height="15" fill="rgb(250,127,30)" fg:x="5003" fg:w="158"/><text x="69.2188%" y="111.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (74 samples, 1.02%)</title><rect x="70.1268%" y="85" width="1.0201%" height="15" fill="rgb(230,49,44)" fg:x="5087" fg:w="74"/><text x="70.3768%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.19%)</title><rect x="71.1470%" y="101" width="0.1930%" height="15" fill="rgb(229,67,23)" fg:x="5161" fg:w="14"/><text x="71.3970%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="71.3400%" y="101" width="0.0138%" height="15" fill="rgb(249,83,47)" fg:x="5175" fg:w="1"/><text x="71.5900%" y="111.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::add_funcs_rec (213 samples, 2.94%)</title><rect x="68.4864%" y="117" width="2.9363%" height="15" fill="rgb(215,43,3)" fg:x="4968" fg:w="213"/><text x="68.7364%" y="127.50">da..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.07%)</title><rect x="71.3537%" y="101" width="0.0689%" height="15" fill="rgb(238,154,13)" fg:x="5176" fg:w="5"/><text x="71.6037%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.15%)</title><rect x="71.4227%" y="117" width="0.1516%" height="15" fill="rgb(219,56,2)" fg:x="5181" fg:w="11"/><text x="71.6727%" y="127.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::add_funcs_rec (429 samples, 5.91%)</title><rect x="65.6741%" y="133" width="5.9140%" height="15" fill="rgb(233,0,4)" fg:x="4764" fg:w="429"/><text x="65.9241%" y="143.50">datoe_so..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="71.5743%" y="117" width="0.0138%" height="15" fill="rgb(235,30,7)" fg:x="5192" fg:w="1"/><text x="71.8243%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.14%)</title><rect x="71.5881%" y="133" width="0.1379%" height="15" fill="rgb(250,79,13)" fg:x="5193" fg:w="10"/><text x="71.8381%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.04%)</title><rect x="71.7259%" y="133" width="0.0414%" height="15" fill="rgb(211,146,34)" fg:x="5203" fg:w="3"/><text x="71.9759%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::add_funcs_rec (645 samples, 8.89%)</title><rect x="62.8894%" y="149" width="8.8916%" height="15" fill="rgb(228,22,38)" fg:x="4562" fg:w="645"/><text x="63.1394%" y="159.50">datoe_solver`..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="71.7673%" y="133" width="0.0138%" height="15" fill="rgb(235,168,5)" fg:x="5206" fg:w="1"/><text x="72.0173%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="71.7811%" y="149" width="0.0276%" height="15" fill="rgb(221,155,16)" fg:x="5207" fg:w="2"/><text x="72.0311%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="71.8087%" y="149" width="0.0138%" height="15" fill="rgb(215,215,53)" fg:x="5209" fg:w="1"/><text x="72.0587%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::add_funcs_rec (837 samples, 11.54%)</title><rect x="60.3116%" y="165" width="11.5385%" height="15" fill="rgb(223,4,10)" fg:x="4375" fg:w="837"/><text x="60.5616%" y="175.50">datoe_solver`dato..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="71.8224%" y="149" width="0.0276%" height="15" fill="rgb(234,103,6)" fg:x="5210" fg:w="2"/><text x="72.0724%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.07%)</title><rect x="71.8500%" y="165" width="0.0689%" height="15" fill="rgb(227,97,0)" fg:x="5212" fg:w="5"/><text x="72.1000%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::add_funcs_rec (947 samples, 13.05%)</title><rect x="58.8916%" y="181" width="13.0549%" height="15" fill="rgb(234,150,53)" fg:x="4272" fg:w="947"/><text x="59.1416%" y="191.50">datoe_solver`datoe_s..</text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="71.9189%" y="165" width="0.0276%" height="15" fill="rgb(228,201,54)" fg:x="5217" fg:w="2"/><text x="72.1689%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::count_atoms (29 samples, 0.40%)</title><rect x="71.9465%" y="181" width="0.3998%" height="15" fill="rgb(222,22,37)" fg:x="5219" fg:w="29"/><text x="72.1965%" y="191.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::count_atoms (22 samples, 0.30%)</title><rect x="72.0430%" y="165" width="0.3033%" height="15" fill="rgb(237,53,32)" fg:x="5226" fg:w="22"/><text x="72.2930%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::count_atoms (12 samples, 0.17%)</title><rect x="72.1809%" y="149" width="0.1654%" height="15" fill="rgb(233,25,53)" fg:x="5236" fg:w="12"/><text x="72.4309%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::count_atoms (10 samples, 0.14%)</title><rect x="72.2084%" y="133" width="0.1379%" height="15" fill="rgb(210,40,34)" fg:x="5238" fg:w="10"/><text x="72.4584%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::count_atoms (5 samples, 0.07%)</title><rect x="72.2774%" y="117" width="0.0689%" height="15" fill="rgb(241,220,44)" fg:x="5243" fg:w="5"/><text x="72.5274%" y="127.50"></text></g><g><title>datoe_solver`datoe_solver::finder::function::Function::apply (45 samples, 0.62%)</title><rect x="75.0620%" y="101" width="0.6203%" height="15" fill="rgb(235,28,35)" fg:x="5445" fg:w="45"/><text x="75.3120%" y="111.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::eval (82 samples, 1.13%)</title><rect x="74.5933%" y="117" width="1.1304%" height="15" fill="rgb(210,56,17)" fg:x="5411" fg:w="82"/><text x="74.8433%" y="127.50"></text></g><g><title>libsystem_m.dylib`trunc (3 samples, 0.04%)</title><rect x="75.6824%" y="101" width="0.0414%" height="15" fill="rgb(224,130,29)" fg:x="5490" fg:w="3"/><text x="75.9324%" y="111.50"></text></g><g><title>datoe_solver`datoe_solver::finder::function::Function::apply (30 samples, 0.41%)</title><rect x="75.7237%" y="117" width="0.4136%" height="15" fill="rgb(235,212,8)" fg:x="5493" fg:w="30"/><text x="75.9737%" y="127.50"></text></g><g><title>datoe_solver`datoe_solver::finder::operation::Operation::apply (29 samples, 0.40%)</title><rect x="76.1373%" y="117" width="0.3998%" height="15" fill="rgb(223,33,50)" fg:x="5523" fg:w="29"/><text x="76.3873%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff81ba19aa0 (34 samples, 0.47%)</title><rect x="76.5371%" y="117" width="0.4687%" height="15" fill="rgb(219,149,13)" fg:x="5552" fg:w="34"/><text x="76.7871%" y="127.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::eval (216 samples, 2.98%)</title><rect x="74.1108%" y="133" width="2.9777%" height="15" fill="rgb(250,156,29)" fg:x="5376" fg:w="216"/><text x="74.3608%" y="143.50">dat..</text></g><g><title>libsystem_m.dylib`trunc (6 samples, 0.08%)</title><rect x="77.0058%" y="117" width="0.0827%" height="15" fill="rgb(216,193,19)" fg:x="5586" fg:w="6"/><text x="77.2558%" y="127.50"></text></g><g><title>datoe_solver`datoe_solver::finder::function::Function::apply (13 samples, 0.18%)</title><rect x="77.0885%" y="133" width="0.1792%" height="15" fill="rgb(216,135,14)" fg:x="5592" fg:w="13"/><text x="77.3385%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::operation::Operation::apply (24 samples, 0.33%)</title><rect x="77.2677%" y="133" width="0.3309%" height="15" fill="rgb(241,47,5)" fg:x="5605" fg:w="24"/><text x="77.5177%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff81ba19aa0 (61 samples, 0.84%)</title><rect x="77.5986%" y="133" width="0.8409%" height="15" fill="rgb(233,42,35)" fg:x="5629" fg:w="61"/><text x="77.8486%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::eval (353 samples, 4.87%)</title><rect x="73.5870%" y="149" width="4.8663%" height="15" fill="rgb(231,13,6)" fg:x="5338" fg:w="353"/><text x="73.8370%" y="159.50">datoe_..</text></g><g><title>libsystem_m.dylib`trunc (1 samples, 0.01%)</title><rect x="78.4395%" y="133" width="0.0138%" height="15" fill="rgb(207,181,40)" fg:x="5690" fg:w="1"/><text x="78.6895%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::function::Function::apply (12 samples, 0.17%)</title><rect x="78.4533%" y="149" width="0.1654%" height="15" fill="rgb(254,173,49)" fg:x="5691" fg:w="12"/><text x="78.7033%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::operation::Operation::apply (7 samples, 0.10%)</title><rect x="78.6187%" y="149" width="0.0965%" height="15" fill="rgb(221,1,38)" fg:x="5703" fg:w="7"/><text x="78.8687%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::eval (460 samples, 6.34%)</title><rect x="72.8701%" y="165" width="6.3413%" height="15" fill="rgb(206,124,46)" fg:x="5286" fg:w="460"/><text x="73.1201%" y="175.50">datoe_so..</text></g><g><title>libsystem_m.dylib`0x00007ff81ba19aa0 (36 samples, 0.50%)</title><rect x="78.7152%" y="149" width="0.4963%" height="15" fill="rgb(249,21,11)" fg:x="5710" fg:w="36"/><text x="78.9652%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::function::Function::apply (6 samples, 0.08%)</title><rect x="79.2115%" y="165" width="0.0827%" height="15" fill="rgb(222,201,40)" fg:x="5746" fg:w="6"/><text x="79.4615%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::operation::Operation::apply (6 samples, 0.08%)</title><rect x="79.2942%" y="165" width="0.0827%" height="15" fill="rgb(235,61,29)" fg:x="5752" fg:w="6"/><text x="79.5442%" y="175.50"></text></g><g><title>libsystem_m.dylib`0x00007ff81ba19aa0 (5 samples, 0.07%)</title><rect x="79.3769%" y="165" width="0.0689%" height="15" fill="rgb(219,207,3)" fg:x="5758" fg:w="5"/><text x="79.6269%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::eval (516 samples, 7.11%)</title><rect x="72.3463%" y="181" width="7.1133%" height="15" fill="rgb(222,56,46)" fg:x="5248" fg:w="516"/><text x="72.5963%" y="191.50">datoe_solv..</text></g><g><title>libsystem_m.dylib`trunc (1 samples, 0.01%)</title><rect x="79.4458%" y="165" width="0.0138%" height="15" fill="rgb(239,76,54)" fg:x="5763" fg:w="1"/><text x="79.6958%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (4 samples, 0.06%)</title><rect x="79.4596%" y="181" width="0.0551%" height="15" fill="rgb(231,124,27)" fg:x="5764" fg:w="4"/><text x="79.7096%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.37%)</title><rect x="79.5148%" y="181" width="0.3722%" height="15" fill="rgb(249,195,6)" fg:x="5768" fg:w="27"/><text x="79.7648%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (342 samples, 4.71%)</title><rect x="79.8870%" y="181" width="4.7146%" height="15" fill="rgb(237,174,47)" fg:x="5795" fg:w="342"/><text x="80.1370%" y="191.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (30 samples, 0.41%)</title><rect x="84.1880%" y="165" width="0.4136%" height="15" fill="rgb(206,201,31)" fg:x="6107" fg:w="30"/><text x="84.4380%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.39%)</title><rect x="84.6016%" y="181" width="0.3860%" height="15" fill="rgb(231,57,52)" fg:x="6137" fg:w="28"/><text x="84.8516%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="84.9876%" y="181" width="0.0276%" height="15" fill="rgb(248,177,22)" fg:x="6165" fg:w="2"/><text x="85.2376%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.07%)</title><rect x="85.0152%" y="181" width="0.0689%" height="15" fill="rgb(215,211,37)" fg:x="6167" fg:w="5"/><text x="85.2652%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (5 samples, 0.07%)</title><rect x="85.0841%" y="181" width="0.0689%" height="15" fill="rgb(241,128,51)" fg:x="6172" fg:w="5"/><text x="85.3341%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="85.1530%" y="181" width="0.0138%" height="15" fill="rgb(227,165,31)" fg:x="6177" fg:w="1"/><text x="85.4030%" y="191.50"></text></g><g><title>datoe_solver`datoe_solver::finder::Finder::find_solutions (5,813 samples, 80.14%)</title><rect x="5.0455%" y="197" width="80.1351%" height="15" fill="rgb(228,167,24)" fg:x="366" fg:w="5813"/><text x="5.2955%" y="207.50">datoe_solver`datoe_solver::finder::Finder::find_solutions</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="85.1668%" y="181" width="0.0138%" height="15" fill="rgb(228,143,12)" fg:x="6178" fg:w="1"/><text x="85.4168%" y="191.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;datoe_solver::finder::atom::Atom&gt;&gt; (1 samples, 0.01%)</title><rect x="85.1806%" y="181" width="0.0138%" height="15" fill="rgb(249,149,8)" fg:x="6179" fg:w="1"/><text x="85.4306%" y="191.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="86.9038%" y="117" width="0.0551%" height="15" fill="rgb(243,35,44)" fg:x="6304" fg:w="4"/><text x="87.1538%" y="127.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (131 samples, 1.81%)</title><rect x="86.3799%" y="133" width="1.8059%" height="15" fill="rgb(246,89,9)" fg:x="6266" fg:w="131"/><text x="86.6299%" y="143.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (89 samples, 1.23%)</title><rect x="86.9589%" y="117" width="1.2269%" height="15" fill="rgb(233,213,13)" fg:x="6308" fg:w="89"/><text x="87.2089%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (33 samples, 0.45%)</title><rect x="87.7309%" y="101" width="0.4549%" height="15" fill="rgb(233,141,41)" fg:x="6364" fg:w="33"/><text x="87.9809%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (16 samples, 0.22%)</title><rect x="87.9653%" y="85" width="0.2206%" height="15" fill="rgb(239,167,4)" fg:x="6381" fg:w="16"/><text x="88.2153%" y="95.50"></text></g><g><title>datoe_solver`__rdl_alloc (1 samples, 0.01%)</title><rect x="88.1858%" y="133" width="0.0138%" height="15" fill="rgb(209,217,16)" fg:x="6397" fg:w="1"/><text x="88.4358%" y="143.50"></text></g><g><title>datoe_solver`__rust_alloc (1 samples, 0.01%)</title><rect x="88.1996%" y="133" width="0.0138%" height="15" fill="rgb(219,88,35)" fg:x="6398" fg:w="1"/><text x="88.4496%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="88.2134%" y="133" width="0.0138%" height="15" fill="rgb(220,193,23)" fg:x="6399" fg:w="1"/><text x="88.4634%" y="143.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (226 samples, 3.12%)</title><rect x="86.0491%" y="149" width="3.1155%" height="15" fill="rgb(230,90,52)" fg:x="6242" fg:w="226"/><text x="86.2991%" y="159.50">dat..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (68 samples, 0.94%)</title><rect x="88.2272%" y="133" width="0.9374%" height="15" fill="rgb(252,106,19)" fg:x="6400" fg:w="68"/><text x="88.4772%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (14 samples, 0.19%)</title><rect x="88.9716%" y="117" width="0.1930%" height="15" fill="rgb(206,74,20)" fg:x="6454" fg:w="14"/><text x="89.2216%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.10%)</title><rect x="89.0681%" y="101" width="0.0965%" height="15" fill="rgb(230,138,44)" fg:x="6461" fg:w="7"/><text x="89.3181%" y="111.50"></text></g><g><title>datoe_solver`__rdl_alloc (1 samples, 0.01%)</title><rect x="89.1646%" y="149" width="0.0138%" height="15" fill="rgb(235,182,43)" fg:x="6468" fg:w="1"/><text x="89.4146%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.07%)</title><rect x="89.1784%" y="149" width="0.0689%" height="15" fill="rgb(242,16,51)" fg:x="6469" fg:w="5"/><text x="89.4284%" y="159.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (337 samples, 4.65%)</title><rect x="85.6631%" y="165" width="4.6457%" height="15" fill="rgb(248,9,4)" fg:x="6214" fg:w="337"/><text x="85.9131%" y="175.50">datoe..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (77 samples, 1.06%)</title><rect x="89.2473%" y="149" width="1.0615%" height="15" fill="rgb(210,31,22)" fg:x="6474" fg:w="77"/><text x="89.4973%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (32 samples, 0.44%)</title><rect x="89.8677%" y="133" width="0.4411%" height="15" fill="rgb(239,54,39)" fg:x="6519" fg:w="32"/><text x="90.1177%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (21 samples, 0.29%)</title><rect x="90.0193%" y="117" width="0.2895%" height="15" fill="rgb(230,99,41)" fg:x="6530" fg:w="21"/><text x="90.2693%" y="127.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="90.8878%" y="101" width="0.0551%" height="15" fill="rgb(253,106,12)" fg:x="6593" fg:w="4"/><text x="91.1378%" y="111.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (46 samples, 0.63%)</title><rect x="90.7361%" y="117" width="0.6341%" height="15" fill="rgb(213,46,41)" fg:x="6582" fg:w="46"/><text x="90.9861%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.43%)</title><rect x="90.9429%" y="101" width="0.4274%" height="15" fill="rgb(215,133,35)" fg:x="6597" fg:w="31"/><text x="91.1929%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.10%)</title><rect x="91.2738%" y="85" width="0.0965%" height="15" fill="rgb(213,28,5)" fg:x="6621" fg:w="7"/><text x="91.5238%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.10%)</title><rect x="91.2738%" y="69" width="0.0965%" height="15" fill="rgb(215,77,49)" fg:x="6621" fg:w="7"/><text x="91.5238%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="91.3427%" y="53" width="0.0276%" height="15" fill="rgb(248,100,22)" fg:x="6626" fg:w="2"/><text x="91.5927%" y="63.50"></text></g><g><title>datoe_solver`__rdl_alloc (1 samples, 0.01%)</title><rect x="91.3703%" y="117" width="0.0138%" height="15" fill="rgb(208,67,9)" fg:x="6628" fg:w="1"/><text x="91.6203%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="91.3841%" y="117" width="0.0551%" height="15" fill="rgb(219,133,21)" fg:x="6629" fg:w="4"/><text x="91.6341%" y="127.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (110 samples, 1.52%)</title><rect x="90.5018%" y="133" width="1.5164%" height="15" fill="rgb(246,46,29)" fg:x="6565" fg:w="110"/><text x="90.7518%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (42 samples, 0.58%)</title><rect x="91.4392%" y="117" width="0.5790%" height="15" fill="rgb(246,185,52)" fg:x="6633" fg:w="42"/><text x="91.6892%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.12%)</title><rect x="91.8941%" y="101" width="0.1241%" height="15" fill="rgb(252,136,11)" fg:x="6666" fg:w="9"/><text x="92.1441%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (9 samples, 0.12%)</title><rect x="91.8941%" y="85" width="0.1241%" height="15" fill="rgb(219,138,53)" fg:x="6666" fg:w="9"/><text x="92.1441%" y="95.50"></text></g><g><title>datoe_solver`__rdl_alloc (1 samples, 0.01%)</title><rect x="92.0182%" y="133" width="0.0138%" height="15" fill="rgb(211,51,23)" fg:x="6675" fg:w="1"/><text x="92.2682%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="92.0320%" y="133" width="0.0551%" height="15" fill="rgb(247,221,28)" fg:x="6676" fg:w="4"/><text x="92.2820%" y="143.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (164 samples, 2.26%)</title><rect x="90.3639%" y="149" width="2.2608%" height="15" fill="rgb(251,222,45)" fg:x="6555" fg:w="164"/><text x="90.6139%" y="159.50">d..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.54%)</title><rect x="92.0871%" y="133" width="0.5376%" height="15" fill="rgb(217,162,53)" fg:x="6680" fg:w="39"/><text x="92.3371%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (8 samples, 0.11%)</title><rect x="92.5145%" y="117" width="0.1103%" height="15" fill="rgb(229,93,14)" fg:x="6711" fg:w="8"/><text x="92.7645%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.11%)</title><rect x="92.5145%" y="101" width="0.1103%" height="15" fill="rgb(209,67,49)" fg:x="6711" fg:w="8"/><text x="92.7645%" y="111.50"></text></g><g><title>datoe_solver`__rdl_alloc (1 samples, 0.01%)</title><rect x="92.6248%" y="149" width="0.0138%" height="15" fill="rgb(213,87,29)" fg:x="6719" fg:w="1"/><text x="92.8748%" y="159.50"></text></g><g><title>datoe_solver`__rust_alloc (1 samples, 0.01%)</title><rect x="92.6385%" y="149" width="0.0138%" height="15" fill="rgb(205,151,52)" fg:x="6720" fg:w="1"/><text x="92.8885%" y="159.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (6 samples, 0.08%)</title><rect x="92.6523%" y="117" width="0.0827%" height="15" fill="rgb(253,215,39)" fg:x="6721" fg:w="6"/><text x="92.9023%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.08%)</title><rect x="92.6523%" y="101" width="0.0827%" height="15" fill="rgb(221,220,41)" fg:x="6721" fg:w="6"/><text x="92.9023%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.07%)</title><rect x="92.7350%" y="117" width="0.0689%" height="15" fill="rgb(218,133,21)" fg:x="6727" fg:w="5"/><text x="92.9850%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (13 samples, 0.18%)</title><rect x="92.6523%" y="133" width="0.1792%" height="15" fill="rgb(221,193,43)" fg:x="6721" fg:w="13"/><text x="92.9023%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.03%)</title><rect x="92.8040%" y="117" width="0.0276%" height="15" fill="rgb(240,128,52)" fg:x="6732" fg:w="2"/><text x="93.0540%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.03%)</title><rect x="92.8040%" y="101" width="0.0276%" height="15" fill="rgb(253,114,12)" fg:x="6732" fg:w="2"/><text x="93.0540%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="92.8040%" y="85" width="0.0276%" height="15" fill="rgb(215,223,47)" fg:x="6732" fg:w="2"/><text x="93.0540%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.08%)</title><rect x="92.8315%" y="133" width="0.0827%" height="15" fill="rgb(248,225,23)" fg:x="6734" fg:w="6"/><text x="93.0815%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="92.9143%" y="133" width="0.0138%" height="15" fill="rgb(250,108,0)" fg:x="6740" fg:w="1"/><text x="93.1643%" y="143.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (25 samples, 0.34%)</title><rect x="92.6523%" y="149" width="0.3446%" height="15" fill="rgb(228,208,7)" fg:x="6721" fg:w="25"/><text x="92.9023%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (5 samples, 0.07%)</title><rect x="92.9280%" y="133" width="0.0689%" height="15" fill="rgb(244,45,10)" fg:x="6741" fg:w="5"/><text x="93.1780%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (5 samples, 0.07%)</title><rect x="92.9280%" y="117" width="0.0689%" height="15" fill="rgb(207,125,25)" fg:x="6741" fg:w="5"/><text x="93.1780%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.06%)</title><rect x="92.9418%" y="101" width="0.0551%" height="15" fill="rgb(210,195,18)" fg:x="6742" fg:w="4"/><text x="93.1918%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="92.9970%" y="149" width="0.0138%" height="15" fill="rgb(249,80,12)" fg:x="6746" fg:w="1"/><text x="93.2470%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="93.0108%" y="149" width="0.0551%" height="15" fill="rgb(221,65,9)" fg:x="6747" fg:w="4"/><text x="93.2608%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="93.0521%" y="133" width="0.0138%" height="15" fill="rgb(235,49,36)" fg:x="6750" fg:w="1"/><text x="93.3021%" y="143.50"></text></g><g><title>datoe_solver`&lt;itertools::adaptors::Product&lt;I,J&gt; as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 2.77%)</title><rect x="90.3088%" y="165" width="2.7709%" height="15" fill="rgb(225,32,20)" fg:x="6551" fg:w="201"/><text x="90.5588%" y="175.50">da..</text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="93.0659%" y="149" width="0.0138%" height="15" fill="rgb(215,141,46)" fg:x="6751" fg:w="1"/><text x="93.3159%" y="159.50"></text></g><g><title>datoe_solver`__rdl_dealloc (1 samples, 0.01%)</title><rect x="93.0797%" y="165" width="0.0138%" height="15" fill="rgb(250,160,47)" fg:x="6752" fg:w="1"/><text x="93.3297%" y="175.50"></text></g><g><title>datoe_solver`__rust_dealloc (1 samples, 0.01%)</title><rect x="93.0935%" y="165" width="0.0138%" height="15" fill="rgb(216,222,40)" fg:x="6753" fg:w="1"/><text x="93.3435%" y="175.50"></text></g><g><title>datoe_solver`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="93.1073%" y="165" width="0.0138%" height="15" fill="rgb(234,217,39)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="175.50"></text></g><g><title>datoe_solver`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="93.1073%" y="149" width="0.0138%" height="15" fill="rgb(207,178,40)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="93.1073%" y="133" width="0.0138%" height="15" fill="rgb(221,136,13)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="93.1073%" y="117" width="0.0138%" height="15" fill="rgb(249,199,10)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="93.1073%" y="101" width="0.0138%" height="15" fill="rgb(249,222,13)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="93.1073%" y="85" width="0.0138%" height="15" fill="rgb(244,185,38)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="93.1073%" y="69" width="0.0138%" height="15" fill="rgb(236,202,9)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.01%)</title><rect x="93.1073%" y="53" width="0.0138%" height="15" fill="rgb(250,229,37)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.01%)</title><rect x="93.1073%" y="37" width="0.0138%" height="15" fill="rgb(206,174,23)" fg:x="6754" fg:w="1"/><text x="93.3573%" y="47.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (14 samples, 0.19%)</title><rect x="93.1486%" y="133" width="0.1930%" height="15" fill="rgb(211,33,43)" fg:x="6757" fg:w="14"/><text x="93.3986%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.19%)</title><rect x="93.1486%" y="117" width="0.1930%" height="15" fill="rgb(245,58,50)" fg:x="6757" fg:w="14"/><text x="93.3986%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="93.3278%" y="101" width="0.0138%" height="15" fill="rgb(244,68,36)" fg:x="6770" fg:w="1"/><text x="93.5778%" y="111.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (42 samples, 0.58%)</title><rect x="93.1348%" y="149" width="0.5790%" height="15" fill="rgb(232,229,15)" fg:x="6756" fg:w="42"/><text x="93.3848%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.37%)</title><rect x="93.3416%" y="133" width="0.3722%" height="15" fill="rgb(254,30,23)" fg:x="6771" fg:w="27"/><text x="93.5916%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="93.6862%" y="117" width="0.0276%" height="15" fill="rgb(235,160,14)" fg:x="6796" fg:w="2"/><text x="93.9362%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.37%)</title><rect x="93.7138%" y="149" width="0.3722%" height="15" fill="rgb(212,155,44)" fg:x="6798" fg:w="27"/><text x="93.9638%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="94.0447%" y="133" width="0.0414%" height="15" fill="rgb(226,2,50)" fg:x="6822" fg:w="3"/><text x="94.2947%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.04%)</title><rect x="94.0860%" y="149" width="0.0414%" height="15" fill="rgb(234,177,6)" fg:x="6825" fg:w="3"/><text x="94.3360%" y="159.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (74 samples, 1.02%)</title><rect x="93.1210%" y="165" width="1.0201%" height="15" fill="rgb(217,24,9)" fg:x="6755" fg:w="74"/><text x="93.3710%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (1 samples, 0.01%)</title><rect x="94.1274%" y="149" width="0.0138%" height="15" fill="rgb(220,13,46)" fg:x="6828" fg:w="1"/><text x="94.3774%" y="159.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.3204%" y="117" width="0.0138%" height="15" fill="rgb(239,221,27)" fg:x="6842" fg:w="1"/><text x="94.5704%" y="127.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (12 samples, 0.17%)</title><rect x="94.2928%" y="133" width="0.1654%" height="15" fill="rgb(222,198,25)" fg:x="6840" fg:w="12"/><text x="94.5428%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.12%)</title><rect x="94.3342%" y="117" width="0.1241%" height="15" fill="rgb(211,99,13)" fg:x="6843" fg:w="9"/><text x="94.5842%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.04%)</title><rect x="94.4169%" y="101" width="0.0414%" height="15" fill="rgb(232,111,31)" fg:x="6849" fg:w="3"/><text x="94.6669%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.03%)</title><rect x="94.4307%" y="85" width="0.0276%" height="15" fill="rgb(245,82,37)" fg:x="6850" fg:w="2"/><text x="94.6807%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="94.4582%" y="133" width="0.0138%" height="15" fill="rgb(227,149,46)" fg:x="6852" fg:w="1"/><text x="94.7082%" y="143.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (28 samples, 0.39%)</title><rect x="94.1963%" y="149" width="0.3860%" height="15" fill="rgb(218,36,50)" fg:x="6833" fg:w="28"/><text x="94.4463%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.11%)</title><rect x="94.4720%" y="133" width="0.1103%" height="15" fill="rgb(226,80,48)" fg:x="6853" fg:w="8"/><text x="94.7220%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="94.5685%" y="117" width="0.0138%" height="15" fill="rgb(238,224,15)" fg:x="6860" fg:w="1"/><text x="94.8185%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="94.5685%" y="101" width="0.0138%" height="15" fill="rgb(241,136,10)" fg:x="6860" fg:w="1"/><text x="94.8185%" y="111.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="94.5823%" y="117" width="0.0551%" height="15" fill="rgb(208,32,45)" fg:x="6861" fg:w="4"/><text x="94.8323%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="94.6099%" y="101" width="0.0276%" height="15" fill="rgb(207,135,9)" fg:x="6863" fg:w="2"/><text x="94.8599%" y="111.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (6 samples, 0.08%)</title><rect x="94.5823%" y="133" width="0.0827%" height="15" fill="rgb(206,86,44)" fg:x="6861" fg:w="6"/><text x="94.8323%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="94.6374%" y="117" width="0.0276%" height="15" fill="rgb(245,177,15)" fg:x="6865" fg:w="2"/><text x="94.8874%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="94.6512%" y="101" width="0.0138%" height="15" fill="rgb(206,64,50)" fg:x="6866" fg:w="1"/><text x="94.9012%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="94.6512%" y="85" width="0.0138%" height="15" fill="rgb(234,36,40)" fg:x="6866" fg:w="1"/><text x="94.9012%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="94.6650%" y="133" width="0.0138%" height="15" fill="rgb(213,64,8)" fg:x="6867" fg:w="1"/><text x="94.9150%" y="143.50"></text></g><g><title>datoe_solver`&lt;itertools::adaptors::Product&lt;I,J&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.11%)</title><rect x="94.5823%" y="149" width="0.1103%" height="15" fill="rgb(210,75,36)" fg:x="6861" fg:w="8"/><text x="94.8323%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="94.6788%" y="133" width="0.0138%" height="15" fill="rgb(229,88,21)" fg:x="6868" fg:w="1"/><text x="94.9288%" y="143.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (1 samples, 0.01%)</title><rect x="94.6926%" y="133" width="0.0138%" height="15" fill="rgb(252,204,47)" fg:x="6869" fg:w="1"/><text x="94.9426%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="94.6926%" y="117" width="0.0138%" height="15" fill="rgb(208,77,27)" fg:x="6869" fg:w="1"/><text x="94.9426%" y="127.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;datoe_solver::finder::atom::Atom&gt; (7 samples, 0.10%)</title><rect x="94.6926%" y="149" width="0.0965%" height="15" fill="rgb(221,76,26)" fg:x="6869" fg:w="7"/><text x="94.9426%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.08%)</title><rect x="94.7064%" y="133" width="0.0827%" height="15" fill="rgb(225,139,18)" fg:x="6870" fg:w="6"/><text x="94.9564%" y="143.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="94.7891%" y="133" width="0.0414%" height="15" fill="rgb(230,137,11)" fg:x="6876" fg:w="3"/><text x="95.0391%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="94.7891%" y="117" width="0.0414%" height="15" fill="rgb(212,28,1)" fg:x="6876" fg:w="3"/><text x="95.0391%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.03%)</title><rect x="94.8029%" y="101" width="0.0276%" height="15" fill="rgb(248,164,17)" fg:x="6877" fg:w="2"/><text x="95.0529%" y="111.50"></text></g><g><title>datoe_solver`&lt;itertools::adaptors::Product&lt;I,J&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="94.8304%" y="133" width="0.0138%" height="15" fill="rgb(222,171,42)" fg:x="6879" fg:w="1"/><text x="95.0804%" y="143.50"></text></g><g><title>datoe_solver`&lt;datoe_solver::finder::atom::Atom as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.8304%" y="117" width="0.0138%" height="15" fill="rgb(243,84,45)" fg:x="6879" fg:w="1"/><text x="95.0804%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="94.8304%" y="101" width="0.0138%" height="15" fill="rgb(252,49,23)" fg:x="6879" fg:w="1"/><text x="95.0804%" y="111.50"></text></g><g><title>datoe_solver`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="94.8442%" y="133" width="0.0138%" height="15" fill="rgb(215,19,7)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="143.50"></text></g><g><title>datoe_solver`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="94.8442%" y="117" width="0.0138%" height="15" fill="rgb(238,81,41)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="94.8442%" y="101" width="0.0138%" height="15" fill="rgb(210,199,37)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="94.8442%" y="85" width="0.0138%" height="15" fill="rgb(244,192,49)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="94.8442%" y="69" width="0.0138%" height="15" fill="rgb(226,211,11)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="94.8442%" y="53" width="0.0138%" height="15" fill="rgb(236,162,54)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="94.8442%" y="37" width="0.0138%" height="15" fill="rgb(220,229,9)" fg:x="6880" fg:w="1"/><text x="95.0942%" y="47.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::new_express (1 samples, 0.01%)</title><rect x="94.8580%" y="133" width="0.0138%" height="15" fill="rgb(250,87,22)" fg:x="6881" fg:w="1"/><text x="95.1080%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="94.8580%" y="117" width="0.0138%" height="15" fill="rgb(239,43,17)" fg:x="6881" fg:w="1"/><text x="95.1080%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="94.8580%" y="101" width="0.0138%" height="15" fill="rgb(231,177,25)" fg:x="6881" fg:w="1"/><text x="95.1080%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="94.8580%" y="85" width="0.0138%" height="15" fill="rgb(219,179,1)" fg:x="6881" fg:w="1"/><text x="95.1080%" y="95.50"></text></g><g><title>datoe_solver`datoe_solver::finder::Finder::create_atoms (8 samples, 0.11%)</title><rect x="94.7891%" y="149" width="0.1103%" height="15" fill="rgb(238,219,53)" fg:x="6876" fg:w="8"/><text x="95.0391%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="94.8718%" y="133" width="0.0276%" height="15" fill="rgb(232,167,36)" fg:x="6882" fg:w="2"/><text x="95.1218%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::new_express (9 samples, 0.12%)</title><rect x="94.8994%" y="149" width="0.1241%" height="15" fill="rgb(244,19,51)" fg:x="6884" fg:w="9"/><text x="95.1494%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.10%)</title><rect x="94.9269%" y="133" width="0.0965%" height="15" fill="rgb(224,6,22)" fg:x="6886" fg:w="7"/><text x="95.1769%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.06%)</title><rect x="94.9683%" y="117" width="0.0551%" height="15" fill="rgb(224,145,5)" fg:x="6889" fg:w="4"/><text x="95.2183%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.04%)</title><rect x="94.9821%" y="101" width="0.0414%" height="15" fill="rgb(234,130,49)" fg:x="6890" fg:w="3"/><text x="95.2321%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="95.0234%" y="149" width="0.0138%" height="15" fill="rgb(254,6,2)" fg:x="6893" fg:w="1"/><text x="95.2734%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::Finder::create_atoms (66 samples, 0.91%)</title><rect x="94.1412%" y="165" width="0.9098%" height="15" fill="rgb(208,96,46)" fg:x="6829" fg:w="66"/><text x="94.3912%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="95.0372%" y="149" width="0.0138%" height="15" fill="rgb(239,3,39)" fg:x="6894" fg:w="1"/><text x="95.2872%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::new_express (110 samples, 1.52%)</title><rect x="95.0510%" y="165" width="1.5164%" height="15" fill="rgb(233,210,1)" fg:x="6895" fg:w="110"/><text x="95.3010%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (73 samples, 1.01%)</title><rect x="95.5611%" y="149" width="1.0063%" height="15" fill="rgb(244,137,37)" fg:x="6932" fg:w="73"/><text x="95.8111%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (33 samples, 0.45%)</title><rect x="96.1125%" y="133" width="0.4549%" height="15" fill="rgb(240,136,2)" fg:x="6972" fg:w="33"/><text x="96.3625%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (20 samples, 0.28%)</title><rect x="96.2917%" y="117" width="0.2757%" height="15" fill="rgb(239,18,37)" fg:x="6985" fg:w="20"/><text x="96.5417%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.14%)</title><rect x="96.5674%" y="165" width="0.1379%" height="15" fill="rgb(218,185,22)" fg:x="7005" fg:w="10"/><text x="96.8174%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.19%)</title><rect x="96.7053%" y="165" width="0.1930%" height="15" fill="rgb(225,218,4)" fg:x="7015" fg:w="14"/><text x="96.9553%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="96.8569%" y="149" width="0.0414%" height="15" fill="rgb(230,182,32)" fg:x="7026" fg:w="3"/><text x="97.1069%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.07%)</title><rect x="96.8983%" y="165" width="0.0689%" height="15" fill="rgb(242,56,43)" fg:x="7029" fg:w="5"/><text x="97.1483%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="96.9672%" y="165" width="0.0138%" height="15" fill="rgb(233,99,24)" fg:x="7034" fg:w="1"/><text x="97.2172%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="96.9810%" y="165" width="0.0138%" height="15" fill="rgb(234,209,42)" fg:x="7035" fg:w="1"/><text x="97.2310%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::Finder::create_atoms (858 samples, 11.83%)</title><rect x="85.1944%" y="181" width="11.8280%" height="15" fill="rgb(227,7,12)" fg:x="6180" fg:w="858"/><text x="85.4444%" y="191.50">datoe_solver`datoe..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="96.9948%" y="165" width="0.0276%" height="15" fill="rgb(245,203,43)" fg:x="7036" fg:w="2"/><text x="97.2448%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.04%)</title><rect x="97.8219%" y="85" width="0.0414%" height="15" fill="rgb(238,205,33)" fg:x="7096" fg:w="3"/><text x="98.0719%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_large (3 samples, 0.04%)</title><rect x="97.8219%" y="69" width="0.0414%" height="15" fill="rgb(231,56,7)" fg:x="7096" fg:w="3"/><text x="98.0719%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (3 samples, 0.04%)</title><rect x="97.8219%" y="53" width="0.0414%" height="15" fill="rgb(244,186,29)" fg:x="7096" fg:w="3"/><text x="98.0719%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.04%)</title><rect x="97.8219%" y="37" width="0.0414%" height="15" fill="rgb(234,111,31)" fg:x="7096" fg:w="3"/><text x="98.0719%" y="47.50"></text></g><g><title>datoe_solver`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.14%)</title><rect x="97.8219%" y="165" width="0.1379%" height="15" fill="rgb(241,149,10)" fg:x="7096" fg:w="10"/><text x="98.0719%" y="175.50"></text></g><g><title>datoe_solver`alloc::raw_vec::finish_grow (10 samples, 0.14%)</title><rect x="97.8219%" y="149" width="0.1379%" height="15" fill="rgb(249,206,44)" fg:x="7096" fg:w="10"/><text x="98.0719%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.14%)</title><rect x="97.8219%" y="133" width="0.1379%" height="15" fill="rgb(251,153,30)" fg:x="7096" fg:w="10"/><text x="98.0719%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.14%)</title><rect x="97.8219%" y="117" width="0.1379%" height="15" fill="rgb(239,152,38)" fg:x="7096" fg:w="10"/><text x="98.0719%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.14%)</title><rect x="97.8219%" y="101" width="0.1379%" height="15" fill="rgb(249,139,47)" fg:x="7096" fg:w="10"/><text x="98.0719%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.10%)</title><rect x="97.8632%" y="85" width="0.0965%" height="15" fill="rgb(244,64,35)" fg:x="7099" fg:w="7"/><text x="98.1132%" y="95.50"></text></g><g><title>datoe_solver`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;datoe_solver::finder::atom::Atom&gt;&gt; (4 samples, 0.06%)</title><rect x="97.9597%" y="165" width="0.0551%" height="15" fill="rgb(216,46,15)" fg:x="7106" fg:w="4"/><text x="98.2097%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::score_rec (57 samples, 0.79%)</title><rect x="98.0149%" y="165" width="0.7858%" height="15" fill="rgb(250,74,19)" fg:x="7110" fg:w="57"/><text x="98.2649%" y="175.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::score_rec (39 samples, 0.54%)</title><rect x="98.2630%" y="149" width="0.5376%" height="15" fill="rgb(249,42,33)" fg:x="7128" fg:w="39"/><text x="98.5130%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::score_rec (11 samples, 0.15%)</title><rect x="98.6490%" y="133" width="0.1516%" height="15" fill="rgb(242,149,17)" fg:x="7156" fg:w="11"/><text x="98.8990%" y="143.50"></text></g><g><title>datoe_solver`datoe_solver::finder::atom::Atom::score_rec (3 samples, 0.04%)</title><rect x="98.7593%" y="117" width="0.0414%" height="15" fill="rgb(244,29,21)" fg:x="7164" fg:w="3"/><text x="99.0093%" y="127.50"></text></g><g><title>datoe_solver`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (19 samples, 0.26%)</title><rect x="98.8007%" y="165" width="0.2619%" height="15" fill="rgb(220,130,37)" fg:x="7167" fg:w="19"/><text x="99.0507%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="99.0626%" y="149" width="0.0138%" height="15" fill="rgb(211,67,2)" fg:x="7186" fg:w="1"/><text x="99.3126%" y="159.50"></text></g><g><title>datoe_solver`datoe_solver::finder::Finder::new (1,010 samples, 13.92%)</title><rect x="85.1806%" y="197" width="13.9234%" height="15" fill="rgb(235,68,52)" fg:x="6179" fg:w="1010"/><text x="85.4306%" y="207.50">datoe_solver`datoe_so..</text></g><g><title>datoe_solver`datoe_solver::finder::atom_store::AtomStore::load_atoms (151 samples, 2.08%)</title><rect x="97.0223%" y="181" width="2.0816%" height="15" fill="rgb(246,142,3)" fg:x="7038" fg:w="151"/><text x="97.2723%" y="191.50">d..</text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.04%)</title><rect x="99.0626%" y="165" width="0.0414%" height="15" fill="rgb(241,25,7)" fg:x="7186" fg:w="3"/><text x="99.3126%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_large (2 samples, 0.03%)</title><rect x="99.0764%" y="149" width="0.0276%" height="15" fill="rgb(242,119,39)" fg:x="7187" fg:w="2"/><text x="99.3264%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (2 samples, 0.03%)</title><rect x="99.0764%" y="133" width="0.0276%" height="15" fill="rgb(241,98,45)" fg:x="7187" fg:w="2"/><text x="99.3264%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.03%)</title><rect x="99.0764%" y="117" width="0.0276%" height="15" fill="rgb(254,28,30)" fg:x="7187" fg:w="2"/><text x="99.3264%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (11 samples, 0.15%)</title><rect x="99.1039%" y="197" width="0.1516%" height="15" fill="rgb(241,142,54)" fg:x="7189" fg:w="11"/><text x="99.3539%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.19%)</title><rect x="99.2556%" y="197" width="0.1930%" height="15" fill="rgb(222,85,15)" fg:x="7200" fg:w="14"/><text x="99.5056%" y="207.50"></text></g><g><title>datoe_solver`main (7,216 samples, 99.48%)</title><rect x="0.0000%" y="277" width="99.4762%" height="15" fill="rgb(210,85,47)" fg:x="0" fg:w="7216"/><text x="0.2500%" y="287.50">datoe_solver`main</text></g><g><title>datoe_solver`std::rt::lang_start_internal (7,216 samples, 99.48%)</title><rect x="0.0000%" y="261" width="99.4762%" height="15" fill="rgb(224,206,25)" fg:x="0" fg:w="7216"/><text x="0.2500%" y="271.50">datoe_solver`std::rt::lang_start_internal</text></g><g><title>datoe_solver`std::rt::lang_start::_{{closure}} (7,216 samples, 99.48%)</title><rect x="0.0000%" y="245" width="99.4762%" height="15" fill="rgb(243,201,19)" fg:x="0" fg:w="7216"/><text x="0.2500%" y="255.50">datoe_solver`std::rt::lang_start::_{{closure}}</text></g><g><title>datoe_solver`std::sys_common::backtrace::__rust_begin_short_backtrace (7,216 samples, 99.48%)</title><rect x="0.0000%" y="229" width="99.4762%" height="15" fill="rgb(236,59,4)" fg:x="0" fg:w="7216"/><text x="0.2500%" y="239.50">datoe_solver`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>datoe_solver`datoe_solver::main (7,216 samples, 99.48%)</title><rect x="0.0000%" y="213" width="99.4762%" height="15" fill="rgb(254,179,45)" fg:x="0" fg:w="7216"/><text x="0.2500%" y="223.50">datoe_solver`datoe_solver::main</text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (2 samples, 0.03%)</title><rect x="99.4486%" y="197" width="0.0276%" height="15" fill="rgb(226,14,10)" fg:x="7214" fg:w="2"/><text x="99.6986%" y="207.50"></text></g><g><title>dyld`start (7,224 samples, 99.59%)</title><rect x="0.0000%" y="293" width="99.5864%" height="15" fill="rgb(244,27,41)" fg:x="0" fg:w="7224"/><text x="0.2500%" y="303.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (8 samples, 0.11%)</title><rect x="99.4762%" y="277" width="0.1103%" height="15" fill="rgb(235,35,32)" fg:x="7216" fg:w="8"/><text x="99.7262%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__exit (8 samples, 0.11%)</title><rect x="99.4762%" y="261" width="0.1103%" height="15" fill="rgb(218,68,31)" fg:x="7216" fg:w="8"/><text x="99.7262%" y="271.50"></text></g><g><title>all (7,254 samples, 100%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="7254"/><text x="0.2500%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__exit (30 samples, 0.41%)</title><rect x="99.5864%" y="293" width="0.4136%" height="15" fill="rgb(227,98,0)" fg:x="7224" fg:w="30"/><text x="99.8364%" y="303.50"></text></g></svg></svg>