<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="6315"><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;itertools::adaptors::Product&lt;alloc::vec::into_iter::IntoIter&lt;f64&gt;,alloc::vec::into_iter::IntoIter&lt;f64&gt;&gt;,dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="0.1584%" y="133" width="0.0158%" height="15" fill="rgb(227,0,7)" fg:x="10" fg:w="1"/><text x="0.4084%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd796c (1 samples, 0.02%)</title><rect x="0.1584%" y="117" width="0.0158%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="1"/><text x="0.4084%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="0.1584%" y="149" width="0.0317%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="2"/><text x="0.4084%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_no_limit (1 samples, 0.02%)</title><rect x="0.1742%" y="133" width="0.0158%" height="15" fill="rgb(248,212,6)" fg:x="11" fg:w="1"/><text x="0.4242%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="0.2059%" y="133" width="0.0475%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="3"/><text x="0.4559%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe464 (1 samples, 0.02%)</title><rect x="0.2375%" y="117" width="0.0158%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="1"/><text x="0.4875%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbfc0e (1 samples, 0.02%)</title><rect x="0.2375%" y="101" width="0.0158%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="1"/><text x="0.4875%" y="111.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (8 samples, 0.13%)</title><rect x="0.1584%" y="165" width="0.1267%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="8"/><text x="0.4084%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (6 samples, 0.10%)</title><rect x="0.1900%" y="149" width="0.0950%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="6"/><text x="0.4400%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::possible_vals_with_removed_funcs (2 samples, 0.03%)</title><rect x="0.2534%" y="133" width="0.0317%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="2"/><text x="0.5034%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.2692%" y="117" width="0.0158%" height="15" fill="rgb(250,228,42)" fg:x="17" fg:w="1"/><text x="0.5192%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.2692%" y="101" width="0.0158%" height="15" fill="rgb(240,193,28)" fg:x="17" fg:w="1"/><text x="0.5192%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.2692%" y="85" width="0.0158%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="1"/><text x="0.5192%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (1 samples, 0.02%)</title><rect x="0.2692%" y="69" width="0.0158%" height="15" fill="rgb(206,188,39)" fg:x="17" fg:w="1"/><text x="0.5192%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (1 samples, 0.02%)</title><rect x="0.2692%" y="53" width="0.0158%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="1"/><text x="0.5192%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe1bf (1 samples, 0.02%)</title><rect x="0.2692%" y="37" width="0.0158%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="1"/><text x="0.5192%" y="47.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.2850%" y="149" width="0.0158%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="1"/><text x="0.5350%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::fill_hole (1 samples, 0.02%)</title><rect x="0.3009%" y="149" width="0.0158%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="1"/><text x="0.5509%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::fill_hole (1 samples, 0.02%)</title><rect x="0.3009%" y="133" width="0.0158%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="1"/><text x="0.5509%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (1 samples, 0.02%)</title><rect x="0.3167%" y="133" width="0.0158%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="1"/><text x="0.5667%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (1 samples, 0.02%)</title><rect x="0.3167%" y="117" width="0.0158%" height="15" fill="rgb(249,33,26)" fg:x="20" fg:w="1"/><text x="0.5667%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (2 samples, 0.03%)</title><rect x="0.3167%" y="149" width="0.0317%" height="15" fill="rgb(235,183,28)" fg:x="20" fg:w="2"/><text x="0.5667%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (1 samples, 0.02%)</title><rect x="0.3325%" y="133" width="0.0158%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="1"/><text x="0.5825%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (1 samples, 0.02%)</title><rect x="0.3484%" y="133" width="0.0158%" height="15" fill="rgb(247,18,42)" fg:x="22" fg:w="1"/><text x="0.5984%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ce (1 samples, 0.02%)</title><rect x="0.3484%" y="117" width="0.0158%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="1"/><text x="0.5984%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::join_vals (6 samples, 0.10%)</title><rect x="0.2850%" y="165" width="0.0950%" height="15" fill="rgb(249,31,29)" fg:x="18" fg:w="6"/><text x="0.5350%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (2 samples, 0.03%)</title><rect x="0.3484%" y="149" width="0.0317%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="2"/><text x="0.5984%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (1 samples, 0.02%)</title><rect x="0.3642%" y="133" width="0.0158%" height="15" fill="rgb(238,160,17)" fg:x="23" fg:w="1"/><text x="0.6142%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.36%)</title><rect x="0.0317%" y="213" width="0.3642%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="23"/><text x="0.2817%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.36%)</title><rect x="0.0317%" y="197" width="0.3642%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="23"/><text x="0.2817%" y="207.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.24%)</title><rect x="0.1584%" y="181" width="0.2375%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="15"/><text x="0.4084%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799e (1 samples, 0.02%)</title><rect x="0.3800%" y="165" width="0.0158%" height="15" fill="rgb(229,88,8)" fg:x="24" fg:w="1"/><text x="0.6300%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (2 samples, 0.03%)</title><rect x="0.3959%" y="213" width="0.0317%" height="15" fill="rgb(213,181,19)" fg:x="25" fg:w="2"/><text x="0.6459%" y="223.50"></text></g><g><title>dateo_fun_remover`ahash::random_state::RandomState::from_keys (1 samples, 0.02%)</title><rect x="0.9184%" y="181" width="0.0158%" height="15" fill="rgb(254,191,54)" fg:x="58" fg:w="1"/><text x="1.1684%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::insert (71 samples, 1.12%)</title><rect x="2.7870%" y="165" width="1.1243%" height="15" fill="rgb(241,83,37)" fg:x="176" fg:w="71"/><text x="3.0370%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (196 samples, 3.10%)</title><rect x="0.9343%" y="181" width="3.1037%" height="15" fill="rgb(233,36,39)" fg:x="59" fg:w="196"/><text x="1.1843%" y="191.50">dat..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (8 samples, 0.13%)</title><rect x="3.9113%" y="165" width="0.1267%" height="15" fill="rgb(226,3,54)" fg:x="247" fg:w="8"/><text x="4.1613%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.14%)</title><rect x="4.0380%" y="181" width="0.1425%" height="15" fill="rgb(245,192,40)" fg:x="255" fg:w="9"/><text x="4.2880%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.14%)</title><rect x="4.0380%" y="165" width="0.1425%" height="15" fill="rgb(238,167,29)" fg:x="255" fg:w="9"/><text x="4.2880%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;ahash::hash_map::AHashMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (237 samples, 3.75%)</title><rect x="0.4434%" y="197" width="3.7530%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="237"/><text x="0.6934%" y="207.50">date..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (1 samples, 0.02%)</title><rect x="4.1805%" y="181" width="0.0158%" height="15" fill="rgb(231,60,39)" fg:x="264" fg:w="1"/><text x="4.4305%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (239 samples, 3.78%)</title><rect x="0.4276%" y="213" width="3.7846%" height="15" fill="rgb(208,69,12)" fg:x="27" fg:w="239"/><text x="0.6776%" y="223.50">date..</text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="4.1964%" y="197" width="0.0158%" height="15" fill="rgb(235,93,37)" fg:x="265" fg:w="1"/><text x="4.4464%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="4.2122%" y="197" width="0.0158%" height="15" fill="rgb(213,116,39)" fg:x="266" fg:w="1"/><text x="4.4622%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::init_node_key (1 samples, 0.02%)</title><rect x="4.2122%" y="181" width="0.0158%" height="15" fill="rgb(222,207,29)" fg:x="266" fg:w="1"/><text x="4.4622%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::init_node_key (1 samples, 0.02%)</title><rect x="4.2122%" y="165" width="0.0158%" height="15" fill="rgb(206,96,30)" fg:x="266" fg:w="1"/><text x="4.4622%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="4.2122%" y="149" width="0.0158%" height="15" fill="rgb(218,138,4)" fg:x="266" fg:w="1"/><text x="4.4622%" y="159.50"></text></g><g><title>dateo_fun_remover`core::fmt::write (1 samples, 0.02%)</title><rect x="4.2122%" y="133" width="0.0158%" height="15" fill="rgb(250,191,14)" fg:x="266" fg:w="1"/><text x="4.4622%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="4.2122%" y="117" width="0.0158%" height="15" fill="rgb(239,60,40)" fg:x="266" fg:w="1"/><text x="4.4622%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="4.2122%" y="101" width="0.0158%" height="15" fill="rgb(206,27,48)" fg:x="266" fg:w="1"/><text x="4.4622%" y="111.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::populate (2 samples, 0.03%)</title><rect x="4.2122%" y="213" width="0.0317%" height="15" fill="rgb(225,35,8)" fg:x="266" fg:w="2"/><text x="4.4622%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7826 (1 samples, 0.02%)</title><rect x="4.2280%" y="197" width="0.0158%" height="15" fill="rgb(250,213,24)" fg:x="267" fg:w="1"/><text x="4.4780%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17a6 (7 samples, 0.11%)</title><rect x="6.6350%" y="117" width="0.1108%" height="15" fill="rgb(247,123,22)" fg:x="419" fg:w="7"/><text x="6.8850%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.11%)</title><rect x="6.6350%" y="101" width="0.1108%" height="15" fill="rgb(231,138,38)" fg:x="419" fg:w="7"/><text x="6.8850%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (142 samples, 2.25%)</title><rect x="4.5131%" y="197" width="2.2486%" height="15" fill="rgb(231,145,46)" fg:x="285" fg:w="142"/><text x="4.7631%" y="207.50">d..</text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.13%)</title><rect x="6.6350%" y="181" width="0.1267%" height="15" fill="rgb(251,118,11)" fg:x="419" fg:w="8"/><text x="6.8850%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (8 samples, 0.13%)</title><rect x="6.6350%" y="165" width="0.1267%" height="15" fill="rgb(217,147,25)" fg:x="419" fg:w="8"/><text x="6.8850%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (8 samples, 0.13%)</title><rect x="6.6350%" y="149" width="0.1267%" height="15" fill="rgb(247,81,37)" fg:x="419" fg:w="8"/><text x="6.8850%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (8 samples, 0.13%)</title><rect x="6.6350%" y="133" width="0.1267%" height="15" fill="rgb(209,12,38)" fg:x="419" fg:w="8"/><text x="6.8850%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17b3 (1 samples, 0.02%)</title><rect x="6.7458%" y="117" width="0.0158%" height="15" fill="rgb(227,1,9)" fg:x="426" fg:w="1"/><text x="6.9958%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0d98 (1 samples, 0.02%)</title><rect x="6.7458%" y="101" width="0.0158%" height="15" fill="rgb(248,47,43)" fg:x="426" fg:w="1"/><text x="6.9958%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="6.7617%" y="197" width="0.0158%" height="15" fill="rgb(221,10,30)" fg:x="427" fg:w="1"/><text x="7.0117%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93 samples, 1.47%)</title><rect x="6.7775%" y="197" width="1.4727%" height="15" fill="rgb(210,229,1)" fg:x="428" fg:w="93"/><text x="7.0275%" y="207.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$pow (1 samples, 0.02%)</title><rect x="8.2502%" y="197" width="0.0158%" height="15" fill="rgb(222,148,37)" fg:x="521" fg:w="1"/><text x="8.5002%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (2 samples, 0.03%)</title><rect x="8.2660%" y="197" width="0.0317%" height="15" fill="rgb(234,67,33)" fg:x="522" fg:w="2"/><text x="8.5160%" y="207.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (3 samples, 0.05%)</title><rect x="8.2977%" y="197" width="0.0475%" height="15" fill="rgb(247,98,35)" fg:x="524" fg:w="3"/><text x="8.5477%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1671 (2 samples, 0.03%)</title><rect x="8.3452%" y="133" width="0.0317%" height="15" fill="rgb(247,138,52)" fg:x="527" fg:w="2"/><text x="8.5952%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc9ddf (2 samples, 0.03%)</title><rect x="8.3452%" y="117" width="0.0317%" height="15" fill="rgb(213,79,30)" fg:x="527" fg:w="2"/><text x="8.5952%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (2 samples, 0.03%)</title><rect x="8.3452%" y="101" width="0.0317%" height="15" fill="rgb(246,177,23)" fg:x="527" fg:w="2"/><text x="8.5952%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (2 samples, 0.03%)</title><rect x="8.3452%" y="85" width="0.0317%" height="15" fill="rgb(230,62,27)" fg:x="527" fg:w="2"/><text x="8.5952%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.08%)</title><rect x="8.3452%" y="197" width="0.0792%" height="15" fill="rgb(216,154,8)" fg:x="527" fg:w="5"/><text x="8.5952%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (5 samples, 0.08%)</title><rect x="8.3452%" y="181" width="0.0792%" height="15" fill="rgb(244,35,45)" fg:x="527" fg:w="5"/><text x="8.5952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (5 samples, 0.08%)</title><rect x="8.3452%" y="165" width="0.0792%" height="15" fill="rgb(251,115,12)" fg:x="527" fg:w="5"/><text x="8.5952%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (5 samples, 0.08%)</title><rect x="8.3452%" y="149" width="0.0792%" height="15" fill="rgb(240,54,50)" fg:x="527" fg:w="5"/><text x="8.5952%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17a6 (3 samples, 0.05%)</title><rect x="8.3769%" y="133" width="0.0475%" height="15" fill="rgb(233,84,52)" fg:x="529" fg:w="3"/><text x="8.6269%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="8.3769%" y="117" width="0.0475%" height="15" fill="rgb(207,117,47)" fg:x="529" fg:w="3"/><text x="8.6269%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="8.4244%" y="181" width="0.0317%" height="15" fill="rgb(249,43,39)" fg:x="532" fg:w="2"/><text x="8.6744%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (1 samples, 0.02%)</title><rect x="8.4561%" y="181" width="0.0158%" height="15" fill="rgb(209,38,44)" fg:x="534" fg:w="1"/><text x="8.7061%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd484 (1 samples, 0.02%)</title><rect x="8.4561%" y="165" width="0.0158%" height="15" fill="rgb(236,212,23)" fg:x="534" fg:w="1"/><text x="8.7061%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (4 samples, 0.06%)</title><rect x="8.4244%" y="197" width="0.0633%" height="15" fill="rgb(242,79,21)" fg:x="532" fg:w="4"/><text x="8.6744%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7891 (1 samples, 0.02%)</title><rect x="8.4719%" y="181" width="0.0158%" height="15" fill="rgb(211,96,35)" fg:x="535" fg:w="1"/><text x="8.7219%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (20 samples, 0.32%)</title><rect x="10.1029%" y="149" width="0.3167%" height="15" fill="rgb(253,215,40)" fg:x="638" fg:w="20"/><text x="10.3529%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 1.14%)</title><rect x="9.3428%" y="165" width="1.1401%" height="15" fill="rgb(211,81,21)" fg:x="590" fg:w="72"/><text x="9.5928%" y="175.50"></text></g><g><title>libsystem_m.dylib`trunc (4 samples, 0.06%)</title><rect x="10.4196%" y="149" width="0.0633%" height="15" fill="rgb(208,190,38)" fg:x="658" fg:w="4"/><text x="10.6696%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (2 samples, 0.03%)</title><rect x="10.4830%" y="165" width="0.0317%" height="15" fill="rgb(235,213,38)" fg:x="662" fg:w="2"/><text x="10.7330%" y="175.50"></text></g><g><title>libsystem_m.dylib`trunc (7 samples, 0.11%)</title><rect x="10.5146%" y="165" width="0.1108%" height="15" fill="rgb(237,122,38)" fg:x="664" fg:w="7"/><text x="10.7646%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3a0 (1 samples, 0.02%)</title><rect x="10.6255%" y="165" width="0.0158%" height="15" fill="rgb(244,218,35)" fg:x="671" fg:w="1"/><text x="10.8755%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3dd (1 samples, 0.02%)</title><rect x="10.6413%" y="165" width="0.0158%" height="15" fill="rgb(240,68,47)" fg:x="672" fg:w="1"/><text x="10.8913%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (2 samples, 0.03%)</title><rect x="10.6572%" y="165" width="0.0317%" height="15" fill="rgb(210,16,53)" fg:x="673" fg:w="2"/><text x="10.9072%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd414 (2 samples, 0.03%)</title><rect x="10.6888%" y="165" width="0.0317%" height="15" fill="rgb(235,124,12)" fg:x="675" fg:w="2"/><text x="10.9388%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd452 (1 samples, 0.02%)</title><rect x="10.7205%" y="165" width="0.0158%" height="15" fill="rgb(224,169,11)" fg:x="677" fg:w="1"/><text x="10.9705%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (134 samples, 2.12%)</title><rect x="8.6302%" y="181" width="2.1219%" height="15" fill="rgb(250,166,2)" fg:x="545" fg:w="134"/><text x="8.8802%" y="191.50">d..</text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4a4 (1 samples, 0.02%)</title><rect x="10.7363%" y="165" width="0.0158%" height="15" fill="rgb(242,216,29)" fg:x="678" fg:w="1"/><text x="10.9863%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="10.7522%" y="181" width="0.0158%" height="15" fill="rgb(230,116,27)" fg:x="679" fg:w="1"/><text x="11.0022%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe004 (1 samples, 0.02%)</title><rect x="10.7997%" y="149" width="0.0158%" height="15" fill="rgb(228,99,48)" fg:x="682" fg:w="1"/><text x="11.0497%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe1cb (2 samples, 0.03%)</title><rect x="10.8155%" y="117" width="0.0317%" height="15" fill="rgb(253,11,6)" fg:x="683" fg:w="2"/><text x="11.0655%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc07a0 (1 samples, 0.02%)</title><rect x="10.8472%" y="117" width="0.0158%" height="15" fill="rgb(247,143,39)" fg:x="685" fg:w="1"/><text x="11.0972%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe464 (1 samples, 0.02%)</title><rect x="10.8472%" y="101" width="0.0158%" height="15" fill="rgb(236,97,10)" fg:x="685" fg:w="1"/><text x="11.0972%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf6c2 (1 samples, 0.02%)</title><rect x="10.8472%" y="85" width="0.0158%" height="15" fill="rgb(233,208,19)" fg:x="685" fg:w="1"/><text x="11.0972%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (1 samples, 0.02%)</title><rect x="10.8630%" y="101" width="0.0158%" height="15" fill="rgb(216,164,2)" fg:x="686" fg:w="1"/><text x="11.1130%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd509 (2 samples, 0.03%)</title><rect x="10.8789%" y="101" width="0.0317%" height="15" fill="rgb(220,129,5)" fg:x="687" fg:w="2"/><text x="11.1289%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (7 samples, 0.11%)</title><rect x="10.8155%" y="133" width="0.1108%" height="15" fill="rgb(242,17,10)" fg:x="683" fg:w="7"/><text x="11.0655%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0852 (4 samples, 0.06%)</title><rect x="10.8630%" y="117" width="0.0633%" height="15" fill="rgb(242,107,0)" fg:x="686" fg:w="4"/><text x="11.1130%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5a4 (1 samples, 0.02%)</title><rect x="10.9105%" y="101" width="0.0158%" height="15" fill="rgb(251,28,31)" fg:x="689" fg:w="1"/><text x="11.1605%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.17%)</title><rect x="10.7680%" y="181" width="0.1742%" height="15" fill="rgb(233,223,10)" fg:x="680" fg:w="11"/><text x="11.0180%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (10 samples, 0.16%)</title><rect x="10.7838%" y="165" width="0.1584%" height="15" fill="rgb(215,21,27)" fg:x="681" fg:w="10"/><text x="11.0338%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (8 samples, 0.13%)</title><rect x="10.8155%" y="149" width="0.1267%" height="15" fill="rgb(232,23,21)" fg:x="683" fg:w="8"/><text x="11.0655%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0736 (1 samples, 0.02%)</title><rect x="10.9264%" y="133" width="0.0158%" height="15" fill="rgb(244,5,23)" fg:x="690" fg:w="1"/><text x="11.1764%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3b2 (1 samples, 0.02%)</title><rect x="10.9422%" y="181" width="0.0158%" height="15" fill="rgb(226,81,46)" fg:x="691" fg:w="1"/><text x="11.1922%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3ca (1 samples, 0.02%)</title><rect x="10.9580%" y="181" width="0.0158%" height="15" fill="rgb(247,70,30)" fg:x="692" fg:w="1"/><text x="11.2080%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3d9 (1 samples, 0.02%)</title><rect x="10.9739%" y="181" width="0.0158%" height="15" fill="rgb(212,68,19)" fg:x="693" fg:w="1"/><text x="11.2239%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3dd (4 samples, 0.06%)</title><rect x="10.9897%" y="181" width="0.0633%" height="15" fill="rgb(240,187,13)" fg:x="694" fg:w="4"/><text x="11.2397%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (18 samples, 0.29%)</title><rect x="11.0530%" y="181" width="0.2850%" height="15" fill="rgb(223,113,26)" fg:x="698" fg:w="18"/><text x="11.3030%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3eb (2 samples, 0.03%)</title><rect x="11.3381%" y="181" width="0.0317%" height="15" fill="rgb(206,192,2)" fg:x="716" fg:w="2"/><text x="11.5881%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd407 (5 samples, 0.08%)</title><rect x="11.3698%" y="181" width="0.0792%" height="15" fill="rgb(241,108,4)" fg:x="718" fg:w="5"/><text x="11.6198%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd414 (3 samples, 0.05%)</title><rect x="11.4489%" y="181" width="0.0475%" height="15" fill="rgb(247,173,49)" fg:x="723" fg:w="3"/><text x="11.6989%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd41b (2 samples, 0.03%)</title><rect x="11.4964%" y="181" width="0.0317%" height="15" fill="rgb(224,114,35)" fg:x="726" fg:w="2"/><text x="11.7464%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd42b (2 samples, 0.03%)</title><rect x="11.5281%" y="181" width="0.0317%" height="15" fill="rgb(245,159,27)" fg:x="728" fg:w="2"/><text x="11.7781%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd439 (1 samples, 0.02%)</title><rect x="11.5598%" y="181" width="0.0158%" height="15" fill="rgb(245,172,44)" fg:x="730" fg:w="1"/><text x="11.8098%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd442 (1 samples, 0.02%)</title><rect x="11.5756%" y="181" width="0.0158%" height="15" fill="rgb(236,23,11)" fg:x="731" fg:w="1"/><text x="11.8256%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd445 (1 samples, 0.02%)</title><rect x="11.5914%" y="181" width="0.0158%" height="15" fill="rgb(205,117,38)" fg:x="732" fg:w="1"/><text x="11.8414%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd452 (2 samples, 0.03%)</title><rect x="11.6073%" y="181" width="0.0317%" height="15" fill="rgb(237,72,25)" fg:x="733" fg:w="2"/><text x="11.8573%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd484 (1 samples, 0.02%)</title><rect x="11.6390%" y="181" width="0.0158%" height="15" fill="rgb(244,70,9)" fg:x="735" fg:w="1"/><text x="11.8890%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4a4 (1 samples, 0.02%)</title><rect x="11.6548%" y="181" width="0.0158%" height="15" fill="rgb(217,125,39)" fg:x="736" fg:w="1"/><text x="11.9048%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ef (2 samples, 0.03%)</title><rect x="11.6706%" y="181" width="0.0317%" height="15" fill="rgb(235,36,10)" fg:x="737" fg:w="2"/><text x="11.9206%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4fe (1 samples, 0.02%)</title><rect x="11.7023%" y="181" width="0.0158%" height="15" fill="rgb(251,123,47)" fg:x="739" fg:w="1"/><text x="11.9523%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd509 (13 samples, 0.21%)</title><rect x="11.7181%" y="181" width="0.2059%" height="15" fill="rgb(221,13,13)" fg:x="740" fg:w="13"/><text x="11.9681%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5a4 (2 samples, 0.03%)</title><rect x="11.9240%" y="181" width="0.0317%" height="15" fill="rgb(238,131,9)" fg:x="753" fg:w="2"/><text x="12.1740%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5b9 (1 samples, 0.02%)</title><rect x="11.9557%" y="181" width="0.0158%" height="15" fill="rgb(211,50,8)" fg:x="755" fg:w="1"/><text x="12.2057%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5c6 (1 samples, 0.02%)</title><rect x="11.9715%" y="181" width="0.0158%" height="15" fill="rgb(245,182,24)" fg:x="756" fg:w="1"/><text x="12.2215%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77dd (1 samples, 0.02%)</title><rect x="11.9873%" y="181" width="0.0158%" height="15" fill="rgb(242,14,37)" fg:x="757" fg:w="1"/><text x="12.2373%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7891 (1 samples, 0.02%)</title><rect x="12.0032%" y="181" width="0.0158%" height="15" fill="rgb(246,228,12)" fg:x="758" fg:w="1"/><text x="12.2532%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (224 samples, 3.55%)</title><rect x="8.4877%" y="197" width="3.5471%" height="15" fill="rgb(213,55,15)" fg:x="536" fg:w="224"/><text x="8.7377%" y="207.50">date..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="12.0190%" y="181" width="0.0158%" height="15" fill="rgb(209,9,3)" fg:x="759" fg:w="1"/><text x="12.2690%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="12.0348%" y="197" width="0.0158%" height="15" fill="rgb(230,59,30)" fg:x="760" fg:w="1"/><text x="12.2848%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="12.0348%" y="181" width="0.0158%" height="15" fill="rgb(209,121,21)" fg:x="760" fg:w="1"/><text x="12.2848%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="12.0348%" y="165" width="0.0158%" height="15" fill="rgb(220,109,13)" fg:x="760" fg:w="1"/><text x="12.2848%" y="175.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d4470 (20 samples, 0.32%)</title><rect x="12.0507%" y="197" width="0.3167%" height="15" fill="rgb(232,18,1)" fg:x="761" fg:w="20"/><text x="12.3007%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (91 samples, 1.44%)</title><rect x="12.3674%" y="197" width="1.4410%" height="15" fill="rgb(215,41,42)" fg:x="781" fg:w="91"/><text x="12.6174%" y="207.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (1 samples, 0.02%)</title><rect x="13.8084%" y="197" width="0.0158%" height="15" fill="rgb(224,123,36)" fg:x="872" fg:w="1"/><text x="14.0584%" y="207.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (1 samples, 0.02%)</title><rect x="13.8242%" y="197" width="0.0158%" height="15" fill="rgb(240,125,3)" fg:x="873" fg:w="1"/><text x="14.0742%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd350 (2 samples, 0.03%)</title><rect x="13.8401%" y="197" width="0.0317%" height="15" fill="rgb(205,98,50)" fg:x="874" fg:w="2"/><text x="14.0901%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5b5 (2 samples, 0.03%)</title><rect x="13.8717%" y="197" width="0.0317%" height="15" fill="rgb(205,185,37)" fg:x="876" fg:w="2"/><text x="14.1217%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde6c (1 samples, 0.02%)</title><rect x="13.9034%" y="197" width="0.0158%" height="15" fill="rgb(238,207,15)" fg:x="878" fg:w="1"/><text x="14.1534%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1ea8 (1 samples, 0.02%)</title><rect x="13.9192%" y="197" width="0.0158%" height="15" fill="rgb(213,199,42)" fg:x="879" fg:w="1"/><text x="14.1692%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc2006 (1 samples, 0.02%)</title><rect x="13.9351%" y="197" width="0.0158%" height="15" fill="rgb(235,201,11)" fg:x="880" fg:w="1"/><text x="14.1851%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc2370 (1 samples, 0.02%)</title><rect x="13.9351%" y="181" width="0.0158%" height="15" fill="rgb(207,46,11)" fg:x="880" fg:w="1"/><text x="14.1851%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76fe (1 samples, 0.02%)</title><rect x="13.9509%" y="197" width="0.0158%" height="15" fill="rgb(241,35,35)" fg:x="881" fg:w="1"/><text x="14.2009%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7705 (1 samples, 0.02%)</title><rect x="13.9667%" y="197" width="0.0158%" height="15" fill="rgb(243,32,47)" fg:x="882" fg:w="1"/><text x="14.2167%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd774f (1 samples, 0.02%)</title><rect x="13.9826%" y="197" width="0.0158%" height="15" fill="rgb(247,202,23)" fg:x="883" fg:w="1"/><text x="14.2326%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77f2 (1 samples, 0.02%)</title><rect x="13.9984%" y="197" width="0.0158%" height="15" fill="rgb(219,102,11)" fg:x="884" fg:w="1"/><text x="14.2484%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7802 (1 samples, 0.02%)</title><rect x="14.0143%" y="197" width="0.0158%" height="15" fill="rgb(243,110,44)" fg:x="885" fg:w="1"/><text x="14.2643%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7835 (1 samples, 0.02%)</title><rect x="14.0301%" y="197" width="0.0158%" height="15" fill="rgb(222,74,54)" fg:x="886" fg:w="1"/><text x="14.2801%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7851 (1 samples, 0.02%)</title><rect x="14.0459%" y="197" width="0.0158%" height="15" fill="rgb(216,99,12)" fg:x="887" fg:w="1"/><text x="14.2959%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7879 (2 samples, 0.03%)</title><rect x="14.0618%" y="197" width="0.0317%" height="15" fill="rgb(226,22,26)" fg:x="888" fg:w="2"/><text x="14.3118%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7887 (1 samples, 0.02%)</title><rect x="14.0934%" y="197" width="0.0158%" height="15" fill="rgb(217,163,10)" fg:x="890" fg:w="1"/><text x="14.3434%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7891 (11 samples, 0.17%)</title><rect x="14.1093%" y="197" width="0.1742%" height="15" fill="rgb(213,25,53)" fg:x="891" fg:w="11"/><text x="14.3593%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78f1 (1 samples, 0.02%)</title><rect x="14.2835%" y="197" width="0.0158%" height="15" fill="rgb(252,105,26)" fg:x="902" fg:w="1"/><text x="14.5335%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7901 (3 samples, 0.05%)</title><rect x="14.2993%" y="197" width="0.0475%" height="15" fill="rgb(220,39,43)" fg:x="903" fg:w="3"/><text x="14.5493%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="14.2993%" y="181" width="0.0475%" height="15" fill="rgb(229,68,48)" fg:x="903" fg:w="3"/><text x="14.5493%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd791d (1 samples, 0.02%)</title><rect x="14.3468%" y="197" width="0.0158%" height="15" fill="rgb(252,8,32)" fg:x="906" fg:w="1"/><text x="14.5968%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7924 (1 samples, 0.02%)</title><rect x="14.3626%" y="197" width="0.0158%" height="15" fill="rgb(223,20,43)" fg:x="907" fg:w="1"/><text x="14.6126%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7939 (1 samples, 0.02%)</title><rect x="14.3785%" y="197" width="0.0158%" height="15" fill="rgb(229,81,49)" fg:x="908" fg:w="1"/><text x="14.6285%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7947 (2 samples, 0.03%)</title><rect x="14.3943%" y="197" width="0.0317%" height="15" fill="rgb(236,28,36)" fg:x="909" fg:w="2"/><text x="14.6443%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799b (1 samples, 0.02%)</title><rect x="14.4260%" y="197" width="0.0158%" height="15" fill="rgb(249,185,26)" fg:x="911" fg:w="1"/><text x="14.6760%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799e (4 samples, 0.06%)</title><rect x="14.4418%" y="197" width="0.0633%" height="15" fill="rgb(249,174,33)" fg:x="912" fg:w="4"/><text x="14.6918%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79b7 (13 samples, 0.21%)</title><rect x="14.5051%" y="197" width="0.2059%" height="15" fill="rgb(233,201,37)" fg:x="916" fg:w="13"/><text x="14.7551%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a40 (3 samples, 0.05%)</title><rect x="14.7110%" y="197" width="0.0475%" height="15" fill="rgb(221,78,26)" fg:x="929" fg:w="3"/><text x="14.9610%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9cfd (1 samples, 0.02%)</title><rect x="14.7585%" y="197" width="0.0158%" height="15" fill="rgb(250,127,30)" fg:x="932" fg:w="1"/><text x="15.0085%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d04 (2 samples, 0.03%)</title><rect x="14.7743%" y="197" width="0.0317%" height="15" fill="rgb(230,49,44)" fg:x="933" fg:w="2"/><text x="15.0243%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d0d (1 samples, 0.02%)</title><rect x="14.8060%" y="197" width="0.0158%" height="15" fill="rgb(229,67,23)" fg:x="935" fg:w="1"/><text x="15.0560%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d28 (2 samples, 0.03%)</title><rect x="14.8219%" y="197" width="0.0317%" height="15" fill="rgb(249,83,47)" fg:x="936" fg:w="2"/><text x="15.0719%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804be0472 (1 samples, 0.02%)</title><rect x="14.8535%" y="197" width="0.0158%" height="15" fill="rgb(215,43,3)" fg:x="938" fg:w="1"/><text x="15.1035%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="14.8694%" y="197" width="0.0158%" height="15" fill="rgb(238,154,13)" fg:x="939" fg:w="1"/><text x="15.1194%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (673 samples, 10.66%)</title><rect x="4.2439%" y="213" width="10.6572%" height="15" fill="rgb(219,56,2)" fg:x="268" fg:w="673"/><text x="4.4939%" y="223.50">dateo_fun_remove..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="14.8852%" y="197" width="0.0158%" height="15" fill="rgb(233,0,4)" fg:x="940" fg:w="1"/><text x="15.1352%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde2b (2 samples, 0.03%)</title><rect x="14.9010%" y="213" width="0.0317%" height="15" fill="rgb(235,30,7)" fg:x="941" fg:w="2"/><text x="15.1510%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde60 (2 samples, 0.03%)</title><rect x="14.9327%" y="213" width="0.0317%" height="15" fill="rgb(250,79,13)" fg:x="943" fg:w="2"/><text x="15.1827%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde6c (1 samples, 0.02%)</title><rect x="14.9644%" y="213" width="0.0158%" height="15" fill="rgb(211,146,34)" fg:x="945" fg:w="1"/><text x="15.2144%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76f8 (1 samples, 0.02%)</title><rect x="14.9802%" y="213" width="0.0158%" height="15" fill="rgb(228,22,38)" fg:x="946" fg:w="1"/><text x="15.2302%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (949 samples, 15.03%)</title><rect x="0.0000%" y="261" width="15.0277%" height="15" fill="rgb(235,168,5)" fg:x="0" fg:w="949"/><text x="0.2500%" y="271.50">dateo_fun_remover`&lt;allo..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (947 samples, 15.00%)</title><rect x="0.0317%" y="245" width="14.9960%" height="15" fill="rgb(221,155,16)" fg:x="2" fg:w="947"/><text x="0.2817%" y="255.50">dateo_fun_remover`&lt;core..</text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (947 samples, 15.00%)</title><rect x="0.0317%" y="229" width="14.9960%" height="15" fill="rgb(215,215,53)" fg:x="2" fg:w="947"/><text x="0.2817%" y="239.50">dateo_fun_remover`core:..</text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a47 (2 samples, 0.03%)</title><rect x="14.9960%" y="213" width="0.0317%" height="15" fill="rgb(223,4,10)" fg:x="947" fg:w="2"/><text x="15.2460%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="15.0277%" y="245" width="0.0158%" height="15" fill="rgb(234,103,6)" fg:x="949" fg:w="1"/><text x="15.2777%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd1844 (1 samples, 0.02%)</title><rect x="15.0277%" y="229" width="0.0158%" height="15" fill="rgb(227,97,0)" fg:x="949" fg:w="1"/><text x="15.2777%" y="239.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (951 samples, 15.06%)</title><rect x="0.0000%" y="277" width="15.0594%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="951"/><text x="0.2500%" y="287.50">dateo_fun_remover`&lt;core..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (2 samples, 0.03%)</title><rect x="15.0277%" y="261" width="0.0317%" height="15" fill="rgb(228,201,54)" fg:x="949" fg:w="2"/><text x="15.2777%" y="271.50"></text></g><g><title>dateo_fun_remover`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="15.0435%" y="245" width="0.0158%" height="15" fill="rgb(222,22,37)" fg:x="950" fg:w="1"/><text x="15.2935%" y="255.50"></text></g><g><title>dateo_fun_remover`core::fmt::write (1 samples, 0.02%)</title><rect x="15.0435%" y="229" width="0.0158%" height="15" fill="rgb(237,53,32)" fg:x="950" fg:w="1"/><text x="15.2935%" y="239.50"></text></g><g><title>dateo_fun_remover`core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.02%)</title><rect x="15.0435%" y="213" width="0.0158%" height="15" fill="rgb(233,25,53)" fg:x="950" fg:w="1"/><text x="15.2935%" y="223.50"></text></g><g><title>dateo_fun_remover`core::fmt::Formatter::write_formatted_parts (1 samples, 0.02%)</title><rect x="15.0435%" y="197" width="0.0158%" height="15" fill="rgb(210,40,34)" fg:x="950" fg:w="1"/><text x="15.2935%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="15.0435%" y="181" width="0.0158%" height="15" fill="rgb(241,220,44)" fg:x="950" fg:w="1"/><text x="15.2935%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="15.0435%" y="165" width="0.0158%" height="15" fill="rgb(235,28,35)" fg:x="950" fg:w="1"/><text x="15.2935%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (952 samples, 15.08%)</title><rect x="0.0000%" y="341" width="15.0752%" height="15" fill="rgb(210,56,17)" fg:x="0" fg:w="952"/><text x="0.2500%" y="351.50">dateo_fun_remover`&lt;allo..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (952 samples, 15.08%)</title><rect x="0.0000%" y="325" width="15.0752%" height="15" fill="rgb(224,130,29)" fg:x="0" fg:w="952"/><text x="0.2500%" y="335.50">dateo_fun_remover`&lt;core..</text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (952 samples, 15.08%)</title><rect x="0.0000%" y="309" width="15.0752%" height="15" fill="rgb(235,212,8)" fg:x="0" fg:w="952"/><text x="0.2500%" y="319.50">dateo_fun_remover`core:..</text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (952 samples, 15.08%)</title><rect x="0.0000%" y="293" width="15.0752%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="952"/><text x="0.2500%" y="303.50">dateo_fun_remover`&lt;allo..</text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u32,dateo_fun_remover::finder::atom::Atom)&gt;&gt; (1 samples, 0.02%)</title><rect x="15.0594%" y="277" width="0.0158%" height="15" fill="rgb(219,149,13)" fg:x="951" fg:w="1"/><text x="15.3094%" y="287.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (1 samples, 0.02%)</title><rect x="15.0594%" y="261" width="0.0158%" height="15" fill="rgb(250,156,29)" fg:x="951" fg:w="1"/><text x="15.3094%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7901 (1 samples, 0.02%)</title><rect x="15.0594%" y="245" width="0.0158%" height="15" fill="rgb(216,193,19)" fg:x="951" fg:w="1"/><text x="15.3094%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="15.0594%" y="229" width="0.0158%" height="15" fill="rgb(216,135,14)" fg:x="951" fg:w="1"/><text x="15.3094%" y="239.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.11%)</title><rect x="15.0752%" y="325" width="0.1108%" height="15" fill="rgb(241,47,5)" fg:x="952" fg:w="7"/><text x="15.3252%" y="335.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.11%)</title><rect x="15.0752%" y="309" width="0.1108%" height="15" fill="rgb(233,42,35)" fg:x="952" fg:w="7"/><text x="15.3252%" y="319.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (1 samples, 0.02%)</title><rect x="15.1702%" y="293" width="0.0158%" height="15" fill="rgb(231,13,6)" fg:x="958" fg:w="1"/><text x="15.4202%" y="303.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.08%)</title><rect x="15.1861%" y="325" width="0.0792%" height="15" fill="rgb(207,181,40)" fg:x="959" fg:w="5"/><text x="15.4361%" y="335.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (7 samples, 0.11%)</title><rect x="15.2652%" y="325" width="0.1108%" height="15" fill="rgb(254,173,49)" fg:x="964" fg:w="7"/><text x="15.5152%" y="335.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (2 samples, 0.03%)</title><rect x="15.3761%" y="325" width="0.0317%" height="15" fill="rgb(221,1,38)" fg:x="971" fg:w="2"/><text x="15.6261%" y="335.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::insert (260 samples, 4.12%)</title><rect x="42.9770%" y="277" width="4.1172%" height="15" fill="rgb(206,124,46)" fg:x="2714" fg:w="260"/><text x="43.2270%" y="287.50">date..</text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,812 samples, 28.69%)</title><rect x="18.8440%" y="293" width="28.6936%" height="15" fill="rgb(249,21,11)" fg:x="1190" fg:w="1812"/><text x="19.0940%" y="303.50">dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (28 samples, 0.44%)</title><rect x="47.0942%" y="277" width="0.4434%" height="15" fill="rgb(222,201,40)" fg:x="2974" fg:w="28"/><text x="47.3442%" y="287.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.27%)</title><rect x="47.5376%" y="293" width="0.2692%" height="15" fill="rgb(235,61,29)" fg:x="3002" fg:w="17"/><text x="47.7876%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.27%)</title><rect x="47.5376%" y="277" width="0.2692%" height="15" fill="rgb(219,207,3)" fg:x="3002" fg:w="17"/><text x="47.7876%" y="287.50"></text></g><g><title>dateo_fun_remover`&lt;ahash::hash_map::AHashMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,056 samples, 32.56%)</title><rect x="15.4078%" y="309" width="32.5574%" height="15" fill="rgb(222,56,46)" fg:x="973" fg:w="2056"/><text x="15.6578%" y="319.50">dateo_fun_remover`&lt;ahash::hash_map::AHashMap&lt;K,V&gt; as ..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (10 samples, 0.16%)</title><rect x="47.8068%" y="293" width="0.1584%" height="15" fill="rgb(239,76,54)" fg:x="3019" fg:w="10"/><text x="48.0568%" y="303.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (2,062 samples, 32.65%)</title><rect x="15.4078%" y="325" width="32.6524%" height="15" fill="rgb(231,124,27)" fg:x="973" fg:w="2062"/><text x="15.6578%" y="335.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::..</text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.10%)</title><rect x="47.9652%" y="309" width="0.0950%" height="15" fill="rgb(249,195,6)" fg:x="3029" fg:w="6"/><text x="48.2152%" y="319.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$pow (1 samples, 0.02%)</title><rect x="58.9549%" y="293" width="0.0158%" height="15" fill="rgb(237,174,47)" fg:x="3723" fg:w="1"/><text x="59.2049%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1671 (2 samples, 0.03%)</title><rect x="58.9707%" y="229" width="0.0317%" height="15" fill="rgb(206,201,31)" fg:x="3724" fg:w="2"/><text x="59.2207%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc9ddf (2 samples, 0.03%)</title><rect x="58.9707%" y="213" width="0.0317%" height="15" fill="rgb(231,57,52)" fg:x="3724" fg:w="2"/><text x="59.2207%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (2 samples, 0.03%)</title><rect x="58.9707%" y="197" width="0.0317%" height="15" fill="rgb(248,177,22)" fg:x="3724" fg:w="2"/><text x="59.2207%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (2 samples, 0.03%)</title><rect x="58.9707%" y="181" width="0.0317%" height="15" fill="rgb(215,211,37)" fg:x="3724" fg:w="2"/><text x="59.2207%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1765 (1 samples, 0.02%)</title><rect x="59.0024%" y="229" width="0.0158%" height="15" fill="rgb(241,128,51)" fg:x="3726" fg:w="1"/><text x="59.2524%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe517 (1 samples, 0.02%)</title><rect x="59.0024%" y="213" width="0.0158%" height="15" fill="rgb(227,165,31)" fg:x="3726" fg:w="1"/><text x="59.2524%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc822e (1 samples, 0.02%)</title><rect x="59.0024%" y="197" width="0.0158%" height="15" fill="rgb(228,167,24)" fg:x="3726" fg:w="1"/><text x="59.2524%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc7794 (1 samples, 0.02%)</title><rect x="59.0024%" y="181" width="0.0158%" height="15" fill="rgb(228,143,12)" fg:x="3726" fg:w="1"/><text x="59.2524%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.02%)</title><rect x="59.0024%" y="165" width="0.0158%" height="15" fill="rgb(249,149,8)" fg:x="3726" fg:w="1"/><text x="59.2524%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1794 (2 samples, 0.03%)</title><rect x="59.0182%" y="229" width="0.0317%" height="15" fill="rgb(243,35,44)" fg:x="3727" fg:w="2"/><text x="59.2682%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.03%)</title><rect x="59.0182%" y="213" width="0.0317%" height="15" fill="rgb(246,89,9)" fg:x="3727" fg:w="2"/><text x="59.2682%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.03%)</title><rect x="59.0182%" y="197" width="0.0317%" height="15" fill="rgb(233,213,13)" fg:x="3727" fg:w="2"/><text x="59.2682%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.46%)</title><rect x="58.9707%" y="293" width="0.4592%" height="15" fill="rgb(233,141,41)" fg:x="3724" fg:w="29"/><text x="59.2207%" y="303.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (29 samples, 0.46%)</title><rect x="58.9707%" y="277" width="0.4592%" height="15" fill="rgb(239,167,4)" fg:x="3724" fg:w="29"/><text x="59.2207%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (29 samples, 0.46%)</title><rect x="58.9707%" y="261" width="0.4592%" height="15" fill="rgb(209,217,16)" fg:x="3724" fg:w="29"/><text x="59.2207%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (29 samples, 0.46%)</title><rect x="58.9707%" y="245" width="0.4592%" height="15" fill="rgb(219,88,35)" fg:x="3724" fg:w="29"/><text x="59.2207%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17a6 (24 samples, 0.38%)</title><rect x="59.0499%" y="229" width="0.3800%" height="15" fill="rgb(220,193,23)" fg:x="3729" fg:w="24"/><text x="59.2999%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.38%)</title><rect x="59.0499%" y="213" width="0.3800%" height="15" fill="rgb(230,90,52)" fg:x="3729" fg:w="24"/><text x="59.2999%" y="223.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_no_limit (37 samples, 0.59%)</title><rect x="59.4299%" y="293" width="0.5859%" height="15" fill="rgb(252,106,19)" fg:x="3753" fg:w="37"/><text x="59.6799%" y="303.50"></text></g><g><title>libsystem_m.dylib`fmod (5 samples, 0.08%)</title><rect x="59.9367%" y="277" width="0.0792%" height="15" fill="rgb(206,74,20)" fg:x="3785" fg:w="5"/><text x="60.1867%" y="287.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (111 samples, 1.76%)</title><rect x="60.0158%" y="293" width="1.7577%" height="15" fill="rgb(230,138,44)" fg:x="3790" fg:w="111"/><text x="60.2658%" y="303.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (639 samples, 10.12%)</title><rect x="51.6706%" y="309" width="10.1188%" height="15" fill="rgb(235,182,43)" fg:x="3263" fg:w="639"/><text x="51.9206%" y="319.50">dateo_fun_remov..</text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (1 samples, 0.02%)</title><rect x="61.7736%" y="293" width="0.0158%" height="15" fill="rgb(242,16,51)" fg:x="3901" fg:w="1"/><text x="62.0236%" y="303.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="61.7894%" y="309" width="0.1267%" height="15" fill="rgb(248,9,4)" fg:x="3902" fg:w="8"/><text x="62.0394%" y="319.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (434 samples, 6.87%)</title><rect x="61.9161%" y="309" width="6.8725%" height="15" fill="rgb(210,31,22)" fg:x="3910" fg:w="434"/><text x="62.1661%" y="319.50">dateo_fun..</text></g><g><title>dateo_fun_remover`DYLD-STUB$$log (7 samples, 0.11%)</title><rect x="68.7886%" y="309" width="0.1108%" height="15" fill="rgb(239,54,39)" fg:x="4344" fg:w="7"/><text x="69.0386%" y="319.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="68.8994%" y="309" width="0.0158%" height="15" fill="rgb(230,99,41)" fg:x="4351" fg:w="1"/><text x="69.1494%" y="319.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$pow (3 samples, 0.05%)</title><rect x="68.9153%" y="309" width="0.0475%" height="15" fill="rgb(253,106,12)" fg:x="4352" fg:w="3"/><text x="69.1653%" y="319.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (4 samples, 0.06%)</title><rect x="68.9628%" y="309" width="0.0633%" height="15" fill="rgb(213,46,41)" fg:x="4355" fg:w="4"/><text x="69.2128%" y="319.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (1 samples, 0.02%)</title><rect x="69.0261%" y="309" width="0.0158%" height="15" fill="rgb(215,133,35)" fg:x="4359" fg:w="1"/><text x="69.2761%" y="319.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (1 samples, 0.02%)</title><rect x="69.0420%" y="309" width="0.0158%" height="15" fill="rgb(213,28,5)" fg:x="4360" fg:w="1"/><text x="69.2920%" y="319.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (1 samples, 0.02%)</title><rect x="69.0578%" y="309" width="0.0158%" height="15" fill="rgb(215,77,49)" fg:x="4361" fg:w="1"/><text x="69.3078%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1671 (2 samples, 0.03%)</title><rect x="69.0895%" y="245" width="0.0317%" height="15" fill="rgb(248,100,22)" fg:x="4363" fg:w="2"/><text x="69.3395%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc9ddf (2 samples, 0.03%)</title><rect x="69.0895%" y="229" width="0.0317%" height="15" fill="rgb(208,67,9)" fg:x="4363" fg:w="2"/><text x="69.3395%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (2 samples, 0.03%)</title><rect x="69.0895%" y="213" width="0.0317%" height="15" fill="rgb(219,133,21)" fg:x="4363" fg:w="2"/><text x="69.3395%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (2 samples, 0.03%)</title><rect x="69.0895%" y="197" width="0.0317%" height="15" fill="rgb(246,46,29)" fg:x="4363" fg:w="2"/><text x="69.3395%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17a6 (3 samples, 0.05%)</title><rect x="69.1211%" y="245" width="0.0475%" height="15" fill="rgb(246,185,52)" fg:x="4365" fg:w="3"/><text x="69.3711%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="69.1211%" y="229" width="0.0475%" height="15" fill="rgb(252,136,11)" fg:x="4365" fg:w="3"/><text x="69.3711%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="69.1686%" y="213" width="0.0317%" height="15" fill="rgb(219,138,53)" fg:x="4368" fg:w="2"/><text x="69.4186%" y="223.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.25%)</title><rect x="69.0736%" y="309" width="0.2534%" height="15" fill="rgb(211,51,23)" fg:x="4362" fg:w="16"/><text x="69.3236%" y="319.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (15 samples, 0.24%)</title><rect x="69.0895%" y="293" width="0.2375%" height="15" fill="rgb(247,221,28)" fg:x="4363" fg:w="15"/><text x="69.3395%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (15 samples, 0.24%)</title><rect x="69.0895%" y="277" width="0.2375%" height="15" fill="rgb(251,222,45)" fg:x="4363" fg:w="15"/><text x="69.3395%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (15 samples, 0.24%)</title><rect x="69.0895%" y="261" width="0.2375%" height="15" fill="rgb(217,162,53)" fg:x="4363" fg:w="15"/><text x="69.3395%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17b3 (10 samples, 0.16%)</title><rect x="69.1686%" y="245" width="0.1584%" height="15" fill="rgb(229,93,14)" fg:x="4368" fg:w="10"/><text x="69.4186%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd1a5f (10 samples, 0.16%)</title><rect x="69.1686%" y="229" width="0.1584%" height="15" fill="rgb(209,67,49)" fg:x="4368" fg:w="10"/><text x="69.4186%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc868c (8 samples, 0.13%)</title><rect x="69.2003%" y="213" width="0.1267%" height="15" fill="rgb(213,87,29)" fg:x="4370" fg:w="8"/><text x="69.4503%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc9ce7 (8 samples, 0.13%)</title><rect x="69.2003%" y="197" width="0.1267%" height="15" fill="rgb(205,151,52)" fg:x="4370" fg:w="8"/><text x="69.4503%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (8 samples, 0.13%)</title><rect x="69.2003%" y="181" width="0.1267%" height="15" fill="rgb(253,215,39)" fg:x="4370" fg:w="8"/><text x="69.4503%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_no_limit (3 samples, 0.05%)</title><rect x="69.3270%" y="309" width="0.0475%" height="15" fill="rgb(221,220,41)" fg:x="4378" fg:w="3"/><text x="69.5770%" y="319.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="69.3745%" y="293" width="0.0158%" height="15" fill="rgb(218,133,21)" fg:x="4381" fg:w="1"/><text x="69.6245%" y="303.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="69.3903%" y="277" width="0.0158%" height="15" fill="rgb(221,193,43)" fg:x="4382" fg:w="1"/><text x="69.6403%" y="287.50"></text></g><g><title>libsystem_m.dylib`trunc (1 samples, 0.02%)</title><rect x="69.3903%" y="261" width="0.0158%" height="15" fill="rgb(240,128,52)" fg:x="4382" fg:w="1"/><text x="69.6403%" y="271.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (3 samples, 0.05%)</title><rect x="69.3745%" y="309" width="0.0475%" height="15" fill="rgb(253,114,12)" fg:x="4381" fg:w="3"/><text x="69.6245%" y="319.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (2 samples, 0.03%)</title><rect x="69.3903%" y="293" width="0.0317%" height="15" fill="rgb(215,223,47)" fg:x="4382" fg:w="2"/><text x="69.6403%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (1 samples, 0.02%)</title><rect x="69.4062%" y="277" width="0.0158%" height="15" fill="rgb(248,225,23)" fg:x="4383" fg:w="1"/><text x="69.6562%" y="287.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (1 samples, 0.02%)</title><rect x="75.3127%" y="261" width="0.0158%" height="15" fill="rgb(250,108,0)" fg:x="4756" fg:w="1"/><text x="75.5627%" y="271.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (41 samples, 0.65%)</title><rect x="75.3286%" y="261" width="0.6492%" height="15" fill="rgb(228,208,7)" fg:x="4757" fg:w="41"/><text x="75.5786%" y="271.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (4 samples, 0.06%)</title><rect x="75.9778%" y="261" width="0.0633%" height="15" fill="rgb(244,45,10)" fg:x="4798" fg:w="4"/><text x="76.2278%" y="271.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (215 samples, 3.40%)</title><rect x="72.6524%" y="277" width="3.4046%" height="15" fill="rgb(207,125,25)" fg:x="4588" fg:w="215"/><text x="72.9024%" y="287.50">dat..</text></g><g><title>libsystem_m.dylib`trunc (1 samples, 0.02%)</title><rect x="76.0412%" y="261" width="0.0158%" height="15" fill="rgb(210,195,18)" fg:x="4802" fg:w="1"/><text x="76.2912%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe1cb (1 samples, 0.02%)</title><rect x="76.0728%" y="213" width="0.0158%" height="15" fill="rgb(249,80,12)" fg:x="4804" fg:w="1"/><text x="76.3228%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (2 samples, 0.03%)</title><rect x="76.0728%" y="229" width="0.0317%" height="15" fill="rgb(221,65,9)" fg:x="4804" fg:w="2"/><text x="76.3228%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="76.0887%" y="213" width="0.0158%" height="15" fill="rgb(235,49,36)" fg:x="4805" fg:w="1"/><text x="76.3387%" y="223.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="76.0570%" y="277" width="0.0633%" height="15" fill="rgb(225,32,20)" fg:x="4803" fg:w="4"/><text x="76.3070%" y="287.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="76.0728%" y="261" width="0.0475%" height="15" fill="rgb(215,141,46)" fg:x="4804" fg:w="3"/><text x="76.3228%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (3 samples, 0.05%)</title><rect x="76.0728%" y="245" width="0.0475%" height="15" fill="rgb(250,160,47)" fg:x="4804" fg:w="3"/><text x="76.3228%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0750 (1 samples, 0.02%)</title><rect x="76.1045%" y="229" width="0.0158%" height="15" fill="rgb(216,222,40)" fg:x="4806" fg:w="1"/><text x="76.3545%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (1 samples, 0.02%)</title><rect x="76.1203%" y="277" width="0.0158%" height="15" fill="rgb(234,217,39)" fg:x="4807" fg:w="1"/><text x="76.3703%" y="287.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (2 samples, 0.03%)</title><rect x="76.1362%" y="277" width="0.0317%" height="15" fill="rgb(207,178,40)" fg:x="4808" fg:w="2"/><text x="76.3862%" y="287.50"></text></g><g><title>libsystem_m.dylib`trunc (34 samples, 0.54%)</title><rect x="76.1679%" y="277" width="0.5384%" height="15" fill="rgb(221,136,13)" fg:x="4810" fg:w="34"/><text x="76.4179%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd393 (1 samples, 0.02%)</title><rect x="76.7063%" y="277" width="0.0158%" height="15" fill="rgb(249,199,10)" fg:x="4844" fg:w="1"/><text x="76.9563%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3a0 (1 samples, 0.02%)</title><rect x="76.7221%" y="277" width="0.0158%" height="15" fill="rgb(249,222,13)" fg:x="4845" fg:w="1"/><text x="76.9721%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (6 samples, 0.10%)</title><rect x="76.7379%" y="277" width="0.0950%" height="15" fill="rgb(244,185,38)" fg:x="4846" fg:w="6"/><text x="76.9879%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3eb (1 samples, 0.02%)</title><rect x="76.8329%" y="277" width="0.0158%" height="15" fill="rgb(236,202,9)" fg:x="4852" fg:w="1"/><text x="77.0829%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3f8 (1 samples, 0.02%)</title><rect x="76.8488%" y="277" width="0.0158%" height="15" fill="rgb(250,229,37)" fg:x="4853" fg:w="1"/><text x="77.0988%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd407 (2 samples, 0.03%)</title><rect x="76.8646%" y="277" width="0.0317%" height="15" fill="rgb(206,174,23)" fg:x="4854" fg:w="2"/><text x="77.1146%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd40a (2 samples, 0.03%)</title><rect x="76.8963%" y="277" width="0.0317%" height="15" fill="rgb(211,33,43)" fg:x="4856" fg:w="2"/><text x="77.1463%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd414 (1 samples, 0.02%)</title><rect x="76.9279%" y="277" width="0.0158%" height="15" fill="rgb(245,58,50)" fg:x="4858" fg:w="1"/><text x="77.1779%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd41b (1 samples, 0.02%)</title><rect x="76.9438%" y="277" width="0.0158%" height="15" fill="rgb(244,68,36)" fg:x="4859" fg:w="1"/><text x="77.1938%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd493 (1 samples, 0.02%)</title><rect x="76.9596%" y="277" width="0.0158%" height="15" fill="rgb(232,229,15)" fg:x="4860" fg:w="1"/><text x="77.2096%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4a4 (2 samples, 0.03%)</title><rect x="76.9755%" y="277" width="0.0317%" height="15" fill="rgb(254,30,23)" fg:x="4861" fg:w="2"/><text x="77.2255%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ce (6 samples, 0.10%)</title><rect x="77.0071%" y="277" width="0.0950%" height="15" fill="rgb(235,160,14)" fg:x="4863" fg:w="6"/><text x="77.2571%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ef (4 samples, 0.06%)</title><rect x="77.1021%" y="277" width="0.0633%" height="15" fill="rgb(212,155,44)" fg:x="4869" fg:w="4"/><text x="77.3521%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd504 (1 samples, 0.02%)</title><rect x="77.1655%" y="277" width="0.0158%" height="15" fill="rgb(226,2,50)" fg:x="4873" fg:w="1"/><text x="77.4155%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd509 (6 samples, 0.10%)</title><rect x="77.1813%" y="277" width="0.0950%" height="15" fill="rgb(234,177,6)" fg:x="4874" fg:w="6"/><text x="77.4313%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd55a (1 samples, 0.02%)</title><rect x="77.2763%" y="277" width="0.0158%" height="15" fill="rgb(217,24,9)" fg:x="4880" fg:w="1"/><text x="77.5263%" y="287.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (446 samples, 7.06%)</title><rect x="70.2771%" y="293" width="7.0625%" height="15" fill="rgb(220,13,46)" fg:x="4438" fg:w="446"/><text x="70.5271%" y="303.50">dateo_fun..</text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5a4 (3 samples, 0.05%)</title><rect x="77.2922%" y="277" width="0.0475%" height="15" fill="rgb(239,221,27)" fg:x="4881" fg:w="3"/><text x="77.5422%" y="287.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="77.3397%" y="293" width="0.0158%" height="15" fill="rgb(222,198,25)" fg:x="4884" fg:w="1"/><text x="77.5897%" y="303.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (1 samples, 0.02%)</title><rect x="77.3555%" y="293" width="0.0158%" height="15" fill="rgb(211,99,13)" fg:x="4885" fg:w="1"/><text x="77.6055%" y="303.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (1 samples, 0.02%)</title><rect x="77.4030%" y="277" width="0.0158%" height="15" fill="rgb(232,111,31)" fg:x="4888" fg:w="1"/><text x="77.6530%" y="287.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (4 samples, 0.06%)</title><rect x="77.4505%" y="261" width="0.0633%" height="15" fill="rgb(245,82,37)" fg:x="4891" fg:w="4"/><text x="77.7005%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbdedd (1 samples, 0.02%)</title><rect x="77.5139%" y="261" width="0.0158%" height="15" fill="rgb(227,149,46)" fg:x="4895" fg:w="1"/><text x="77.7639%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbdf65 (2 samples, 0.03%)</title><rect x="77.5297%" y="261" width="0.0317%" height="15" fill="rgb(218,36,50)" fg:x="4896" fg:w="2"/><text x="77.7797%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbdf8b (1 samples, 0.02%)</title><rect x="77.5614%" y="261" width="0.0158%" height="15" fill="rgb(226,80,48)" fg:x="4898" fg:w="1"/><text x="77.8114%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe004 (8 samples, 0.13%)</title><rect x="77.5772%" y="261" width="0.1267%" height="15" fill="rgb(238,224,15)" fg:x="4899" fg:w="8"/><text x="77.8272%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf184 (1 samples, 0.02%)</title><rect x="77.7039%" y="261" width="0.0158%" height="15" fill="rgb(241,136,10)" fg:x="4907" fg:w="1"/><text x="77.9539%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf20d (1 samples, 0.02%)</title><rect x="77.7197%" y="261" width="0.0158%" height="15" fill="rgb(208,32,45)" fg:x="4908" fg:w="1"/><text x="77.9697%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc067b (1 samples, 0.02%)</title><rect x="77.7356%" y="245" width="0.0158%" height="15" fill="rgb(207,135,9)" fg:x="4909" fg:w="1"/><text x="77.9856%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe03e (1 samples, 0.02%)</title><rect x="77.7514%" y="229" width="0.0158%" height="15" fill="rgb(206,86,44)" fg:x="4910" fg:w="1"/><text x="78.0014%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe04e (1 samples, 0.02%)</title><rect x="77.7672%" y="229" width="0.0158%" height="15" fill="rgb(245,177,15)" fg:x="4911" fg:w="1"/><text x="78.0172%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe068 (1 samples, 0.02%)</title><rect x="77.7831%" y="229" width="0.0158%" height="15" fill="rgb(206,64,50)" fg:x="4912" fg:w="1"/><text x="78.0331%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe190 (1 samples, 0.02%)</title><rect x="77.7989%" y="229" width="0.0158%" height="15" fill="rgb(234,36,40)" fg:x="4913" fg:w="1"/><text x="78.0489%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe1a6 (1 samples, 0.02%)</title><rect x="77.8147%" y="229" width="0.0158%" height="15" fill="rgb(213,64,8)" fg:x="4914" fg:w="1"/><text x="78.0647%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe1cb (4 samples, 0.06%)</title><rect x="77.8306%" y="229" width="0.0633%" height="15" fill="rgb(210,75,36)" fg:x="4915" fg:w="4"/><text x="78.0806%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf6cd (1 samples, 0.02%)</title><rect x="77.8939%" y="197" width="0.0158%" height="15" fill="rgb(229,88,21)" fg:x="4919" fg:w="1"/><text x="78.1439%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc07a0 (2 samples, 0.03%)</title><rect x="77.8939%" y="229" width="0.0317%" height="15" fill="rgb(252,204,47)" fg:x="4919" fg:w="2"/><text x="78.1439%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbe464 (2 samples, 0.03%)</title><rect x="77.8939%" y="213" width="0.0317%" height="15" fill="rgb(208,77,27)" fg:x="4919" fg:w="2"/><text x="78.1439%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf7de (1 samples, 0.02%)</title><rect x="77.9097%" y="197" width="0.0158%" height="15" fill="rgb(221,76,26)" fg:x="4920" fg:w="1"/><text x="78.1597%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc015d (1 samples, 0.02%)</title><rect x="77.9097%" y="181" width="0.0158%" height="15" fill="rgb(225,139,18)" fg:x="4920" fg:w="1"/><text x="78.1597%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd393 (1 samples, 0.02%)</title><rect x="77.9256%" y="213" width="0.0158%" height="15" fill="rgb(230,137,11)" fg:x="4921" fg:w="1"/><text x="78.1756%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3a0 (1 samples, 0.02%)</title><rect x="77.9414%" y="213" width="0.0158%" height="15" fill="rgb(212,28,1)" fg:x="4922" fg:w="1"/><text x="78.1914%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3ca (1 samples, 0.02%)</title><rect x="77.9572%" y="213" width="0.0158%" height="15" fill="rgb(248,164,17)" fg:x="4923" fg:w="1"/><text x="78.2072%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (5 samples, 0.08%)</title><rect x="77.9731%" y="213" width="0.0792%" height="15" fill="rgb(222,171,42)" fg:x="4924" fg:w="5"/><text x="78.2231%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3f8 (1 samples, 0.02%)</title><rect x="78.0523%" y="213" width="0.0158%" height="15" fill="rgb(243,84,45)" fg:x="4929" fg:w="1"/><text x="78.3023%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd407 (1 samples, 0.02%)</title><rect x="78.0681%" y="213" width="0.0158%" height="15" fill="rgb(252,49,23)" fg:x="4930" fg:w="1"/><text x="78.3181%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd40a (1 samples, 0.02%)</title><rect x="78.0839%" y="213" width="0.0158%" height="15" fill="rgb(215,19,7)" fg:x="4931" fg:w="1"/><text x="78.3339%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd42b (1 samples, 0.02%)</title><rect x="78.0998%" y="213" width="0.0158%" height="15" fill="rgb(238,81,41)" fg:x="4932" fg:w="1"/><text x="78.3498%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd442 (1 samples, 0.02%)</title><rect x="78.1156%" y="213" width="0.0158%" height="15" fill="rgb(210,199,37)" fg:x="4933" fg:w="1"/><text x="78.3656%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd445 (1 samples, 0.02%)</title><rect x="78.1314%" y="213" width="0.0158%" height="15" fill="rgb(244,192,49)" fg:x="4934" fg:w="1"/><text x="78.3814%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4c1 (1 samples, 0.02%)</title><rect x="78.1473%" y="213" width="0.0158%" height="15" fill="rgb(226,211,11)" fg:x="4935" fg:w="1"/><text x="78.3973%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ce (2 samples, 0.03%)</title><rect x="78.1631%" y="213" width="0.0317%" height="15" fill="rgb(236,162,54)" fg:x="4936" fg:w="2"/><text x="78.4131%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4d9 (1 samples, 0.02%)</title><rect x="78.1948%" y="213" width="0.0158%" height="15" fill="rgb(220,229,9)" fg:x="4938" fg:w="1"/><text x="78.4448%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4e7 (2 samples, 0.03%)</title><rect x="78.2106%" y="213" width="0.0317%" height="15" fill="rgb(250,87,22)" fg:x="4939" fg:w="2"/><text x="78.4606%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd504 (1 samples, 0.02%)</title><rect x="78.2423%" y="213" width="0.0158%" height="15" fill="rgb(239,43,17)" fg:x="4941" fg:w="1"/><text x="78.4923%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd509 (1 samples, 0.02%)</title><rect x="78.2581%" y="213" width="0.0158%" height="15" fill="rgb(231,177,25)" fg:x="4942" fg:w="1"/><text x="78.5081%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd54a (1 samples, 0.02%)</title><rect x="78.2740%" y="213" width="0.0158%" height="15" fill="rgb(219,179,1)" fg:x="4943" fg:w="1"/><text x="78.5240%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0852 (24 samples, 0.38%)</title><rect x="77.9256%" y="229" width="0.3800%" height="15" fill="rgb(238,219,53)" fg:x="4921" fg:w="24"/><text x="78.1756%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5e4 (1 samples, 0.02%)</title><rect x="78.2898%" y="213" width="0.0158%" height="15" fill="rgb(232,167,36)" fg:x="4944" fg:w="1"/><text x="78.5398%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0855 (1 samples, 0.02%)</title><rect x="78.3056%" y="229" width="0.0158%" height="15" fill="rgb(244,19,51)" fg:x="4945" fg:w="1"/><text x="78.5556%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc086f (2 samples, 0.03%)</title><rect x="78.3215%" y="229" width="0.0317%" height="15" fill="rgb(224,6,22)" fg:x="4946" fg:w="2"/><text x="78.5715%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="78.3373%" y="213" width="0.0158%" height="15" fill="rgb(224,145,5)" fg:x="4947" fg:w="1"/><text x="78.5873%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76fc (1 samples, 0.02%)</title><rect x="78.3531%" y="213" width="0.0158%" height="15" fill="rgb(234,130,49)" fg:x="4948" fg:w="1"/><text x="78.6031%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd770c (1 samples, 0.02%)</title><rect x="78.3690%" y="213" width="0.0158%" height="15" fill="rgb(254,6,2)" fg:x="4949" fg:w="1"/><text x="78.6190%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77ff (1 samples, 0.02%)</title><rect x="78.3848%" y="213" width="0.0158%" height="15" fill="rgb(208,96,46)" fg:x="4950" fg:w="1"/><text x="78.6348%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd782f (2 samples, 0.03%)</title><rect x="78.4006%" y="213" width="0.0317%" height="15" fill="rgb(239,3,39)" fg:x="4951" fg:w="2"/><text x="78.6506%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7884 (1 samples, 0.02%)</title><rect x="78.4323%" y="213" width="0.0158%" height="15" fill="rgb(233,210,1)" fg:x="4953" fg:w="1"/><text x="78.6823%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7891 (5 samples, 0.08%)</title><rect x="78.4481%" y="213" width="0.0792%" height="15" fill="rgb(244,137,37)" fg:x="4954" fg:w="5"/><text x="78.6981%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78f5 (1 samples, 0.02%)</title><rect x="78.5273%" y="213" width="0.0158%" height="15" fill="rgb(240,136,2)" fg:x="4959" fg:w="1"/><text x="78.7773%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7901 (2 samples, 0.03%)</title><rect x="78.5432%" y="213" width="0.0317%" height="15" fill="rgb(239,18,37)" fg:x="4960" fg:w="2"/><text x="78.7932%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="78.5432%" y="197" width="0.0317%" height="15" fill="rgb(218,185,22)" fg:x="4960" fg:w="2"/><text x="78.7932%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7908 (1 samples, 0.02%)</title><rect x="78.5748%" y="213" width="0.0158%" height="15" fill="rgb(225,218,4)" fg:x="4962" fg:w="1"/><text x="78.8248%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7912 (1 samples, 0.02%)</title><rect x="78.5907%" y="213" width="0.0158%" height="15" fill="rgb(230,182,32)" fg:x="4963" fg:w="1"/><text x="78.8407%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7924 (1 samples, 0.02%)</title><rect x="78.6065%" y="213" width="0.0158%" height="15" fill="rgb(242,56,43)" fg:x="4964" fg:w="1"/><text x="78.8565%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7947 (1 samples, 0.02%)</title><rect x="78.6223%" y="213" width="0.0158%" height="15" fill="rgb(233,99,24)" fg:x="4965" fg:w="1"/><text x="78.8723%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799e (3 samples, 0.05%)</title><rect x="78.6382%" y="213" width="0.0475%" height="15" fill="rgb(234,209,42)" fg:x="4966" fg:w="3"/><text x="78.8882%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79a0 (1 samples, 0.02%)</title><rect x="78.6857%" y="213" width="0.0158%" height="15" fill="rgb(227,7,12)" fg:x="4969" fg:w="1"/><text x="78.9357%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79a8 (1 samples, 0.02%)</title><rect x="78.7015%" y="213" width="0.0158%" height="15" fill="rgb(245,203,43)" fg:x="4970" fg:w="1"/><text x="78.9515%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79b7 (2 samples, 0.03%)</title><rect x="78.7173%" y="213" width="0.0317%" height="15" fill="rgb(238,205,33)" fg:x="4971" fg:w="2"/><text x="78.9673%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc087c (26 samples, 0.41%)</title><rect x="78.3531%" y="229" width="0.4117%" height="15" fill="rgb(231,56,7)" fg:x="4948" fg:w="26"/><text x="78.6031%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804be0472 (1 samples, 0.02%)</title><rect x="78.7490%" y="213" width="0.0158%" height="15" fill="rgb(244,186,29)" fg:x="4973" fg:w="1"/><text x="78.9990%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf235 (66 samples, 1.05%)</title><rect x="77.7356%" y="261" width="1.0451%" height="15" fill="rgb(234,111,31)" fg:x="4909" fg:w="66"/><text x="77.9856%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc0698 (65 samples, 1.03%)</title><rect x="77.7514%" y="245" width="1.0293%" height="15" fill="rgb(241,149,10)" fg:x="4910" fg:w="65"/><text x="78.0014%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc17b3 (1 samples, 0.02%)</title><rect x="78.7648%" y="229" width="0.0158%" height="15" fill="rgb(249,206,44)" fg:x="4974" fg:w="1"/><text x="79.0148%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc2006 (1 samples, 0.02%)</title><rect x="78.7648%" y="213" width="0.0158%" height="15" fill="rgb(251,153,30)" fg:x="4974" fg:w="1"/><text x="79.0148%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc246c (1 samples, 0.02%)</title><rect x="78.7648%" y="197" width="0.0158%" height="15" fill="rgb(239,152,38)" fg:x="4974" fg:w="1"/><text x="79.0148%" y="207.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (90 samples, 1.43%)</title><rect x="77.3713%" y="293" width="1.4252%" height="15" fill="rgb(249,139,47)" fg:x="4886" fg:w="90"/><text x="77.6213%" y="303.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (87 samples, 1.38%)</title><rect x="77.4188%" y="277" width="1.3777%" height="15" fill="rgb(244,64,35)" fg:x="4889" fg:w="87"/><text x="77.6688%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbf238 (1 samples, 0.02%)</title><rect x="78.7807%" y="261" width="0.0158%" height="15" fill="rgb(216,46,15)" fg:x="4975" fg:w="1"/><text x="79.0307%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd393 (4 samples, 0.06%)</title><rect x="78.7965%" y="293" width="0.0633%" height="15" fill="rgb(250,74,19)" fg:x="4976" fg:w="4"/><text x="79.0465%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3a0 (7 samples, 0.11%)</title><rect x="78.8599%" y="293" width="0.1108%" height="15" fill="rgb(249,42,33)" fg:x="4980" fg:w="7"/><text x="79.1099%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3b2 (2 samples, 0.03%)</title><rect x="78.9707%" y="293" width="0.0317%" height="15" fill="rgb(242,149,17)" fg:x="4987" fg:w="2"/><text x="79.2207%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3ca (2 samples, 0.03%)</title><rect x="79.0024%" y="293" width="0.0317%" height="15" fill="rgb(244,29,21)" fg:x="4989" fg:w="2"/><text x="79.2524%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3d9 (2 samples, 0.03%)</title><rect x="79.0340%" y="293" width="0.0317%" height="15" fill="rgb(220,130,37)" fg:x="4991" fg:w="2"/><text x="79.2840%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3dd (10 samples, 0.16%)</title><rect x="79.0657%" y="293" width="0.1584%" height="15" fill="rgb(211,67,2)" fg:x="4993" fg:w="10"/><text x="79.3157%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3e7 (51 samples, 0.81%)</title><rect x="79.2241%" y="293" width="0.8076%" height="15" fill="rgb(235,68,52)" fg:x="5003" fg:w="51"/><text x="79.4741%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3eb (4 samples, 0.06%)</title><rect x="80.0317%" y="293" width="0.0633%" height="15" fill="rgb(246,142,3)" fg:x="5054" fg:w="4"/><text x="80.2817%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd3f8 (3 samples, 0.05%)</title><rect x="80.0950%" y="293" width="0.0475%" height="15" fill="rgb(241,25,7)" fg:x="5058" fg:w="3"/><text x="80.3450%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd407 (10 samples, 0.16%)</title><rect x="80.1425%" y="293" width="0.1584%" height="15" fill="rgb(242,119,39)" fg:x="5061" fg:w="10"/><text x="80.3925%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd40a (2 samples, 0.03%)</title><rect x="80.3009%" y="293" width="0.0317%" height="15" fill="rgb(241,98,45)" fg:x="5071" fg:w="2"/><text x="80.5509%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd414 (3 samples, 0.05%)</title><rect x="80.3325%" y="293" width="0.0475%" height="15" fill="rgb(254,28,30)" fg:x="5073" fg:w="3"/><text x="80.5825%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd41b (10 samples, 0.16%)</title><rect x="80.3800%" y="293" width="0.1584%" height="15" fill="rgb(241,142,54)" fg:x="5076" fg:w="10"/><text x="80.6300%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd42b (4 samples, 0.06%)</title><rect x="80.5384%" y="293" width="0.0633%" height="15" fill="rgb(222,85,15)" fg:x="5086" fg:w="4"/><text x="80.7884%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd439 (3 samples, 0.05%)</title><rect x="80.6017%" y="293" width="0.0475%" height="15" fill="rgb(210,85,47)" fg:x="5090" fg:w="3"/><text x="80.8517%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd442 (5 samples, 0.08%)</title><rect x="80.6492%" y="293" width="0.0792%" height="15" fill="rgb(224,206,25)" fg:x="5093" fg:w="5"/><text x="80.8992%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd445 (4 samples, 0.06%)</title><rect x="80.7284%" y="293" width="0.0633%" height="15" fill="rgb(243,201,19)" fg:x="5098" fg:w="4"/><text x="80.9784%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd452 (4 samples, 0.06%)</title><rect x="80.7918%" y="293" width="0.0633%" height="15" fill="rgb(236,59,4)" fg:x="5102" fg:w="4"/><text x="81.0418%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd467 (2 samples, 0.03%)</title><rect x="80.8551%" y="293" width="0.0317%" height="15" fill="rgb(254,179,45)" fg:x="5106" fg:w="2"/><text x="81.1051%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd484 (2 samples, 0.03%)</title><rect x="80.8868%" y="293" width="0.0317%" height="15" fill="rgb(226,14,10)" fg:x="5108" fg:w="2"/><text x="81.1368%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd493 (5 samples, 0.08%)</title><rect x="80.9184%" y="293" width="0.0792%" height="15" fill="rgb(244,27,41)" fg:x="5110" fg:w="5"/><text x="81.1684%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4a4 (2 samples, 0.03%)</title><rect x="80.9976%" y="293" width="0.0317%" height="15" fill="rgb(235,35,32)" fg:x="5115" fg:w="2"/><text x="81.2476%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4b6 (1 samples, 0.02%)</title><rect x="81.0293%" y="293" width="0.0158%" height="15" fill="rgb(218,68,31)" fg:x="5117" fg:w="1"/><text x="81.2793%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ce (2 samples, 0.03%)</title><rect x="81.0451%" y="293" width="0.0317%" height="15" fill="rgb(207,120,37)" fg:x="5118" fg:w="2"/><text x="81.2951%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4d0 (1 samples, 0.02%)</title><rect x="81.0768%" y="293" width="0.0158%" height="15" fill="rgb(227,98,0)" fg:x="5120" fg:w="1"/><text x="81.3268%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4d9 (5 samples, 0.08%)</title><rect x="81.0926%" y="293" width="0.0792%" height="15" fill="rgb(207,7,3)" fg:x="5121" fg:w="5"/><text x="81.3426%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4e3 (1 samples, 0.02%)</title><rect x="81.1718%" y="293" width="0.0158%" height="15" fill="rgb(206,98,19)" fg:x="5126" fg:w="1"/><text x="81.4218%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4e7 (4 samples, 0.06%)</title><rect x="81.1876%" y="293" width="0.0633%" height="15" fill="rgb(217,5,26)" fg:x="5127" fg:w="4"/><text x="81.4376%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4ef (11 samples, 0.17%)</title><rect x="81.2510%" y="293" width="0.1742%" height="15" fill="rgb(235,190,38)" fg:x="5131" fg:w="11"/><text x="81.5010%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4fc (3 samples, 0.05%)</title><rect x="81.4252%" y="293" width="0.0475%" height="15" fill="rgb(247,86,24)" fg:x="5142" fg:w="3"/><text x="81.6752%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd4fe (3 samples, 0.05%)</title><rect x="81.4727%" y="293" width="0.0475%" height="15" fill="rgb(205,101,16)" fg:x="5145" fg:w="3"/><text x="81.7227%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd504 (5 samples, 0.08%)</title><rect x="81.5202%" y="293" width="0.0792%" height="15" fill="rgb(246,168,33)" fg:x="5148" fg:w="5"/><text x="81.7702%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd509 (57 samples, 0.90%)</title><rect x="81.5994%" y="293" width="0.9026%" height="15" fill="rgb(231,114,1)" fg:x="5153" fg:w="57"/><text x="81.8494%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd55a (1 samples, 0.02%)</title><rect x="82.5020%" y="293" width="0.0158%" height="15" fill="rgb(207,184,53)" fg:x="5210" fg:w="1"/><text x="82.7520%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5a4 (1 samples, 0.02%)</title><rect x="82.5178%" y="293" width="0.0158%" height="15" fill="rgb(224,95,51)" fg:x="5211" fg:w="1"/><text x="82.7678%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5ac (1 samples, 0.02%)</title><rect x="82.5337%" y="293" width="0.0158%" height="15" fill="rgb(212,188,45)" fg:x="5212" fg:w="1"/><text x="82.7837%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5ae (1 samples, 0.02%)</title><rect x="82.5495%" y="293" width="0.0158%" height="15" fill="rgb(223,154,38)" fg:x="5213" fg:w="1"/><text x="82.7995%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5b5 (2 samples, 0.03%)</title><rect x="82.5653%" y="293" width="0.0317%" height="15" fill="rgb(251,22,52)" fg:x="5214" fg:w="2"/><text x="82.8153%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5b9 (1 samples, 0.02%)</title><rect x="82.5970%" y="293" width="0.0158%" height="15" fill="rgb(229,209,22)" fg:x="5216" fg:w="1"/><text x="82.8470%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5c6 (2 samples, 0.03%)</title><rect x="82.6128%" y="293" width="0.0317%" height="15" fill="rgb(234,138,34)" fg:x="5217" fg:w="2"/><text x="82.8628%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5d8 (1 samples, 0.02%)</title><rect x="82.6445%" y="293" width="0.0158%" height="15" fill="rgb(212,95,11)" fg:x="5219" fg:w="1"/><text x="82.8945%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5ec (1 samples, 0.02%)</title><rect x="82.6603%" y="293" width="0.0158%" height="15" fill="rgb(240,179,47)" fg:x="5220" fg:w="1"/><text x="82.9103%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76fe (1 samples, 0.02%)</title><rect x="82.6762%" y="293" width="0.0158%" height="15" fill="rgb(240,163,11)" fg:x="5221" fg:w="1"/><text x="82.9262%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd772f (1 samples, 0.02%)</title><rect x="82.6920%" y="293" width="0.0158%" height="15" fill="rgb(236,37,12)" fg:x="5222" fg:w="1"/><text x="82.9420%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77f2 (1 samples, 0.02%)</title><rect x="82.7078%" y="293" width="0.0158%" height="15" fill="rgb(232,164,16)" fg:x="5223" fg:w="1"/><text x="82.9578%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7802 (1 samples, 0.02%)</title><rect x="82.7237%" y="293" width="0.0158%" height="15" fill="rgb(244,205,15)" fg:x="5224" fg:w="1"/><text x="82.9737%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7820 (1 samples, 0.02%)</title><rect x="82.7395%" y="293" width="0.0158%" height="15" fill="rgb(223,117,47)" fg:x="5225" fg:w="1"/><text x="82.9895%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd783d (1 samples, 0.02%)</title><rect x="82.7553%" y="293" width="0.0158%" height="15" fill="rgb(244,107,35)" fg:x="5226" fg:w="1"/><text x="83.0053%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7851 (2 samples, 0.03%)</title><rect x="82.7712%" y="293" width="0.0317%" height="15" fill="rgb(205,140,8)" fg:x="5227" fg:w="2"/><text x="83.0212%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7891 (16 samples, 0.25%)</title><rect x="82.8029%" y="293" width="0.2534%" height="15" fill="rgb(228,84,46)" fg:x="5229" fg:w="16"/><text x="83.0529%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78de (1 samples, 0.02%)</title><rect x="83.0562%" y="293" width="0.0158%" height="15" fill="rgb(254,188,9)" fg:x="5245" fg:w="1"/><text x="83.3062%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78f1 (1 samples, 0.02%)</title><rect x="83.0721%" y="293" width="0.0158%" height="15" fill="rgb(206,112,54)" fg:x="5246" fg:w="1"/><text x="83.3221%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7901 (4 samples, 0.06%)</title><rect x="83.0879%" y="293" width="0.0633%" height="15" fill="rgb(216,84,49)" fg:x="5247" fg:w="4"/><text x="83.3379%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.06%)</title><rect x="83.0879%" y="277" width="0.0633%" height="15" fill="rgb(214,194,35)" fg:x="5247" fg:w="4"/><text x="83.3379%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7912 (1 samples, 0.02%)</title><rect x="83.1512%" y="293" width="0.0158%" height="15" fill="rgb(249,28,3)" fg:x="5251" fg:w="1"/><text x="83.4012%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7992 (2 samples, 0.03%)</title><rect x="83.1671%" y="293" width="0.0317%" height="15" fill="rgb(222,56,52)" fg:x="5252" fg:w="2"/><text x="83.4171%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799e (3 samples, 0.05%)</title><rect x="83.1987%" y="293" width="0.0475%" height="15" fill="rgb(245,217,50)" fg:x="5254" fg:w="3"/><text x="83.4487%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79aa (1 samples, 0.02%)</title><rect x="83.2462%" y="293" width="0.0158%" height="15" fill="rgb(213,201,24)" fg:x="5257" fg:w="1"/><text x="83.4962%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79b7 (10 samples, 0.16%)</title><rect x="83.2621%" y="293" width="0.1584%" height="15" fill="rgb(248,116,28)" fg:x="5258" fg:w="10"/><text x="83.5121%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a40 (1 samples, 0.02%)</title><rect x="83.4204%" y="293" width="0.0158%" height="15" fill="rgb(219,72,43)" fg:x="5268" fg:w="1"/><text x="83.6704%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9cdd (1 samples, 0.02%)</title><rect x="83.4363%" y="293" width="0.0158%" height="15" fill="rgb(209,138,14)" fg:x="5269" fg:w="1"/><text x="83.6863%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d04 (1 samples, 0.02%)</title><rect x="83.4521%" y="293" width="0.0158%" height="15" fill="rgb(222,18,33)" fg:x="5270" fg:w="1"/><text x="83.7021%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d1d (1 samples, 0.02%)</title><rect x="83.4679%" y="293" width="0.0158%" height="15" fill="rgb(213,199,7)" fg:x="5271" fg:w="1"/><text x="83.7179%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d28 (1 samples, 0.02%)</title><rect x="83.4838%" y="293" width="0.0158%" height="15" fill="rgb(250,110,10)" fg:x="5272" fg:w="1"/><text x="83.7338%" y="303.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="83.4996%" y="293" width="0.0158%" height="15" fill="rgb(248,123,6)" fg:x="5273" fg:w="1"/><text x="83.7496%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="83.5154%" y="293" width="0.0475%" height="15" fill="rgb(206,91,31)" fg:x="5274" fg:w="3"/><text x="83.7654%" y="303.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (898 samples, 14.22%)</title><rect x="69.4220%" y="309" width="14.2201%" height="15" fill="rgb(211,154,13)" fg:x="4384" fg:w="898"/><text x="69.6720%" y="319.50">dateo_fun_remover`date..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.08%)</title><rect x="83.5629%" y="293" width="0.0792%" height="15" fill="rgb(225,148,7)" fg:x="5277" fg:w="5"/><text x="83.8129%" y="303.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d4470 (86 samples, 1.36%)</title><rect x="83.6421%" y="309" width="1.3618%" height="15" fill="rgb(220,160,43)" fg:x="5282" fg:w="86"/><text x="83.8921%" y="319.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (477 samples, 7.55%)</title><rect x="85.0040%" y="309" width="7.5534%" height="15" fill="rgb(213,52,39)" fg:x="5368" fg:w="477"/><text x="85.2540%" y="319.50">libsystem_..</text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (7 samples, 0.11%)</title><rect x="92.5574%" y="309" width="0.1108%" height="15" fill="rgb(243,137,7)" fg:x="5845" fg:w="7"/><text x="92.8074%" y="319.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (6 samples, 0.10%)</title><rect x="92.6683%" y="309" width="0.0950%" height="15" fill="rgb(230,79,13)" fg:x="5852" fg:w="6"/><text x="92.9183%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd350 (3 samples, 0.05%)</title><rect x="92.7633%" y="309" width="0.0475%" height="15" fill="rgb(247,105,23)" fg:x="5858" fg:w="3"/><text x="93.0133%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd5b5 (1 samples, 0.02%)</title><rect x="92.8108%" y="309" width="0.0158%" height="15" fill="rgb(223,179,41)" fg:x="5861" fg:w="1"/><text x="93.0608%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde57 (1 samples, 0.02%)</title><rect x="92.8266%" y="309" width="0.0158%" height="15" fill="rgb(218,9,34)" fg:x="5862" fg:w="1"/><text x="93.0766%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde70 (2 samples, 0.03%)</title><rect x="92.8424%" y="309" width="0.0317%" height="15" fill="rgb(222,106,8)" fg:x="5863" fg:w="2"/><text x="93.0924%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc1ea8 (1 samples, 0.02%)</title><rect x="92.8741%" y="309" width="0.0158%" height="15" fill="rgb(211,220,0)" fg:x="5865" fg:w="1"/><text x="93.1241%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc201a (1 samples, 0.02%)</title><rect x="92.8899%" y="309" width="0.0158%" height="15" fill="rgb(229,52,16)" fg:x="5866" fg:w="1"/><text x="93.1399%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76fe (4 samples, 0.06%)</title><rect x="92.9058%" y="309" width="0.0633%" height="15" fill="rgb(212,155,18)" fg:x="5867" fg:w="4"/><text x="93.1558%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7705 (1 samples, 0.02%)</title><rect x="92.9691%" y="309" width="0.0158%" height="15" fill="rgb(242,21,14)" fg:x="5871" fg:w="1"/><text x="93.2191%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd770f (1 samples, 0.02%)</title><rect x="92.9850%" y="309" width="0.0158%" height="15" fill="rgb(222,19,48)" fg:x="5872" fg:w="1"/><text x="93.2350%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd772f (2 samples, 0.03%)</title><rect x="93.0008%" y="309" width="0.0317%" height="15" fill="rgb(232,45,27)" fg:x="5873" fg:w="2"/><text x="93.2508%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd774f (6 samples, 0.10%)</title><rect x="93.0325%" y="309" width="0.0950%" height="15" fill="rgb(249,103,42)" fg:x="5875" fg:w="6"/><text x="93.2825%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77dd (1 samples, 0.02%)</title><rect x="93.1275%" y="309" width="0.0158%" height="15" fill="rgb(246,81,33)" fg:x="5881" fg:w="1"/><text x="93.3775%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77e0 (5 samples, 0.08%)</title><rect x="93.1433%" y="309" width="0.0792%" height="15" fill="rgb(252,33,42)" fg:x="5882" fg:w="5"/><text x="93.3933%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77f2 (2 samples, 0.03%)</title><rect x="93.2225%" y="309" width="0.0317%" height="15" fill="rgb(209,212,41)" fg:x="5887" fg:w="2"/><text x="93.4725%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd77ff (2 samples, 0.03%)</title><rect x="93.2542%" y="309" width="0.0317%" height="15" fill="rgb(207,154,6)" fg:x="5889" fg:w="2"/><text x="93.5042%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7802 (4 samples, 0.06%)</title><rect x="93.2858%" y="309" width="0.0633%" height="15" fill="rgb(223,64,47)" fg:x="5891" fg:w="4"/><text x="93.5358%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7809 (1 samples, 0.02%)</title><rect x="93.3492%" y="309" width="0.0158%" height="15" fill="rgb(211,161,38)" fg:x="5895" fg:w="1"/><text x="93.5992%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7816 (5 samples, 0.08%)</title><rect x="93.3650%" y="309" width="0.0792%" height="15" fill="rgb(219,138,40)" fg:x="5896" fg:w="5"/><text x="93.6150%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7826 (4 samples, 0.06%)</title><rect x="93.4442%" y="309" width="0.0633%" height="15" fill="rgb(241,228,46)" fg:x="5901" fg:w="4"/><text x="93.6942%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7835 (1 samples, 0.02%)</title><rect x="93.5075%" y="309" width="0.0158%" height="15" fill="rgb(223,209,38)" fg:x="5905" fg:w="1"/><text x="93.7575%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7851 (2 samples, 0.03%)</title><rect x="93.5234%" y="309" width="0.0317%" height="15" fill="rgb(236,164,45)" fg:x="5906" fg:w="2"/><text x="93.7734%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd786d (2 samples, 0.03%)</title><rect x="93.5550%" y="309" width="0.0317%" height="15" fill="rgb(231,15,5)" fg:x="5908" fg:w="2"/><text x="93.8050%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7887 (3 samples, 0.05%)</title><rect x="93.5867%" y="309" width="0.0475%" height="15" fill="rgb(252,35,15)" fg:x="5910" fg:w="3"/><text x="93.8367%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7891 (74 samples, 1.17%)</title><rect x="93.6342%" y="309" width="1.1718%" height="15" fill="rgb(248,181,18)" fg:x="5913" fg:w="74"/><text x="93.8842%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78d0 (3 samples, 0.05%)</title><rect x="94.8060%" y="309" width="0.0475%" height="15" fill="rgb(233,39,42)" fg:x="5987" fg:w="3"/><text x="95.0560%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78d5 (1 samples, 0.02%)</title><rect x="94.8535%" y="309" width="0.0158%" height="15" fill="rgb(238,110,33)" fg:x="5990" fg:w="1"/><text x="95.1035%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78e5 (8 samples, 0.13%)</title><rect x="94.8694%" y="309" width="0.1267%" height="15" fill="rgb(233,195,10)" fg:x="5991" fg:w="8"/><text x="95.1194%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd78f1 (6 samples, 0.10%)</title><rect x="94.9960%" y="309" width="0.0950%" height="15" fill="rgb(254,105,3)" fg:x="5999" fg:w="6"/><text x="95.2460%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7901 (20 samples, 0.32%)</title><rect x="95.0911%" y="309" width="0.3167%" height="15" fill="rgb(221,225,9)" fg:x="6005" fg:w="20"/><text x="95.3411%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (16 samples, 0.25%)</title><rect x="95.1544%" y="293" width="0.2534%" height="15" fill="rgb(224,227,45)" fg:x="6009" fg:w="16"/><text x="95.4044%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7908 (1 samples, 0.02%)</title><rect x="95.4078%" y="309" width="0.0158%" height="15" fill="rgb(229,198,43)" fg:x="6025" fg:w="1"/><text x="95.6578%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7912 (5 samples, 0.08%)</title><rect x="95.4236%" y="309" width="0.0792%" height="15" fill="rgb(206,209,35)" fg:x="6026" fg:w="5"/><text x="95.6736%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7924 (2 samples, 0.03%)</title><rect x="95.5028%" y="309" width="0.0317%" height="15" fill="rgb(245,195,53)" fg:x="6031" fg:w="2"/><text x="95.7528%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd792b (1 samples, 0.02%)</title><rect x="95.5344%" y="309" width="0.0158%" height="15" fill="rgb(240,92,26)" fg:x="6033" fg:w="1"/><text x="95.7844%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7934 (3 samples, 0.05%)</title><rect x="95.5503%" y="309" width="0.0475%" height="15" fill="rgb(207,40,23)" fg:x="6034" fg:w="3"/><text x="95.8003%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd794d (2 samples, 0.03%)</title><rect x="95.5978%" y="309" width="0.0317%" height="15" fill="rgb(223,111,35)" fg:x="6037" fg:w="2"/><text x="95.8478%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7969 (1 samples, 0.02%)</title><rect x="95.6295%" y="309" width="0.0158%" height="15" fill="rgb(229,147,28)" fg:x="6039" fg:w="1"/><text x="95.8795%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd796c (3 samples, 0.05%)</title><rect x="95.6453%" y="309" width="0.0475%" height="15" fill="rgb(211,29,28)" fg:x="6040" fg:w="3"/><text x="95.8953%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd796e (1 samples, 0.02%)</title><rect x="95.6928%" y="309" width="0.0158%" height="15" fill="rgb(228,72,33)" fg:x="6043" fg:w="1"/><text x="95.9428%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7984 (1 samples, 0.02%)</title><rect x="95.7086%" y="309" width="0.0158%" height="15" fill="rgb(205,214,31)" fg:x="6044" fg:w="1"/><text x="95.9586%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7992 (2 samples, 0.03%)</title><rect x="95.7245%" y="309" width="0.0317%" height="15" fill="rgb(224,111,15)" fg:x="6045" fg:w="2"/><text x="95.9745%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799b (2 samples, 0.03%)</title><rect x="95.7561%" y="309" width="0.0317%" height="15" fill="rgb(253,21,26)" fg:x="6047" fg:w="2"/><text x="96.0061%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd799e (28 samples, 0.44%)</title><rect x="95.7878%" y="309" width="0.4434%" height="15" fill="rgb(245,139,43)" fg:x="6049" fg:w="28"/><text x="96.0378%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79a2 (3 samples, 0.05%)</title><rect x="96.2312%" y="309" width="0.0475%" height="15" fill="rgb(252,170,7)" fg:x="6077" fg:w="3"/><text x="96.4812%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79a8 (3 samples, 0.05%)</title><rect x="96.2787%" y="309" width="0.0475%" height="15" fill="rgb(231,118,14)" fg:x="6080" fg:w="3"/><text x="96.5287%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79aa (5 samples, 0.08%)</title><rect x="96.3262%" y="309" width="0.0792%" height="15" fill="rgb(238,83,0)" fg:x="6083" fg:w="5"/><text x="96.5762%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79b0 (1 samples, 0.02%)</title><rect x="96.4054%" y="309" width="0.0158%" height="15" fill="rgb(221,39,39)" fg:x="6088" fg:w="1"/><text x="96.6554%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd79b7 (57 samples, 0.90%)</title><rect x="96.4212%" y="309" width="0.9026%" height="15" fill="rgb(222,119,46)" fg:x="6089" fg:w="57"/><text x="96.6712%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a39 (5 samples, 0.08%)</title><rect x="97.3238%" y="309" width="0.0792%" height="15" fill="rgb(222,165,49)" fg:x="6146" fg:w="5"/><text x="97.5738%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a40 (1 samples, 0.02%)</title><rect x="97.4030%" y="309" width="0.0158%" height="15" fill="rgb(219,113,52)" fg:x="6151" fg:w="1"/><text x="97.6530%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a47 (1 samples, 0.02%)</title><rect x="97.4188%" y="309" width="0.0158%" height="15" fill="rgb(214,7,15)" fg:x="6152" fg:w="1"/><text x="97.6688%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a48 (1 samples, 0.02%)</title><rect x="97.4347%" y="309" width="0.0158%" height="15" fill="rgb(235,32,4)" fg:x="6153" fg:w="1"/><text x="97.6847%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9cdd (2 samples, 0.03%)</title><rect x="97.4505%" y="309" width="0.0317%" height="15" fill="rgb(238,90,54)" fg:x="6154" fg:w="2"/><text x="97.7005%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9cf1 (2 samples, 0.03%)</title><rect x="97.4822%" y="309" width="0.0317%" height="15" fill="rgb(213,208,19)" fg:x="6156" fg:w="2"/><text x="97.7322%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d04 (3 samples, 0.05%)</title><rect x="97.5139%" y="309" width="0.0475%" height="15" fill="rgb(233,156,4)" fg:x="6158" fg:w="3"/><text x="97.7639%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d0d (2 samples, 0.03%)</title><rect x="97.5614%" y="309" width="0.0317%" height="15" fill="rgb(207,194,5)" fg:x="6161" fg:w="2"/><text x="97.8114%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d19 (1 samples, 0.02%)</title><rect x="97.5930%" y="309" width="0.0158%" height="15" fill="rgb(206,111,30)" fg:x="6163" fg:w="1"/><text x="97.8430%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd9d28 (2 samples, 0.03%)</title><rect x="97.6089%" y="309" width="0.0317%" height="15" fill="rgb(243,70,54)" fg:x="6164" fg:w="2"/><text x="97.8589%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804be0472 (6 samples, 0.10%)</title><rect x="97.6405%" y="309" width="0.0950%" height="15" fill="rgb(242,28,8)" fg:x="6166" fg:w="6"/><text x="97.8905%" y="319.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (5 samples, 0.08%)</title><rect x="97.7356%" y="309" width="0.0792%" height="15" fill="rgb(219,106,18)" fg:x="6172" fg:w="5"/><text x="97.9856%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="97.8147%" y="309" width="0.0475%" height="15" fill="rgb(244,222,10)" fg:x="6177" fg:w="3"/><text x="98.0647%" y="319.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (3,146 samples, 49.82%)</title><rect x="48.0602%" y="325" width="49.8179%" height="15" fill="rgb(236,179,52)" fg:x="3035" fg:w="3146"/><text x="48.3102%" y="335.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="97.8622%" y="309" width="0.0158%" height="15" fill="rgb(213,23,39)" fg:x="6180" fg:w="1"/><text x="98.1122%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbd350 (1 samples, 0.02%)</title><rect x="97.8781%" y="325" width="0.0158%" height="15" fill="rgb(238,48,10)" fg:x="6181" fg:w="1"/><text x="98.1281%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde2b (3 samples, 0.05%)</title><rect x="97.8939%" y="325" width="0.0475%" height="15" fill="rgb(251,196,23)" fg:x="6182" fg:w="3"/><text x="98.1439%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde3a (3 samples, 0.05%)</title><rect x="97.9414%" y="325" width="0.0475%" height="15" fill="rgb(250,152,24)" fg:x="6185" fg:w="3"/><text x="98.1914%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde43 (1 samples, 0.02%)</title><rect x="97.9889%" y="325" width="0.0158%" height="15" fill="rgb(209,150,17)" fg:x="6188" fg:w="1"/><text x="98.2389%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde45 (4 samples, 0.06%)</title><rect x="98.0048%" y="325" width="0.0633%" height="15" fill="rgb(234,202,34)" fg:x="6189" fg:w="4"/><text x="98.2548%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde57 (2 samples, 0.03%)</title><rect x="98.0681%" y="325" width="0.0317%" height="15" fill="rgb(253,148,53)" fg:x="6193" fg:w="2"/><text x="98.3181%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde6c (1 samples, 0.02%)</title><rect x="98.0998%" y="325" width="0.0158%" height="15" fill="rgb(218,129,16)" fg:x="6195" fg:w="1"/><text x="98.3498%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bbde70 (11 samples, 0.17%)</title><rect x="98.1156%" y="325" width="0.1742%" height="15" fill="rgb(216,85,19)" fg:x="6196" fg:w="11"/><text x="98.3656%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76f8 (2 samples, 0.03%)</title><rect x="98.2898%" y="325" width="0.0317%" height="15" fill="rgb(235,228,7)" fg:x="6207" fg:w="2"/><text x="98.5398%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd76f9 (1 samples, 0.02%)</title><rect x="98.3215%" y="325" width="0.0158%" height="15" fill="rgb(245,175,0)" fg:x="6209" fg:w="1"/><text x="98.5715%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a47 (5 samples, 0.08%)</title><rect x="98.3373%" y="325" width="0.0792%" height="15" fill="rgb(208,168,36)" fg:x="6210" fg:w="5"/><text x="98.5873%" y="335.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5,265 samples, 83.37%)</title><rect x="15.0752%" y="341" width="83.3729%" height="15" fill="rgb(246,171,24)" fg:x="952" fg:w="5265"/><text x="15.3252%" y="351.50">dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>libsystem_malloc.dylib`0x7ff804bd7a48 (2 samples, 0.03%)</title><rect x="98.4165%" y="325" width="0.0317%" height="15" fill="rgb(215,142,24)" fg:x="6215" fg:w="2"/><text x="98.6665%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.08%)</title><rect x="98.4640%" y="293" width="0.0792%" height="15" fill="rgb(250,187,7)" fg:x="6218" fg:w="5"/><text x="98.7140%" y="303.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (20 samples, 0.32%)</title><rect x="98.4640%" y="325" width="0.3167%" height="15" fill="rgb(228,66,33)" fg:x="6218" fg:w="20"/><text x="98.7140%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd1a5f (20 samples, 0.32%)</title><rect x="98.4640%" y="309" width="0.3167%" height="15" fill="rgb(234,215,21)" fg:x="6218" fg:w="20"/><text x="98.7140%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc87a3 (15 samples, 0.24%)</title><rect x="98.5432%" y="293" width="0.2375%" height="15" fill="rgb(222,191,20)" fg:x="6223" fg:w="15"/><text x="98.7932%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc9ce7 (15 samples, 0.24%)</title><rect x="98.5432%" y="277" width="0.2375%" height="15" fill="rgb(245,79,54)" fg:x="6223" fg:w="15"/><text x="98.7932%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (15 samples, 0.24%)</title><rect x="98.5432%" y="261" width="0.2375%" height="15" fill="rgb(240,10,37)" fg:x="6223" fg:w="15"/><text x="98.7932%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (37 samples, 0.59%)</title><rect x="98.7807%" y="309" width="0.5859%" height="15" fill="rgb(214,192,32)" fg:x="6238" fg:w="37"/><text x="99.0307%" y="319.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;dateo_fun_remover::finder::joiner::Memo&gt; (94 samples, 1.49%)</title><rect x="98.4481%" y="341" width="1.4885%" height="15" fill="rgb(209,36,54)" fg:x="6217" fg:w="94"/><text x="98.6981%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bd1a5f (73 samples, 1.16%)</title><rect x="98.7807%" y="325" width="1.1560%" height="15" fill="rgb(220,10,11)" fg:x="6238" fg:w="73"/><text x="99.0307%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc87a3 (36 samples, 0.57%)</title><rect x="99.3666%" y="309" width="0.5701%" height="15" fill="rgb(221,106,17)" fg:x="6275" fg:w="36"/><text x="99.6166%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff804bc9ce7 (36 samples, 0.57%)</title><rect x="99.3666%" y="293" width="0.5701%" height="15" fill="rgb(251,142,44)" fg:x="6275" fg:w="36"/><text x="99.6166%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (36 samples, 0.57%)</title><rect x="99.3666%" y="277" width="0.5701%" height="15" fill="rgb(238,13,15)" fg:x="6275" fg:w="36"/><text x="99.6166%" y="287.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="99.9367%" y="245" width="0.0158%" height="15" fill="rgb(208,107,27)" fg:x="6311" fg:w="1"/><text x="100.1867%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.9367%" y="229" width="0.0158%" height="15" fill="rgb(205,136,37)" fg:x="6311" fg:w="1"/><text x="100.1867%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (1 samples, 0.02%)</title><rect x="99.9525%" y="245" width="0.0158%" height="15" fill="rgb(250,205,27)" fg:x="6312" fg:w="1"/><text x="100.2025%" y="255.50"></text></g><g><title>dateo_fun_remover`main (6,314 samples, 99.98%)</title><rect x="0.0000%" y="437" width="99.9842%" height="15" fill="rgb(210,80,43)" fg:x="0" fg:w="6314"/><text x="0.2500%" y="447.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (6,314 samples, 99.98%)</title><rect x="0.0000%" y="421" width="99.9842%" height="15" fill="rgb(247,160,36)" fg:x="0" fg:w="6314"/><text x="0.2500%" y="431.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (6,314 samples, 99.98%)</title><rect x="0.0000%" y="405" width="99.9842%" height="15" fill="rgb(234,13,49)" fg:x="0" fg:w="6314"/><text x="0.2500%" y="415.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (6,314 samples, 99.98%)</title><rect x="0.0000%" y="389" width="99.9842%" height="15" fill="rgb(234,122,0)" fg:x="0" fg:w="6314"/><text x="0.2500%" y="399.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (6,314 samples, 99.98%)</title><rect x="0.0000%" y="373" width="99.9842%" height="15" fill="rgb(207,146,38)" fg:x="0" fg:w="6314"/><text x="0.2500%" y="383.50">dateo_fun_remover`dateo_fun_remover::main</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (6,314 samples, 99.98%)</title><rect x="0.0000%" y="357" width="99.9842%" height="15" fill="rgb(207,177,25)" fg:x="0" fg:w="6314"/><text x="0.2500%" y="367.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve_square (3 samples, 0.05%)</title><rect x="99.9367%" y="341" width="0.0475%" height="15" fill="rgb(211,178,42)" fg:x="6311" fg:w="3"/><text x="100.1867%" y="351.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="99.9367%" y="325" width="0.0475%" height="15" fill="rgb(230,69,54)" fg:x="6311" fg:w="3"/><text x="100.1867%" y="335.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="99.9367%" y="309" width="0.0475%" height="15" fill="rgb(214,135,41)" fg:x="6311" fg:w="3"/><text x="100.1867%" y="319.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="99.9367%" y="293" width="0.0475%" height="15" fill="rgb(237,67,25)" fg:x="6311" fg:w="3"/><text x="100.1867%" y="303.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="99.9367%" y="277" width="0.0475%" height="15" fill="rgb(222,189,50)" fg:x="6311" fg:w="3"/><text x="100.1867%" y="287.50"></text></g><g><title>dateo_fun_remover`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.05%)</title><rect x="99.9367%" y="261" width="0.0475%" height="15" fill="rgb(245,148,34)" fg:x="6311" fg:w="3"/><text x="100.1867%" y="271.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (1 samples, 0.02%)</title><rect x="99.9683%" y="245" width="0.0158%" height="15" fill="rgb(222,29,6)" fg:x="6313" fg:w="1"/><text x="100.2183%" y="255.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d6aa0 (1 samples, 0.02%)</title><rect x="99.9683%" y="229" width="0.0158%" height="15" fill="rgb(221,189,43)" fg:x="6313" fg:w="1"/><text x="100.2183%" y="239.50"></text></g><g><title>all (6,315 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(207,36,27)" fg:x="0" fg:w="6315"/><text x="0.2500%" y="479.50"></text></g><g><title>dyld`start (6,315 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(217,90,24)" fg:x="0" fg:w="6315"/><text x="0.2500%" y="463.50">dyld`start</text></g><g><title>dyld`lsl::EphemeralAllocator::reset (1 samples, 0.02%)</title><rect x="99.9842%" y="437" width="0.0158%" height="15" fill="rgb(224,66,35)" fg:x="6314" fg:w="1"/><text x="100.2342%" y="447.50"></text></g><g><title>dyld`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="99.9842%" y="421" width="0.0158%" height="15" fill="rgb(221,13,50)" fg:x="6314" fg:w="1"/><text x="100.2342%" y="431.50"></text></g></svg></svg>