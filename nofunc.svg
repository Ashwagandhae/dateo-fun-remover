<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="357.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="357.00"> </text><svg id="frames" x="10" width="1180" total_samples="80265"><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 0.05%)</title><rect x="2.2214%" y="181" width="0.0548%" height="15" fill="rgb(227,0,7)" fg:x="1783" fg:w="44"/><text x="2.4714%" y="191.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (93 samples, 0.12%)</title><rect x="2.2775%" y="181" width="0.1159%" height="15" fill="rgb(217,0,24)" fg:x="1828" fg:w="93"/><text x="2.5275%" y="191.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (9 samples, 0.01%)</title><rect x="2.3933%" y="181" width="0.0112%" height="15" fill="rgb(221,193,54)" fg:x="1921" fg:w="9"/><text x="2.6433%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (326 samples, 0.41%)</title><rect x="2.4045%" y="133" width="0.4062%" height="15" fill="rgb(248,212,6)" fg:x="1930" fg:w="326"/><text x="2.6545%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f6268c (747 samples, 0.93%)</title><rect x="2.8107%" y="133" width="0.9307%" height="15" fill="rgb(208,68,35)" fg:x="2256" fg:w="747"/><text x="3.0607%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f63ce7 (747 samples, 0.93%)</title><rect x="2.8107%" y="117" width="0.9307%" height="15" fill="rgb(232,128,0)" fg:x="2256" fg:w="747"/><text x="3.0607%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (747 samples, 0.93%)</title><rect x="2.8107%" y="101" width="0.9307%" height="15" fill="rgb(207,160,47)" fg:x="2256" fg:w="747"/><text x="3.0607%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f6ba5f (1,179 samples, 1.47%)</title><rect x="2.4045%" y="149" width="1.4689%" height="15" fill="rgb(228,23,34)" fg:x="1930" fg:w="1179"/><text x="2.6545%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f627a3 (106 samples, 0.13%)</title><rect x="3.7414%" y="133" width="0.1321%" height="15" fill="rgb(218,30,26)" fg:x="3003" fg:w="106"/><text x="3.9914%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f63ce7 (106 samples, 0.13%)</title><rect x="3.7414%" y="117" width="0.1321%" height="15" fill="rgb(220,122,19)" fg:x="3003" fg:w="106"/><text x="3.9914%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (106 samples, 0.13%)</title><rect x="3.7414%" y="101" width="0.1321%" height="15" fill="rgb(250,228,42)" fg:x="3003" fg:w="106"/><text x="3.9914%" y="111.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;dateo_fun_remover::finder::joiner::Memo&gt; (1,180 samples, 1.47%)</title><rect x="2.4045%" y="181" width="1.4701%" height="15" fill="rgb(240,193,28)" fg:x="1930" fg:w="1180"/><text x="2.6545%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1,180 samples, 1.47%)</title><rect x="2.4045%" y="165" width="1.4701%" height="15" fill="rgb(216,20,37)" fg:x="1930" fg:w="1180"/><text x="2.6545%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b671 (56 samples, 0.07%)</title><rect x="13.0368%" y="85" width="0.0698%" height="15" fill="rgb(206,188,39)" fg:x="10464" fg:w="56"/><text x="13.2868%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f63ddf (55 samples, 0.07%)</title><rect x="13.0381%" y="69" width="0.0685%" height="15" fill="rgb(217,207,13)" fg:x="10465" fg:w="55"/><text x="13.2881%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (55 samples, 0.07%)</title><rect x="13.0381%" y="53" width="0.0685%" height="15" fill="rgb(231,73,38)" fg:x="10465" fg:w="55"/><text x="13.2881%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (55 samples, 0.07%)</title><rect x="13.0381%" y="37" width="0.0685%" height="15" fill="rgb(225,20,46)" fg:x="10465" fg:w="55"/><text x="13.2881%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b794 (15 samples, 0.02%)</title><rect x="13.1116%" y="85" width="0.0187%" height="15" fill="rgb(210,31,41)" fg:x="10524" fg:w="15"/><text x="13.3616%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (15 samples, 0.02%)</title><rect x="13.1116%" y="69" width="0.0187%" height="15" fill="rgb(221,200,47)" fg:x="10524" fg:w="15"/><text x="13.3616%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (15 samples, 0.02%)</title><rect x="13.1116%" y="53" width="0.0187%" height="15" fill="rgb(226,26,5)" fg:x="10524" fg:w="15"/><text x="13.3616%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b7a6 (48 samples, 0.06%)</title><rect x="13.1303%" y="85" width="0.0598%" height="15" fill="rgb(249,33,26)" fg:x="10539" fg:w="48"/><text x="13.3803%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (48 samples, 0.06%)</title><rect x="13.1303%" y="69" width="0.0598%" height="15" fill="rgb(235,183,28)" fg:x="10539" fg:w="48"/><text x="13.3803%" y="79.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (126 samples, 0.16%)</title><rect x="13.0356%" y="149" width="0.1570%" height="15" fill="rgb(221,5,38)" fg:x="10463" fg:w="126"/><text x="13.2856%" y="159.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (126 samples, 0.16%)</title><rect x="13.0356%" y="133" width="0.1570%" height="15" fill="rgb(247,18,42)" fg:x="10463" fg:w="126"/><text x="13.2856%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59235 (126 samples, 0.16%)</title><rect x="13.0356%" y="117" width="0.1570%" height="15" fill="rgb(241,131,45)" fg:x="10463" fg:w="126"/><text x="13.2856%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a698 (126 samples, 0.16%)</title><rect x="13.0356%" y="101" width="0.1570%" height="15" fill="rgb(249,31,29)" fg:x="10463" fg:w="126"/><text x="13.2856%" y="111.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::math::power (50 samples, 0.06%)</title><rect x="13.1925%" y="149" width="0.0623%" height="15" fill="rgb(225,111,53)" fg:x="10589" fg:w="50"/><text x="13.4425%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::math::root (54 samples, 0.07%)</title><rect x="13.2548%" y="149" width="0.0673%" height="15" fill="rgb(238,160,17)" fg:x="10639" fg:w="54"/><text x="13.5048%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all (13 samples, 0.02%)</title><rect x="13.3221%" y="149" width="0.0162%" height="15" fill="rgb(214,148,48)" fg:x="10693" fg:w="13"/><text x="13.5721%" y="159.50"></text></g><g><title>libsystem_m.dylib`0x00007ff812c70aa0 (393 samples, 0.49%)</title><rect x="13.3383%" y="149" width="0.4896%" height="15" fill="rgb(232,36,49)" fg:x="10706" fg:w="393"/><text x="13.5883%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,090 samples, 6.34%)</title><rect x="7.4939%" y="165" width="6.3415%" height="15" fill="rgb(209,103,24)" fg:x="6015" fg:w="5090"/><text x="7.7439%" y="175.50">dateo_fu..</text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 0.06%)</title><rect x="13.8354%" y="165" width="0.0623%" height="15" fill="rgb(229,88,8)" fg:x="11105" fg:w="50"/><text x="14.0854%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,577 samples, 14.42%)</title><rect x="13.8977%" y="165" width="14.4235%" height="15" fill="rgb(213,181,19)" fg:x="11155" fg:w="11577"/><text x="14.1477%" y="175.50">dateo_fun_remover`&lt;cor..</text></g><g><title>dateo_fun_remover`DYLD-STUB$$log (51 samples, 0.06%)</title><rect x="28.3262%" y="165" width="0.0635%" height="15" fill="rgb(254,191,54)" fg:x="22736" fg:w="51"/><text x="28.5762%" y="175.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$memcpy (36 samples, 0.04%)</title><rect x="28.3934%" y="165" width="0.0449%" height="15" fill="rgb(241,83,37)" fg:x="22790" fg:w="36"/><text x="28.6434%" y="175.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$pow (41 samples, 0.05%)</title><rect x="28.4383%" y="165" width="0.0511%" height="15" fill="rgb(233,36,39)" fg:x="22826" fg:w="41"/><text x="28.6883%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (49 samples, 0.06%)</title><rect x="28.4894%" y="165" width="0.0610%" height="15" fill="rgb(226,3,54)" fg:x="22867" fg:w="49"/><text x="28.7394%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (144 samples, 0.18%)</title><rect x="28.5504%" y="165" width="0.1794%" height="15" fill="rgb(245,192,40)" fg:x="22916" fg:w="144"/><text x="28.8004%" y="175.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (21 samples, 0.03%)</title><rect x="28.7298%" y="165" width="0.0262%" height="15" fill="rgb(238,167,29)" fg:x="23060" fg:w="21"/><text x="28.9798%" y="175.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (27 samples, 0.03%)</title><rect x="28.7560%" y="165" width="0.0336%" height="15" fill="rgb(232,182,51)" fg:x="23081" fg:w="27"/><text x="29.0060%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b671 (71 samples, 0.09%)</title><rect x="29.0712%" y="101" width="0.0885%" height="15" fill="rgb(231,60,39)" fg:x="23334" fg:w="71"/><text x="29.3212%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f63ddf (71 samples, 0.09%)</title><rect x="29.0712%" y="85" width="0.0885%" height="15" fill="rgb(208,69,12)" fg:x="23334" fg:w="71"/><text x="29.3212%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (71 samples, 0.09%)</title><rect x="29.0712%" y="69" width="0.0885%" height="15" fill="rgb(235,93,37)" fg:x="23334" fg:w="71"/><text x="29.3212%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (71 samples, 0.09%)</title><rect x="29.0712%" y="53" width="0.0885%" height="15" fill="rgb(213,116,39)" fg:x="23334" fg:w="71"/><text x="29.3212%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b794 (50 samples, 0.06%)</title><rect x="29.1634%" y="101" width="0.0623%" height="15" fill="rgb(222,207,29)" fg:x="23408" fg:w="50"/><text x="29.4134%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (50 samples, 0.06%)</title><rect x="29.1634%" y="85" width="0.0623%" height="15" fill="rgb(206,96,30)" fg:x="23408" fg:w="50"/><text x="29.4134%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (50 samples, 0.06%)</title><rect x="29.1634%" y="69" width="0.0623%" height="15" fill="rgb(218,138,4)" fg:x="23408" fg:w="50"/><text x="29.4134%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b7a6 (32 samples, 0.04%)</title><rect x="29.2257%" y="101" width="0.0399%" height="15" fill="rgb(250,191,14)" fg:x="23458" fg:w="32"/><text x="29.4757%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.04%)</title><rect x="29.2257%" y="85" width="0.0399%" height="15" fill="rgb(239,60,40)" fg:x="23458" fg:w="32"/><text x="29.4757%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (537 samples, 0.67%)</title><rect x="28.7896%" y="165" width="0.6690%" height="15" fill="rgb(206,27,48)" fg:x="23108" fg:w="537"/><text x="29.0396%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (312 samples, 0.39%)</title><rect x="29.0700%" y="149" width="0.3887%" height="15" fill="rgb(225,35,8)" fg:x="23333" fg:w="312"/><text x="29.3200%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59235 (311 samples, 0.39%)</title><rect x="29.0712%" y="133" width="0.3875%" height="15" fill="rgb(250,213,24)" fg:x="23334" fg:w="311"/><text x="29.3212%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a698 (311 samples, 0.39%)</title><rect x="29.0712%" y="117" width="0.3875%" height="15" fill="rgb(247,123,22)" fg:x="23334" fg:w="311"/><text x="29.3212%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b7b3 (155 samples, 0.19%)</title><rect x="29.2656%" y="101" width="0.1931%" height="15" fill="rgb(231,138,38)" fg:x="23490" fg:w="155"/><text x="29.5156%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f6ba5f (155 samples, 0.19%)</title><rect x="29.2656%" y="85" width="0.1931%" height="15" fill="rgb(231,145,46)" fg:x="23490" fg:w="155"/><text x="29.5156%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f6268c (155 samples, 0.19%)</title><rect x="29.2656%" y="69" width="0.1931%" height="15" fill="rgb(251,118,11)" fg:x="23490" fg:w="155"/><text x="29.5156%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f63ce7 (155 samples, 0.19%)</title><rect x="29.2656%" y="53" width="0.1931%" height="15" fill="rgb(217,147,25)" fg:x="23490" fg:w="155"/><text x="29.5156%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (155 samples, 0.19%)</title><rect x="29.2656%" y="37" width="0.1931%" height="15" fill="rgb(247,81,37)" fg:x="23490" fg:w="155"/><text x="29.5156%" y="47.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.01%)</title><rect x="29.4761%" y="149" width="0.0125%" height="15" fill="rgb(209,12,38)" fg:x="23659" fg:w="10"/><text x="29.7261%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="29.4985%" y="117" width="0.0125%" height="15" fill="rgb(227,1,9)" fg:x="23677" fg:w="10"/><text x="29.7485%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="29.4948%" y="133" width="0.0237%" height="15" fill="rgb(248,47,43)" fg:x="23674" fg:w="19"/><text x="29.7448%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="29.5185%" y="133" width="0.0125%" height="15" fill="rgb(221,10,30)" fg:x="23693" fg:w="10"/><text x="29.7685%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="29.5185%" y="117" width="0.0125%" height="15" fill="rgb(210,229,1)" fg:x="23693" fg:w="10"/><text x="29.7685%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (41 samples, 0.05%)</title><rect x="29.4936%" y="149" width="0.0511%" height="15" fill="rgb(222,148,37)" fg:x="23673" fg:w="41"/><text x="29.7436%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (66 samples, 0.08%)</title><rect x="29.4736%" y="165" width="0.0822%" height="15" fill="rgb(234,67,33)" fg:x="23657" fg:w="66"/><text x="29.7236%" y="175.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (149 samples, 0.19%)</title><rect x="46.1795%" y="117" width="0.1856%" height="15" fill="rgb(247,98,35)" fg:x="37066" fg:w="149"/><text x="46.4295%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (4,539 samples, 5.66%)</title><rect x="46.3652%" y="117" width="5.6550%" height="15" fill="rgb(247,138,52)" fg:x="37215" fg:w="4539"/><text x="46.6152%" y="127.50">dateo_f..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (364 samples, 0.45%)</title><rect x="52.0202%" y="117" width="0.4535%" height="15" fill="rgb(213,79,30)" fg:x="41754" fg:w="364"/><text x="52.2702%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,733 samples, 13.37%)</title><rect x="39.7184%" y="133" width="13.3720%" height="15" fill="rgb(246,177,23)" fg:x="31880" fg:w="10733"/><text x="39.9684%" y="143.50">dateo_fun_remover`&lt;c..</text></g><g><title>libsystem_m.dylib`trunc (495 samples, 0.62%)</title><rect x="52.4737%" y="117" width="0.6167%" height="15" fill="rgb(230,62,27)" fg:x="42118" fg:w="495"/><text x="52.7237%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58464 (10 samples, 0.01%)</title><rect x="53.1153%" y="53" width="0.0125%" height="15" fill="rgb(216,154,8)" fg:x="42633" fg:w="10"/><text x="53.3653%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a7a0 (11 samples, 0.01%)</title><rect x="53.1153%" y="69" width="0.0137%" height="15" fill="rgb(244,35,45)" fg:x="42633" fg:w="11"/><text x="53.3653%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a852 (16 samples, 0.02%)</title><rect x="53.1290%" y="69" width="0.0199%" height="15" fill="rgb(251,115,12)" fg:x="42644" fg:w="16"/><text x="53.3790%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a87c (14 samples, 0.02%)</title><rect x="53.1502%" y="69" width="0.0174%" height="15" fill="rgb(240,54,50)" fg:x="42661" fg:w="14"/><text x="53.4002%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a698 (58 samples, 0.07%)</title><rect x="53.1041%" y="85" width="0.0723%" height="15" fill="rgb(233,84,52)" fg:x="42624" fg:w="58"/><text x="53.3541%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59235 (59 samples, 0.07%)</title><rect x="53.1041%" y="101" width="0.0735%" height="15" fill="rgb(207,117,47)" fg:x="42624" fg:w="59"/><text x="53.3541%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.09%)</title><rect x="53.0904%" y="133" width="0.0885%" height="15" fill="rgb(249,43,39)" fg:x="42613" fg:w="71"/><text x="53.3404%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (70 samples, 0.09%)</title><rect x="53.0916%" y="117" width="0.0872%" height="15" fill="rgb(209,38,44)" fg:x="42614" fg:w="70"/><text x="53.3416%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (456 samples, 0.57%)</title><rect x="53.1801%" y="133" width="0.5681%" height="15" fill="rgb(236,212,23)" fg:x="42685" fg:w="456"/><text x="53.4301%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (79 samples, 0.10%)</title><rect x="53.7482%" y="133" width="0.0984%" height="15" fill="rgb(242,79,21)" fg:x="43141" fg:w="79"/><text x="53.9982%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57393 (55 samples, 0.07%)</title><rect x="53.8466%" y="133" width="0.0685%" height="15" fill="rgb(211,96,35)" fg:x="43220" fg:w="55"/><text x="54.0966%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57399 (68 samples, 0.08%)</title><rect x="53.9301%" y="133" width="0.0847%" height="15" fill="rgb(253,215,40)" fg:x="43287" fg:w="68"/><text x="54.1801%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573a0 (79 samples, 0.10%)</title><rect x="54.0260%" y="133" width="0.0984%" height="15" fill="rgb(211,81,21)" fg:x="43364" fg:w="79"/><text x="54.2760%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573b2 (55 samples, 0.07%)</title><rect x="54.1294%" y="133" width="0.0685%" height="15" fill="rgb(208,190,38)" fg:x="43447" fg:w="55"/><text x="54.3794%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573ca (49 samples, 0.06%)</title><rect x="54.2067%" y="133" width="0.0610%" height="15" fill="rgb(235,213,38)" fg:x="43509" fg:w="49"/><text x="54.4567%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573d9 (62 samples, 0.08%)</title><rect x="54.2839%" y="133" width="0.0772%" height="15" fill="rgb(237,122,38)" fg:x="43571" fg:w="62"/><text x="54.5339%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573dd (230 samples, 0.29%)</title><rect x="54.3612%" y="133" width="0.2866%" height="15" fill="rgb(244,218,35)" fg:x="43633" fg:w="230"/><text x="54.6112%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573e7 (990 samples, 1.23%)</title><rect x="54.6477%" y="133" width="1.2334%" height="15" fill="rgb(240,68,47)" fg:x="43863" fg:w="990"/><text x="54.8977%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573eb (65 samples, 0.08%)</title><rect x="55.8811%" y="133" width="0.0810%" height="15" fill="rgb(210,16,53)" fg:x="44853" fg:w="65"/><text x="56.1311%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573f8 (72 samples, 0.09%)</title><rect x="55.9621%" y="133" width="0.0897%" height="15" fill="rgb(235,124,12)" fg:x="44918" fg:w="72"/><text x="56.2121%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57407 (262 samples, 0.33%)</title><rect x="56.0518%" y="133" width="0.3264%" height="15" fill="rgb(224,169,11)" fg:x="44990" fg:w="262"/><text x="56.3018%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5740a (65 samples, 0.08%)</title><rect x="56.3782%" y="133" width="0.0810%" height="15" fill="rgb(250,166,2)" fg:x="45252" fg:w="65"/><text x="56.6282%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57414 (72 samples, 0.09%)</title><rect x="56.4592%" y="133" width="0.0897%" height="15" fill="rgb(242,216,29)" fg:x="45317" fg:w="72"/><text x="56.7092%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5741b (145 samples, 0.18%)</title><rect x="56.5489%" y="133" width="0.1807%" height="15" fill="rgb(230,116,27)" fg:x="45389" fg:w="145"/><text x="56.7989%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5742b (64 samples, 0.08%)</title><rect x="56.7308%" y="133" width="0.0797%" height="15" fill="rgb(228,99,48)" fg:x="45535" fg:w="64"/><text x="56.9808%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57439 (70 samples, 0.09%)</title><rect x="56.8118%" y="133" width="0.0872%" height="15" fill="rgb(253,11,6)" fg:x="45600" fg:w="70"/><text x="57.0618%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5743e (11 samples, 0.01%)</title><rect x="56.9003%" y="133" width="0.0137%" height="15" fill="rgb(247,143,39)" fg:x="45671" fg:w="11"/><text x="57.1503%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57442 (23 samples, 0.03%)</title><rect x="56.9140%" y="133" width="0.0287%" height="15" fill="rgb(236,97,10)" fg:x="45682" fg:w="23"/><text x="57.1640%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57445 (50 samples, 0.06%)</title><rect x="56.9426%" y="133" width="0.0623%" height="15" fill="rgb(233,208,19)" fg:x="45705" fg:w="50"/><text x="57.1926%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57452 (67 samples, 0.08%)</title><rect x="57.0062%" y="133" width="0.0835%" height="15" fill="rgb(216,164,2)" fg:x="45756" fg:w="67"/><text x="57.2562%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57467 (76 samples, 0.09%)</title><rect x="57.0896%" y="133" width="0.0947%" height="15" fill="rgb(220,129,5)" fg:x="45823" fg:w="76"/><text x="57.3396%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57484 (66 samples, 0.08%)</title><rect x="57.1843%" y="133" width="0.0822%" height="15" fill="rgb(242,17,10)" fg:x="45899" fg:w="66"/><text x="57.4343%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57493 (66 samples, 0.08%)</title><rect x="57.2703%" y="133" width="0.0822%" height="15" fill="rgb(242,107,0)" fg:x="45968" fg:w="66"/><text x="57.5203%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574a4 (49 samples, 0.06%)</title><rect x="57.3563%" y="133" width="0.0610%" height="15" fill="rgb(251,28,31)" fg:x="46037" fg:w="49"/><text x="57.6063%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574c1 (13 samples, 0.02%)</title><rect x="57.4223%" y="133" width="0.0162%" height="15" fill="rgb(233,223,10)" fg:x="46090" fg:w="13"/><text x="57.6723%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574ce (229 samples, 0.29%)</title><rect x="57.4422%" y="133" width="0.2853%" height="15" fill="rgb(215,21,27)" fg:x="46106" fg:w="229"/><text x="57.6922%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574d9 (55 samples, 0.07%)</title><rect x="57.7300%" y="133" width="0.0685%" height="15" fill="rgb(232,23,21)" fg:x="46337" fg:w="55"/><text x="57.9800%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574e3 (13 samples, 0.02%)</title><rect x="57.8060%" y="133" width="0.0162%" height="15" fill="rgb(244,5,23)" fg:x="46398" fg:w="13"/><text x="58.0560%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574e7 (67 samples, 0.08%)</title><rect x="57.8222%" y="133" width="0.0835%" height="15" fill="rgb(226,81,46)" fg:x="46411" fg:w="67"/><text x="58.0722%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574ef (269 samples, 0.34%)</title><rect x="57.9057%" y="133" width="0.3351%" height="15" fill="rgb(247,70,30)" fg:x="46478" fg:w="269"/><text x="58.1557%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574fc (67 samples, 0.08%)</title><rect x="58.2433%" y="133" width="0.0835%" height="15" fill="rgb(212,68,19)" fg:x="46749" fg:w="67"/><text x="58.4933%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574fe (71 samples, 0.09%)</title><rect x="58.3268%" y="133" width="0.0885%" height="15" fill="rgb(240,187,13)" fg:x="46816" fg:w="71"/><text x="58.5768%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57504 (60 samples, 0.07%)</title><rect x="58.4152%" y="133" width="0.0748%" height="15" fill="rgb(223,113,26)" fg:x="46887" fg:w="60"/><text x="58.6652%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57509 (895 samples, 1.12%)</title><rect x="58.4900%" y="133" width="1.1151%" height="15" fill="rgb(206,192,2)" fg:x="46947" fg:w="895"/><text x="58.7400%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5754a (10 samples, 0.01%)</title><rect x="59.6051%" y="133" width="0.0125%" height="15" fill="rgb(241,108,4)" fg:x="47842" fg:w="10"/><text x="59.8551%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5755a (12 samples, 0.01%)</title><rect x="59.6188%" y="133" width="0.0150%" height="15" fill="rgb(247,173,49)" fg:x="47853" fg:w="12"/><text x="59.8688%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575a4 (70 samples, 0.09%)</title><rect x="59.6412%" y="133" width="0.0872%" height="15" fill="rgb(224,114,35)" fg:x="47871" fg:w="70"/><text x="59.8912%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575ae (65 samples, 0.08%)</title><rect x="59.7296%" y="133" width="0.0810%" height="15" fill="rgb(245,159,27)" fg:x="47942" fg:w="65"/><text x="59.9796%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575b9 (55 samples, 0.07%)</title><rect x="59.8193%" y="133" width="0.0685%" height="15" fill="rgb(245,172,44)" fg:x="48014" fg:w="55"/><text x="60.0693%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575c6 (65 samples, 0.08%)</title><rect x="59.8879%" y="133" width="0.0810%" height="15" fill="rgb(236,23,11)" fg:x="48069" fg:w="65"/><text x="60.1379%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575d8 (53 samples, 0.07%)</title><rect x="59.9751%" y="133" width="0.0660%" height="15" fill="rgb(205,117,38)" fg:x="48139" fg:w="53"/><text x="60.2251%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575e4 (14 samples, 0.02%)</title><rect x="60.0424%" y="133" width="0.0174%" height="15" fill="rgb(237,72,25)" fg:x="48193" fg:w="14"/><text x="60.2924%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22,508 samples, 28.04%)</title><rect x="32.0214%" y="149" width="28.0421%" height="15" fill="rgb(244,70,9)" fg:x="25702" fg:w="22508"/><text x="32.2714%" y="159.50">dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as allo..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.12%)</title><rect x="60.0635%" y="149" width="0.1208%" height="15" fill="rgb(217,125,39)" fg:x="48210" fg:w="97"/><text x="60.3135%" y="159.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (137 samples, 0.17%)</title><rect x="60.1894%" y="149" width="0.1707%" height="15" fill="rgb(235,36,10)" fg:x="48311" fg:w="137"/><text x="60.4394%" y="159.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (51 samples, 0.06%)</title><rect x="61.0067%" y="133" width="0.0635%" height="15" fill="rgb(251,123,47)" fg:x="48967" fg:w="51"/><text x="61.2567%" y="143.50"></text></g><g><title>dateo_fun_remover`__rust_realloc (12 samples, 0.01%)</title><rect x="61.0702%" y="133" width="0.0150%" height="15" fill="rgb(221,13,13)" fg:x="49018" fg:w="12"/><text x="61.3202%" y="143.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (216 samples, 0.27%)</title><rect x="61.5112%" y="117" width="0.2691%" height="15" fill="rgb(238,131,9)" fg:x="49372" fg:w="216"/><text x="61.7612%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e96 (57 samples, 0.07%)</title><rect x="61.7804%" y="117" width="0.0710%" height="15" fill="rgb(211,50,8)" fg:x="49588" fg:w="57"/><text x="62.0304%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57ea1 (21 samples, 0.03%)</title><rect x="61.8526%" y="117" width="0.0262%" height="15" fill="rgb(245,182,24)" fg:x="49646" fg:w="21"/><text x="62.1026%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57eae (11 samples, 0.01%)</title><rect x="61.8813%" y="117" width="0.0137%" height="15" fill="rgb(242,14,37)" fg:x="49669" fg:w="11"/><text x="62.1313%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57ebe (17 samples, 0.02%)</title><rect x="61.8962%" y="117" width="0.0212%" height="15" fill="rgb(246,228,12)" fg:x="49681" fg:w="17"/><text x="62.1462%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57ec5 (9 samples, 0.01%)</title><rect x="61.9174%" y="117" width="0.0112%" height="15" fill="rgb(213,55,15)" fg:x="49698" fg:w="9"/><text x="62.1674%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57ece (17 samples, 0.02%)</title><rect x="61.9286%" y="117" width="0.0212%" height="15" fill="rgb(209,9,3)" fg:x="49707" fg:w="17"/><text x="62.1786%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57edd (17 samples, 0.02%)</title><rect x="61.9498%" y="117" width="0.0212%" height="15" fill="rgb(230,59,30)" fg:x="49724" fg:w="17"/><text x="62.1998%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f5b (12 samples, 0.01%)</title><rect x="61.9710%" y="117" width="0.0150%" height="15" fill="rgb(209,121,21)" fg:x="49741" fg:w="12"/><text x="62.2210%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f65 (11 samples, 0.01%)</title><rect x="61.9946%" y="117" width="0.0137%" height="15" fill="rgb(220,109,13)" fg:x="49760" fg:w="11"/><text x="62.2446%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f6b (10 samples, 0.01%)</title><rect x="62.0083%" y="117" width="0.0125%" height="15" fill="rgb(232,18,1)" fg:x="49771" fg:w="10"/><text x="62.2583%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f71 (20 samples, 0.02%)</title><rect x="62.0270%" y="117" width="0.0249%" height="15" fill="rgb(215,41,42)" fg:x="49786" fg:w="20"/><text x="62.2770%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f7b (140 samples, 0.17%)</title><rect x="62.0594%" y="117" width="0.1744%" height="15" fill="rgb(224,123,36)" fg:x="49812" fg:w="140"/><text x="62.3094%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f8d (26 samples, 0.03%)</title><rect x="62.2351%" y="117" width="0.0324%" height="15" fill="rgb(240,125,3)" fg:x="49953" fg:w="26"/><text x="62.4851%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57f9a (42 samples, 0.05%)</title><rect x="62.2712%" y="117" width="0.0523%" height="15" fill="rgb(205,98,50)" fg:x="49982" fg:w="42"/><text x="62.5212%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fa8 (33 samples, 0.04%)</title><rect x="62.3323%" y="117" width="0.0411%" height="15" fill="rgb(205,185,37)" fg:x="50031" fg:w="33"/><text x="62.5823%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fb6 (27 samples, 0.03%)</title><rect x="62.3784%" y="117" width="0.0336%" height="15" fill="rgb(238,207,15)" fg:x="50068" fg:w="27"/><text x="62.6284%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fba (15 samples, 0.02%)</title><rect x="62.4120%" y="117" width="0.0187%" height="15" fill="rgb(213,199,42)" fg:x="50095" fg:w="15"/><text x="62.6620%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fc0 (13 samples, 0.02%)</title><rect x="62.4307%" y="117" width="0.0162%" height="15" fill="rgb(235,201,11)" fg:x="50110" fg:w="13"/><text x="62.6807%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fca (10 samples, 0.01%)</title><rect x="62.4556%" y="117" width="0.0125%" height="15" fill="rgb(207,46,11)" fg:x="50130" fg:w="10"/><text x="62.7056%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fda (9 samples, 0.01%)</title><rect x="62.4731%" y="117" width="0.0112%" height="15" fill="rgb(241,35,35)" fg:x="50144" fg:w="9"/><text x="62.7231%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fe6 (16 samples, 0.02%)</title><rect x="62.4942%" y="117" width="0.0199%" height="15" fill="rgb(243,32,47)" fg:x="50161" fg:w="16"/><text x="62.7442%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fe9 (17 samples, 0.02%)</title><rect x="62.5142%" y="117" width="0.0212%" height="15" fill="rgb(247,202,23)" fg:x="50177" fg:w="17"/><text x="62.7642%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57feb (10 samples, 0.01%)</title><rect x="62.5354%" y="117" width="0.0125%" height="15" fill="rgb(219,102,11)" fg:x="50194" fg:w="10"/><text x="62.7854%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fef (18 samples, 0.02%)</title><rect x="62.5478%" y="117" width="0.0224%" height="15" fill="rgb(243,110,44)" fg:x="50204" fg:w="18"/><text x="62.7978%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57ffa (15 samples, 0.02%)</title><rect x="62.5827%" y="117" width="0.0187%" height="15" fill="rgb(222,74,54)" fg:x="50232" fg:w="15"/><text x="62.8327%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57fff (11 samples, 0.01%)</title><rect x="62.6014%" y="117" width="0.0137%" height="15" fill="rgb(216,99,12)" fg:x="50247" fg:w="11"/><text x="62.8514%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58004 (1,091 samples, 1.36%)</title><rect x="62.6238%" y="117" width="1.3592%" height="15" fill="rgb(226,22,26)" fg:x="50265" fg:w="1091"/><text x="62.8738%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58026 (37 samples, 0.05%)</title><rect x="63.9880%" y="117" width="0.0461%" height="15" fill="rgb(217,163,10)" fg:x="51360" fg:w="37"/><text x="64.2380%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59104 (24 samples, 0.03%)</title><rect x="64.0379%" y="117" width="0.0299%" height="15" fill="rgb(213,25,53)" fg:x="51400" fg:w="24"/><text x="64.2879%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59106 (17 samples, 0.02%)</title><rect x="64.0678%" y="117" width="0.0212%" height="15" fill="rgb(252,105,26)" fg:x="51424" fg:w="17"/><text x="64.3178%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5910a (16 samples, 0.02%)</title><rect x="64.0964%" y="117" width="0.0199%" height="15" fill="rgb(220,39,43)" fg:x="51447" fg:w="16"/><text x="64.3464%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5910c (24 samples, 0.03%)</title><rect x="64.1164%" y="117" width="0.0299%" height="15" fill="rgb(229,68,48)" fg:x="51463" fg:w="24"/><text x="64.3664%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5910d (10 samples, 0.01%)</title><rect x="64.1463%" y="117" width="0.0125%" height="15" fill="rgb(252,8,32)" fg:x="51487" fg:w="10"/><text x="64.3963%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59114 (17 samples, 0.02%)</title><rect x="64.1625%" y="117" width="0.0212%" height="15" fill="rgb(223,20,43)" fg:x="51500" fg:w="17"/><text x="64.4125%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59119 (9 samples, 0.01%)</title><rect x="64.1836%" y="117" width="0.0112%" height="15" fill="rgb(229,81,49)" fg:x="51517" fg:w="9"/><text x="64.4336%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5911e (11 samples, 0.01%)</title><rect x="64.1949%" y="117" width="0.0137%" height="15" fill="rgb(236,28,36)" fg:x="51526" fg:w="11"/><text x="64.4449%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59125 (43 samples, 0.05%)</title><rect x="64.2086%" y="117" width="0.0536%" height="15" fill="rgb(249,185,26)" fg:x="51537" fg:w="43"/><text x="64.4586%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59132 (10 samples, 0.01%)</title><rect x="64.2684%" y="117" width="0.0125%" height="15" fill="rgb(249,174,33)" fg:x="51585" fg:w="10"/><text x="64.5184%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59142 (26 samples, 0.03%)</title><rect x="64.2808%" y="117" width="0.0324%" height="15" fill="rgb(233,201,37)" fg:x="51595" fg:w="26"/><text x="64.5308%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5916b (33 samples, 0.04%)</title><rect x="64.3232%" y="117" width="0.0411%" height="15" fill="rgb(221,78,26)" fg:x="51629" fg:w="33"/><text x="64.5732%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59176 (15 samples, 0.02%)</title><rect x="64.3743%" y="117" width="0.0187%" height="15" fill="rgb(250,127,30)" fg:x="51670" fg:w="15"/><text x="64.6243%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5917a (15 samples, 0.02%)</title><rect x="64.3929%" y="117" width="0.0187%" height="15" fill="rgb(230,49,44)" fg:x="51685" fg:w="15"/><text x="64.6429%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59184 (35 samples, 0.04%)</title><rect x="64.4166%" y="117" width="0.0436%" height="15" fill="rgb(229,67,23)" fg:x="51704" fg:w="35"/><text x="64.6666%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5920d (27 samples, 0.03%)</title><rect x="64.4602%" y="117" width="0.0336%" height="15" fill="rgb(249,83,47)" fg:x="51739" fg:w="27"/><text x="64.7102%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59227 (37 samples, 0.05%)</title><rect x="64.4964%" y="117" width="0.0461%" height="15" fill="rgb(215,43,3)" fg:x="51768" fg:w="37"/><text x="64.7464%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a657 (33 samples, 0.04%)</title><rect x="64.5425%" y="101" width="0.0411%" height="15" fill="rgb(238,154,13)" fg:x="51805" fg:w="33"/><text x="64.7925%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a65f (27 samples, 0.03%)</title><rect x="64.5923%" y="101" width="0.0336%" height="15" fill="rgb(219,56,2)" fg:x="51845" fg:w="27"/><text x="64.8423%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a667 (24 samples, 0.03%)</title><rect x="64.6297%" y="101" width="0.0299%" height="15" fill="rgb(233,0,4)" fg:x="51875" fg:w="24"/><text x="64.8797%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a67b (39 samples, 0.05%)</title><rect x="64.6608%" y="101" width="0.0486%" height="15" fill="rgb(235,30,7)" fg:x="51900" fg:w="39"/><text x="64.9108%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a68b (25 samples, 0.03%)</title><rect x="64.7106%" y="101" width="0.0311%" height="15" fill="rgb(250,79,13)" fg:x="51940" fg:w="25"/><text x="64.9606%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575b5 (27 samples, 0.03%)</title><rect x="64.7543%" y="85" width="0.0336%" height="15" fill="rgb(211,146,34)" fg:x="51975" fg:w="27"/><text x="65.0043%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5803e (18 samples, 0.02%)</title><rect x="64.7966%" y="85" width="0.0224%" height="15" fill="rgb(228,22,38)" fg:x="52009" fg:w="18"/><text x="65.0466%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5804e (41 samples, 0.05%)</title><rect x="64.8253%" y="85" width="0.0511%" height="15" fill="rgb(235,168,5)" fg:x="52032" fg:w="41"/><text x="65.0753%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5805a (21 samples, 0.03%)</title><rect x="64.8801%" y="85" width="0.0262%" height="15" fill="rgb(221,155,16)" fg:x="52076" fg:w="21"/><text x="65.1301%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58068 (33 samples, 0.04%)</title><rect x="64.9100%" y="85" width="0.0411%" height="15" fill="rgb(215,215,53)" fg:x="52100" fg:w="33"/><text x="65.1600%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5807b (24 samples, 0.03%)</title><rect x="64.9648%" y="85" width="0.0299%" height="15" fill="rgb(223,4,10)" fg:x="52144" fg:w="24"/><text x="65.2148%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5810f (22 samples, 0.03%)</title><rect x="65.0022%" y="85" width="0.0274%" height="15" fill="rgb(234,103,6)" fg:x="52174" fg:w="22"/><text x="65.2522%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58120 (30 samples, 0.04%)</title><rect x="65.0408%" y="85" width="0.0374%" height="15" fill="rgb(227,97,0)" fg:x="52205" fg:w="30"/><text x="65.2908%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5812b (13 samples, 0.02%)</title><rect x="65.0782%" y="85" width="0.0162%" height="15" fill="rgb(234,150,53)" fg:x="52235" fg:w="13"/><text x="65.3282%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58134 (31 samples, 0.04%)</title><rect x="65.0956%" y="85" width="0.0386%" height="15" fill="rgb(228,201,54)" fg:x="52249" fg:w="31"/><text x="65.3456%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58143 (17 samples, 0.02%)</title><rect x="65.1442%" y="85" width="0.0212%" height="15" fill="rgb(222,22,37)" fg:x="52288" fg:w="17"/><text x="65.3942%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5814a (10 samples, 0.01%)</title><rect x="65.1654%" y="85" width="0.0125%" height="15" fill="rgb(237,53,32)" fg:x="52305" fg:w="10"/><text x="65.4154%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58153 (26 samples, 0.03%)</title><rect x="65.1791%" y="85" width="0.0324%" height="15" fill="rgb(233,25,53)" fg:x="52316" fg:w="26"/><text x="65.4291%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58156 (9 samples, 0.01%)</title><rect x="65.2115%" y="85" width="0.0112%" height="15" fill="rgb(210,40,34)" fg:x="52342" fg:w="9"/><text x="65.4615%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5815f (22 samples, 0.03%)</title><rect x="65.2314%" y="85" width="0.0274%" height="15" fill="rgb(241,220,44)" fg:x="52358" fg:w="22"/><text x="65.4814%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58180 (22 samples, 0.03%)</title><rect x="65.2688%" y="85" width="0.0274%" height="15" fill="rgb(235,28,35)" fg:x="52388" fg:w="22"/><text x="65.5188%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f581a0 (39 samples, 0.05%)</title><rect x="65.3049%" y="85" width="0.0486%" height="15" fill="rgb(210,56,17)" fg:x="52417" fg:w="39"/><text x="65.5549%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f581b2 (19 samples, 0.02%)</title><rect x="65.3697%" y="85" width="0.0237%" height="15" fill="rgb(224,130,29)" fg:x="52469" fg:w="19"/><text x="65.6197%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f581bf (29 samples, 0.04%)</title><rect x="65.4034%" y="85" width="0.0361%" height="15" fill="rgb(235,212,8)" fg:x="52496" fg:w="29"/><text x="65.6534%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f581cb (920 samples, 1.15%)</title><rect x="65.4519%" y="85" width="1.1462%" height="15" fill="rgb(223,33,50)" fg:x="52535" fg:w="920"/><text x="65.7019%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f581e0 (29 samples, 0.04%)</title><rect x="66.6081%" y="85" width="0.0361%" height="15" fill="rgb(219,149,13)" fg:x="53463" fg:w="29"/><text x="66.8581%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a760 (27 samples, 0.03%)</title><rect x="66.6555%" y="85" width="0.0336%" height="15" fill="rgb(250,156,29)" fg:x="53501" fg:w="27"/><text x="66.9055%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a768 (34 samples, 0.04%)</title><rect x="66.7003%" y="85" width="0.0424%" height="15" fill="rgb(216,193,19)" fg:x="53537" fg:w="34"/><text x="66.9503%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a770 (16 samples, 0.02%)</title><rect x="66.7526%" y="85" width="0.0199%" height="15" fill="rgb(216,135,14)" fg:x="53579" fg:w="16"/><text x="67.0026%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a77d (29 samples, 0.04%)</title><rect x="66.7763%" y="85" width="0.0361%" height="15" fill="rgb(241,47,5)" fg:x="53598" fg:w="29"/><text x="67.0263%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a782 (38 samples, 0.05%)</title><rect x="66.8124%" y="85" width="0.0473%" height="15" fill="rgb(233,42,35)" fg:x="53627" fg:w="38"/><text x="67.0624%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f596d4 (12 samples, 0.01%)</title><rect x="66.8785%" y="53" width="0.0150%" height="15" fill="rgb(231,13,6)" fg:x="53680" fg:w="12"/><text x="67.1285%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59712 (15 samples, 0.02%)</title><rect x="66.8947%" y="53" width="0.0187%" height="15" fill="rgb(207,181,40)" fg:x="53693" fg:w="15"/><text x="67.1447%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f597de (37 samples, 0.05%)</title><rect x="66.9146%" y="53" width="0.0461%" height="15" fill="rgb(254,173,49)" fg:x="53709" fg:w="37"/><text x="67.1646%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f58464 (84 samples, 0.10%)</title><rect x="66.8648%" y="69" width="0.1047%" height="15" fill="rgb(221,1,38)" fg:x="53669" fg:w="84"/><text x="67.1148%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a7a0 (90 samples, 0.11%)</title><rect x="66.8610%" y="85" width="0.1121%" height="15" fill="rgb(206,124,46)" fg:x="53666" fg:w="90"/><text x="67.1110%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a7df (36 samples, 0.04%)</title><rect x="66.9732%" y="85" width="0.0449%" height="15" fill="rgb(249,21,11)" fg:x="53756" fg:w="36"/><text x="67.2232%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a7f0 (28 samples, 0.03%)</title><rect x="67.0230%" y="85" width="0.0349%" height="15" fill="rgb(222,201,40)" fg:x="53796" fg:w="28"/><text x="67.2730%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a84d (27 samples, 0.03%)</title><rect x="67.0591%" y="85" width="0.0336%" height="15" fill="rgb(235,61,29)" fg:x="53825" fg:w="27"/><text x="67.3091%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57393 (32 samples, 0.04%)</title><rect x="67.0928%" y="69" width="0.0399%" height="15" fill="rgb(219,207,3)" fg:x="53852" fg:w="32"/><text x="67.3428%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57395 (14 samples, 0.02%)</title><rect x="67.1326%" y="69" width="0.0174%" height="15" fill="rgb(222,56,46)" fg:x="53884" fg:w="14"/><text x="67.3826%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57399 (26 samples, 0.03%)</title><rect x="67.1550%" y="69" width="0.0324%" height="15" fill="rgb(239,76,54)" fg:x="53902" fg:w="26"/><text x="67.4050%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573a0 (25 samples, 0.03%)</title><rect x="67.1937%" y="69" width="0.0311%" height="15" fill="rgb(231,124,27)" fg:x="53933" fg:w="25"/><text x="67.4437%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573b2 (18 samples, 0.02%)</title><rect x="67.2286%" y="69" width="0.0224%" height="15" fill="rgb(249,195,6)" fg:x="53961" fg:w="18"/><text x="67.4786%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573ca (37 samples, 0.05%)</title><rect x="67.2547%" y="69" width="0.0461%" height="15" fill="rgb(237,174,47)" fg:x="53982" fg:w="37"/><text x="67.5047%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573d3 (9 samples, 0.01%)</title><rect x="67.3021%" y="69" width="0.0112%" height="15" fill="rgb(206,201,31)" fg:x="54020" fg:w="9"/><text x="67.5521%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573d9 (31 samples, 0.04%)</title><rect x="67.3133%" y="69" width="0.0386%" height="15" fill="rgb(231,57,52)" fg:x="54029" fg:w="31"/><text x="67.5633%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573dd (98 samples, 0.12%)</title><rect x="67.3519%" y="69" width="0.1221%" height="15" fill="rgb(248,177,22)" fg:x="54060" fg:w="98"/><text x="67.6019%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573e7 (466 samples, 0.58%)</title><rect x="67.4740%" y="69" width="0.5806%" height="15" fill="rgb(215,211,37)" fg:x="54158" fg:w="466"/><text x="67.7240%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573eb (33 samples, 0.04%)</title><rect x="68.0546%" y="69" width="0.0411%" height="15" fill="rgb(241,128,51)" fg:x="54624" fg:w="33"/><text x="68.3046%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573f8 (37 samples, 0.05%)</title><rect x="68.0957%" y="69" width="0.0461%" height="15" fill="rgb(227,165,31)" fg:x="54657" fg:w="37"/><text x="68.3457%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57407 (200 samples, 0.25%)</title><rect x="68.1418%" y="69" width="0.2492%" height="15" fill="rgb(228,167,24)" fg:x="54694" fg:w="200"/><text x="68.3918%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5740a (28 samples, 0.03%)</title><rect x="68.3910%" y="69" width="0.0349%" height="15" fill="rgb(228,143,12)" fg:x="54894" fg:w="28"/><text x="68.6410%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57414 (25 samples, 0.03%)</title><rect x="68.4271%" y="69" width="0.0311%" height="15" fill="rgb(249,149,8)" fg:x="54923" fg:w="25"/><text x="68.6771%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5741b (92 samples, 0.11%)</title><rect x="68.4582%" y="69" width="0.1146%" height="15" fill="rgb(243,35,44)" fg:x="54948" fg:w="92"/><text x="68.7082%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5742b (37 samples, 0.05%)</title><rect x="68.5729%" y="69" width="0.0461%" height="15" fill="rgb(246,89,9)" fg:x="55040" fg:w="37"/><text x="68.8229%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57439 (22 samples, 0.03%)</title><rect x="68.6239%" y="69" width="0.0274%" height="15" fill="rgb(233,213,13)" fg:x="55081" fg:w="22"/><text x="68.8739%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5743e (9 samples, 0.01%)</title><rect x="68.6513%" y="69" width="0.0112%" height="15" fill="rgb(233,141,41)" fg:x="55103" fg:w="9"/><text x="68.9013%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57442 (25 samples, 0.03%)</title><rect x="68.6626%" y="69" width="0.0311%" height="15" fill="rgb(239,167,4)" fg:x="55112" fg:w="25"/><text x="68.9126%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57445 (31 samples, 0.04%)</title><rect x="68.6937%" y="69" width="0.0386%" height="15" fill="rgb(209,217,16)" fg:x="55137" fg:w="31"/><text x="68.9437%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57452 (31 samples, 0.04%)</title><rect x="68.7323%" y="69" width="0.0386%" height="15" fill="rgb(219,88,35)" fg:x="55168" fg:w="31"/><text x="68.9823%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57467 (37 samples, 0.05%)</title><rect x="68.7734%" y="69" width="0.0461%" height="15" fill="rgb(220,193,23)" fg:x="55201" fg:w="37"/><text x="69.0234%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57484 (30 samples, 0.04%)</title><rect x="68.8208%" y="69" width="0.0374%" height="15" fill="rgb(230,90,52)" fg:x="55239" fg:w="30"/><text x="69.0708%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57493 (39 samples, 0.05%)</title><rect x="68.8582%" y="69" width="0.0486%" height="15" fill="rgb(252,106,19)" fg:x="55269" fg:w="39"/><text x="69.1082%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574a4 (32 samples, 0.04%)</title><rect x="68.9080%" y="69" width="0.0399%" height="15" fill="rgb(206,74,20)" fg:x="55309" fg:w="32"/><text x="69.1580%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574c1 (23 samples, 0.03%)</title><rect x="68.9491%" y="69" width="0.0287%" height="15" fill="rgb(230,138,44)" fg:x="55342" fg:w="23"/><text x="69.1991%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574ce (365 samples, 0.45%)</title><rect x="68.9778%" y="69" width="0.4547%" height="15" fill="rgb(235,182,43)" fg:x="55365" fg:w="365"/><text x="69.2278%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574d9 (14 samples, 0.02%)</title><rect x="69.4350%" y="69" width="0.0174%" height="15" fill="rgb(242,16,51)" fg:x="55732" fg:w="14"/><text x="69.6850%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574e7 (17 samples, 0.02%)</title><rect x="69.4549%" y="69" width="0.0212%" height="15" fill="rgb(248,9,4)" fg:x="55748" fg:w="17"/><text x="69.7049%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574ef (74 samples, 0.09%)</title><rect x="69.4761%" y="69" width="0.0922%" height="15" fill="rgb(210,31,22)" fg:x="55765" fg:w="74"/><text x="69.7261%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574fc (16 samples, 0.02%)</title><rect x="69.5683%" y="69" width="0.0199%" height="15" fill="rgb(239,54,39)" fg:x="55839" fg:w="16"/><text x="69.8183%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574fe (17 samples, 0.02%)</title><rect x="69.5882%" y="69" width="0.0212%" height="15" fill="rgb(230,99,41)" fg:x="55855" fg:w="17"/><text x="69.8382%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57504 (15 samples, 0.02%)</title><rect x="69.6094%" y="69" width="0.0187%" height="15" fill="rgb(253,106,12)" fg:x="55872" fg:w="15"/><text x="69.8594%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57509 (232 samples, 0.29%)</title><rect x="69.6281%" y="69" width="0.2890%" height="15" fill="rgb(213,46,41)" fg:x="55887" fg:w="232"/><text x="69.8781%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5754a (20 samples, 0.02%)</title><rect x="69.9171%" y="69" width="0.0249%" height="15" fill="rgb(215,133,35)" fg:x="56119" fg:w="20"/><text x="70.1671%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5755a (12 samples, 0.01%)</title><rect x="69.9433%" y="69" width="0.0150%" height="15" fill="rgb(213,28,5)" fg:x="56140" fg:w="12"/><text x="70.1933%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57568 (23 samples, 0.03%)</title><rect x="69.9608%" y="69" width="0.0287%" height="15" fill="rgb(215,77,49)" fg:x="56154" fg:w="23"/><text x="70.2108%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575a4 (27 samples, 0.03%)</title><rect x="69.9907%" y="69" width="0.0336%" height="15" fill="rgb(248,100,22)" fg:x="56178" fg:w="27"/><text x="70.2407%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575ae (27 samples, 0.03%)</title><rect x="70.0305%" y="69" width="0.0336%" height="15" fill="rgb(208,67,9)" fg:x="56210" fg:w="27"/><text x="70.2805%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575b9 (11 samples, 0.01%)</title><rect x="70.0704%" y="69" width="0.0137%" height="15" fill="rgb(219,133,21)" fg:x="56242" fg:w="11"/><text x="70.3204%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575c6 (12 samples, 0.01%)</title><rect x="70.0841%" y="69" width="0.0150%" height="15" fill="rgb(246,46,29)" fg:x="56253" fg:w="12"/><text x="70.3341%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575d8 (10 samples, 0.01%)</title><rect x="70.0990%" y="69" width="0.0125%" height="15" fill="rgb(246,185,52)" fg:x="56265" fg:w="10"/><text x="70.3490%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a852 (2,436 samples, 3.03%)</title><rect x="67.0928%" y="85" width="3.0349%" height="15" fill="rgb(252,136,11)" fg:x="53852" fg:w="2436"/><text x="67.3428%" y="95.50">lib..</text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a85d (21 samples, 0.03%)</title><rect x="70.1314%" y="85" width="0.0262%" height="15" fill="rgb(219,138,53)" fg:x="56291" fg:w="21"/><text x="70.3814%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a86a (25 samples, 0.03%)</title><rect x="70.1601%" y="85" width="0.0311%" height="15" fill="rgb(211,51,23)" fg:x="56314" fg:w="25"/><text x="70.4101%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a86f (215 samples, 0.27%)</title><rect x="70.1912%" y="85" width="0.2679%" height="15" fill="rgb(247,221,28)" fg:x="56339" fg:w="215"/><text x="70.4412%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (197 samples, 0.25%)</title><rect x="70.2137%" y="69" width="0.2454%" height="15" fill="rgb(251,222,45)" fg:x="56357" fg:w="197"/><text x="70.4637%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a877 (17 samples, 0.02%)</title><rect x="70.4616%" y="85" width="0.0212%" height="15" fill="rgb(217,162,53)" fg:x="56556" fg:w="17"/><text x="70.7116%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716fc (29 samples, 0.04%)</title><rect x="70.4828%" y="69" width="0.0361%" height="15" fill="rgb(229,93,14)" fg:x="56573" fg:w="29"/><text x="70.7328%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716fe (11 samples, 0.01%)</title><rect x="70.5189%" y="69" width="0.0137%" height="15" fill="rgb(209,67,49)" fg:x="56602" fg:w="11"/><text x="70.7689%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71702 (16 samples, 0.02%)</title><rect x="70.5363%" y="69" width="0.0199%" height="15" fill="rgb(213,87,29)" fg:x="56616" fg:w="16"/><text x="70.7863%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71704 (28 samples, 0.03%)</title><rect x="70.5563%" y="69" width="0.0349%" height="15" fill="rgb(205,151,52)" fg:x="56632" fg:w="28"/><text x="70.8063%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71709 (12 samples, 0.01%)</title><rect x="70.5962%" y="69" width="0.0150%" height="15" fill="rgb(253,215,39)" fg:x="56664" fg:w="12"/><text x="70.8462%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7170c (21 samples, 0.03%)</title><rect x="70.6111%" y="69" width="0.0262%" height="15" fill="rgb(221,220,41)" fg:x="56676" fg:w="21"/><text x="70.8611%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71722 (9 samples, 0.01%)</title><rect x="70.6447%" y="69" width="0.0112%" height="15" fill="rgb(218,133,21)" fg:x="56703" fg:w="9"/><text x="70.8947%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71725 (15 samples, 0.02%)</title><rect x="70.6560%" y="69" width="0.0187%" height="15" fill="rgb(221,193,43)" fg:x="56712" fg:w="15"/><text x="70.9060%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7173f (19 samples, 0.02%)</title><rect x="70.6771%" y="69" width="0.0237%" height="15" fill="rgb(240,128,52)" fg:x="56729" fg:w="19"/><text x="70.9271%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71746 (17 samples, 0.02%)</title><rect x="70.7008%" y="69" width="0.0212%" height="15" fill="rgb(253,114,12)" fg:x="56748" fg:w="17"/><text x="70.9508%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7175f (9 samples, 0.01%)</title><rect x="70.7270%" y="69" width="0.0112%" height="15" fill="rgb(215,223,47)" fg:x="56769" fg:w="9"/><text x="70.9770%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717dd (23 samples, 0.03%)</title><rect x="70.7382%" y="69" width="0.0287%" height="15" fill="rgb(248,225,23)" fg:x="56778" fg:w="23"/><text x="70.9882%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717e8 (12 samples, 0.01%)</title><rect x="70.7706%" y="69" width="0.0150%" height="15" fill="rgb(250,108,0)" fg:x="56804" fg:w="12"/><text x="71.0206%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717ef (23 samples, 0.03%)</title><rect x="70.7855%" y="69" width="0.0287%" height="15" fill="rgb(228,208,7)" fg:x="56816" fg:w="23"/><text x="71.0355%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717fc (9 samples, 0.01%)</title><rect x="70.8217%" y="69" width="0.0112%" height="15" fill="rgb(244,45,10)" fg:x="56845" fg:w="9"/><text x="71.0717%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717ff (38 samples, 0.05%)</title><rect x="70.8329%" y="69" width="0.0473%" height="15" fill="rgb(207,125,25)" fg:x="56854" fg:w="38"/><text x="71.0829%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71813 (23 samples, 0.03%)</title><rect x="70.8902%" y="69" width="0.0287%" height="15" fill="rgb(210,195,18)" fg:x="56900" fg:w="23"/><text x="71.1402%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7181c (9 samples, 0.01%)</title><rect x="70.9188%" y="69" width="0.0112%" height="15" fill="rgb(249,80,12)" fg:x="56923" fg:w="9"/><text x="71.1688%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71820 (18 samples, 0.02%)</title><rect x="70.9300%" y="69" width="0.0224%" height="15" fill="rgb(221,65,9)" fg:x="56932" fg:w="18"/><text x="71.1800%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7182d (13 samples, 0.02%)</title><rect x="70.9525%" y="69" width="0.0162%" height="15" fill="rgb(235,49,36)" fg:x="56950" fg:w="13"/><text x="71.2025%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7182f (23 samples, 0.03%)</title><rect x="70.9687%" y="69" width="0.0287%" height="15" fill="rgb(225,32,20)" fg:x="56963" fg:w="23"/><text x="71.2187%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7183d (9 samples, 0.01%)</title><rect x="70.9998%" y="69" width="0.0112%" height="15" fill="rgb(215,141,46)" fg:x="56988" fg:w="9"/><text x="71.2498%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71849 (27 samples, 0.03%)</title><rect x="71.0173%" y="69" width="0.0336%" height="15" fill="rgb(250,160,47)" fg:x="57002" fg:w="27"/><text x="71.2673%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71866 (15 samples, 0.02%)</title><rect x="71.0683%" y="69" width="0.0187%" height="15" fill="rgb(216,222,40)" fg:x="57043" fg:w="15"/><text x="71.3183%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71876 (28 samples, 0.03%)</title><rect x="71.1032%" y="69" width="0.0349%" height="15" fill="rgb(234,217,39)" fg:x="57071" fg:w="28"/><text x="71.3532%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71884 (19 samples, 0.02%)</title><rect x="71.1568%" y="69" width="0.0237%" height="15" fill="rgb(207,178,40)" fg:x="57114" fg:w="19"/><text x="71.4068%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71891 (581 samples, 0.72%)</title><rect x="71.1992%" y="69" width="0.7239%" height="15" fill="rgb(221,136,13)" fg:x="57148" fg:w="581"/><text x="71.4492%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718c2 (13 samples, 0.02%)</title><rect x="71.9230%" y="69" width="0.0162%" height="15" fill="rgb(249,199,10)" fg:x="57729" fg:w="13"/><text x="72.1730%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718d0 (9 samples, 0.01%)</title><rect x="71.9492%" y="69" width="0.0112%" height="15" fill="rgb(249,222,13)" fg:x="57750" fg:w="9"/><text x="72.1992%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718d5 (15 samples, 0.02%)</title><rect x="71.9604%" y="69" width="0.0187%" height="15" fill="rgb(244,185,38)" fg:x="57759" fg:w="15"/><text x="72.2104%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718e5 (33 samples, 0.04%)</title><rect x="71.9890%" y="69" width="0.0411%" height="15" fill="rgb(236,202,9)" fg:x="57782" fg:w="33"/><text x="72.2390%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718ed (9 samples, 0.01%)</title><rect x="72.0314%" y="69" width="0.0112%" height="15" fill="rgb(250,229,37)" fg:x="57816" fg:w="9"/><text x="72.2814%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718f1 (16 samples, 0.02%)</title><rect x="72.0426%" y="69" width="0.0199%" height="15" fill="rgb(206,174,23)" fg:x="57825" fg:w="16"/><text x="72.2926%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718f5 (21 samples, 0.03%)</title><rect x="72.0625%" y="69" width="0.0262%" height="15" fill="rgb(211,33,43)" fg:x="57841" fg:w="21"/><text x="72.3125%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71901 (178 samples, 0.22%)</title><rect x="72.0949%" y="69" width="0.2218%" height="15" fill="rgb(245,58,50)" fg:x="57867" fg:w="178"/><text x="72.3449%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (163 samples, 0.20%)</title><rect x="72.1136%" y="53" width="0.2031%" height="15" fill="rgb(244,68,36)" fg:x="57882" fg:w="163"/><text x="72.3636%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7190f (11 samples, 0.01%)</title><rect x="72.3204%" y="69" width="0.0137%" height="15" fill="rgb(232,229,15)" fg:x="58048" fg:w="11"/><text x="72.5704%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71912 (28 samples, 0.03%)</title><rect x="72.3341%" y="69" width="0.0349%" height="15" fill="rgb(254,30,23)" fg:x="58059" fg:w="28"/><text x="72.5841%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71924 (17 samples, 0.02%)</title><rect x="72.3890%" y="69" width="0.0212%" height="15" fill="rgb(235,160,14)" fg:x="58103" fg:w="17"/><text x="72.6390%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71934 (16 samples, 0.02%)</title><rect x="72.4201%" y="69" width="0.0199%" height="15" fill="rgb(212,155,44)" fg:x="58128" fg:w="16"/><text x="72.6701%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71945 (12 samples, 0.01%)</title><rect x="72.4450%" y="69" width="0.0150%" height="15" fill="rgb(226,2,50)" fg:x="58148" fg:w="12"/><text x="72.6950%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71947 (19 samples, 0.02%)</title><rect x="72.4600%" y="69" width="0.0237%" height="15" fill="rgb(234,177,6)" fg:x="58160" fg:w="19"/><text x="72.7100%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71959 (15 samples, 0.02%)</title><rect x="72.4886%" y="69" width="0.0187%" height="15" fill="rgb(217,24,9)" fg:x="58183" fg:w="15"/><text x="72.7386%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7195b (18 samples, 0.02%)</title><rect x="72.5073%" y="69" width="0.0224%" height="15" fill="rgb(220,13,46)" fg:x="58198" fg:w="18"/><text x="72.7573%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71969 (11 samples, 0.01%)</title><rect x="72.5347%" y="69" width="0.0137%" height="15" fill="rgb(239,221,27)" fg:x="58220" fg:w="11"/><text x="72.7847%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7196c (10 samples, 0.01%)</title><rect x="72.5484%" y="69" width="0.0125%" height="15" fill="rgb(222,198,25)" fg:x="58231" fg:w="10"/><text x="72.7984%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71992 (115 samples, 0.14%)</title><rect x="72.5796%" y="69" width="0.1433%" height="15" fill="rgb(211,99,13)" fg:x="58256" fg:w="115"/><text x="72.8296%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71999 (11 samples, 0.01%)</title><rect x="72.7229%" y="69" width="0.0137%" height="15" fill="rgb(232,111,31)" fg:x="58371" fg:w="11"/><text x="72.9729%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7199b (14 samples, 0.02%)</title><rect x="72.7366%" y="69" width="0.0174%" height="15" fill="rgb(245,82,37)" fg:x="58382" fg:w="14"/><text x="72.9866%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7199e (294 samples, 0.37%)</title><rect x="72.7540%" y="69" width="0.3663%" height="15" fill="rgb(227,149,46)" fg:x="58396" fg:w="294"/><text x="73.0040%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719a8 (15 samples, 0.02%)</title><rect x="73.1315%" y="69" width="0.0187%" height="15" fill="rgb(218,36,50)" fg:x="58699" fg:w="15"/><text x="73.3815%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719aa (16 samples, 0.02%)</title><rect x="73.1502%" y="69" width="0.0199%" height="15" fill="rgb(226,80,48)" fg:x="58714" fg:w="16"/><text x="73.4002%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719b7 (460 samples, 0.57%)</title><rect x="73.1726%" y="69" width="0.5731%" height="15" fill="rgb(238,224,15)" fg:x="58732" fg:w="460"/><text x="73.4226%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a39 (37 samples, 0.05%)</title><rect x="73.7582%" y="69" width="0.0461%" height="15" fill="rgb(241,136,10)" fg:x="59202" fg:w="37"/><text x="74.0082%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a40 (82 samples, 0.10%)</title><rect x="73.8055%" y="69" width="0.1022%" height="15" fill="rgb(208,32,45)" fg:x="59240" fg:w="82"/><text x="74.0555%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7a472 (31 samples, 0.04%)</title><rect x="73.9089%" y="69" width="0.0386%" height="15" fill="rgb(207,135,9)" fg:x="59323" fg:w="31"/><text x="74.1589%" y="79.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (27 samples, 0.03%)</title><rect x="73.9475%" y="69" width="0.0336%" height="15" fill="rgb(206,86,44)" fg:x="59354" fg:w="27"/><text x="74.1975%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a87c (2,862 samples, 3.57%)</title><rect x="70.4828%" y="85" width="3.5657%" height="15" fill="rgb(245,177,15)" fg:x="56573" fg:w="2862"/><text x="70.7328%" y="95.50">libs..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (54 samples, 0.07%)</title><rect x="73.9812%" y="69" width="0.0673%" height="15" fill="rgb(206,64,50)" fg:x="59381" fg:w="54"/><text x="74.2312%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a884 (40 samples, 0.05%)</title><rect x="74.0485%" y="85" width="0.0498%" height="15" fill="rgb(234,36,40)" fg:x="59435" fg:w="40"/><text x="74.2985%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a88c (59 samples, 0.07%)</title><rect x="74.1008%" y="85" width="0.0735%" height="15" fill="rgb(213,64,8)" fg:x="59477" fg:w="59"/><text x="74.3508%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a894 (29 samples, 0.04%)</title><rect x="74.1743%" y="85" width="0.0361%" height="15" fill="rgb(210,75,36)" fg:x="59536" fg:w="29"/><text x="74.4243%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5b532 (11 samples, 0.01%)</title><rect x="74.2191%" y="85" width="0.0137%" height="15" fill="rgb(229,88,21)" fg:x="59572" fg:w="11"/><text x="74.4691%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716f8 (14 samples, 0.02%)</title><rect x="74.2441%" y="85" width="0.0174%" height="15" fill="rgb(252,204,47)" fg:x="59592" fg:w="14"/><text x="74.4941%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a47 (28 samples, 0.03%)</title><rect x="74.2628%" y="85" width="0.0349%" height="15" fill="rgb(208,77,27)" fg:x="59607" fg:w="28"/><text x="74.5128%" y="95.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (37 samples, 0.05%)</title><rect x="74.3001%" y="85" width="0.0461%" height="15" fill="rgb(221,76,26)" fg:x="59637" fg:w="37"/><text x="74.5501%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a698 (7,791 samples, 9.71%)</title><rect x="64.7430%" y="101" width="9.7066%" height="15" fill="rgb(225,139,18)" fg:x="51966" fg:w="7791"/><text x="64.9930%" y="111.50">libsystem_mall..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (83 samples, 0.10%)</title><rect x="74.3462%" y="85" width="0.1034%" height="15" fill="rgb(230,137,11)" fg:x="59674" fg:w="83"/><text x="74.5962%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a6a2 (29 samples, 0.04%)</title><rect x="74.4496%" y="101" width="0.0361%" height="15" fill="rgb(212,28,1)" fg:x="59757" fg:w="29"/><text x="74.6996%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a6b0 (27 samples, 0.03%)</title><rect x="74.4858%" y="101" width="0.0336%" height="15" fill="rgb(248,164,17)" fg:x="59786" fg:w="27"/><text x="74.7358%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a6bb (38 samples, 0.05%)</title><rect x="74.5194%" y="101" width="0.0473%" height="15" fill="rgb(222,171,42)" fg:x="59813" fg:w="38"/><text x="74.7694%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a6c2 (35 samples, 0.04%)</title><rect x="74.5680%" y="101" width="0.0436%" height="15" fill="rgb(243,84,45)" fg:x="59852" fg:w="35"/><text x="74.8180%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a736 (84 samples, 0.10%)</title><rect x="74.6116%" y="101" width="0.1047%" height="15" fill="rgb(252,49,23)" fg:x="59887" fg:w="84"/><text x="74.8616%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a740 (29 samples, 0.04%)</title><rect x="74.7187%" y="101" width="0.0361%" height="15" fill="rgb(215,19,7)" fg:x="59973" fg:w="29"/><text x="74.9687%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a749 (10 samples, 0.01%)</title><rect x="74.7561%" y="101" width="0.0125%" height="15" fill="rgb(238,81,41)" fg:x="60003" fg:w="10"/><text x="75.0061%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a750 (37 samples, 0.05%)</title><rect x="74.7686%" y="101" width="0.0461%" height="15" fill="rgb(210,199,37)" fg:x="60013" fg:w="37"/><text x="75.0186%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59235 (8,252 samples, 10.28%)</title><rect x="64.5425%" y="117" width="10.2809%" height="15" fill="rgb(244,192,49)" fg:x="51805" fg:w="8252"/><text x="64.7925%" y="127.50">libsystem_mallo..</text></g><g><title>libsystem_malloc.dylib`0x7ff806f59238 (37 samples, 0.05%)</title><rect x="74.8234%" y="117" width="0.0461%" height="15" fill="rgb(226,211,11)" fg:x="60057" fg:w="37"/><text x="75.0734%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59260 (26 samples, 0.03%)</title><rect x="74.8707%" y="117" width="0.0324%" height="15" fill="rgb(236,162,54)" fg:x="60095" fg:w="26"/><text x="75.1207%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59264 (19 samples, 0.02%)</title><rect x="74.9031%" y="117" width="0.0237%" height="15" fill="rgb(220,229,9)" fg:x="60121" fg:w="19"/><text x="75.1531%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59267 (23 samples, 0.03%)</title><rect x="74.9305%" y="117" width="0.0287%" height="15" fill="rgb(250,87,22)" fg:x="60143" fg:w="23"/><text x="75.1805%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f59269 (10 samples, 0.01%)</title><rect x="74.9592%" y="117" width="0.0125%" height="15" fill="rgb(239,43,17)" fg:x="60166" fg:w="10"/><text x="75.2092%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5a653 (33 samples, 0.04%)</title><rect x="74.9741%" y="117" width="0.0411%" height="15" fill="rgb(231,177,25)" fg:x="60178" fg:w="33"/><text x="75.2241%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (11,183 samples, 13.93%)</title><rect x="61.0852%" y="133" width="13.9326%" height="15" fill="rgb(219,179,1)" fg:x="49030" fg:w="11183"/><text x="61.3352%" y="143.50">dateo_fun_remover`all..</text></g><g><title>libsystem_malloc.dylib`0x7ff806f59100 (48 samples, 0.06%)</title><rect x="75.0178%" y="133" width="0.0598%" height="15" fill="rgb(238,219,53)" fg:x="60213" fg:w="48"/><text x="75.2678%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11,835 samples, 14.74%)</title><rect x="60.3663%" y="149" width="14.7449%" height="15" fill="rgb(232,167,36)" fg:x="48453" fg:w="11835"/><text x="60.6163%" y="159.50">dateo_fun_remover`allo..</text></g><g><title>libsystem_malloc.dylib`0x7ff806f5926e (19 samples, 0.02%)</title><rect x="75.0875%" y="133" width="0.0237%" height="15" fill="rgb(244,19,51)" fg:x="60269" fg:w="19"/><text x="75.3375%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (38 samples, 0.05%)</title><rect x="75.1112%" y="149" width="0.0473%" height="15" fill="rgb(224,6,22)" fg:x="60288" fg:w="38"/><text x="75.3612%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57350 (86 samples, 0.11%)</title><rect x="75.1585%" y="149" width="0.1071%" height="15" fill="rgb(224,145,5)" fg:x="60326" fg:w="86"/><text x="75.4085%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57393 (26 samples, 0.03%)</title><rect x="75.2794%" y="149" width="0.0324%" height="15" fill="rgb(234,130,49)" fg:x="60423" fg:w="26"/><text x="75.5294%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57399 (24 samples, 0.03%)</title><rect x="75.3180%" y="149" width="0.0299%" height="15" fill="rgb(254,6,2)" fg:x="60454" fg:w="24"/><text x="75.5680%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573a0 (16 samples, 0.02%)</title><rect x="75.3504%" y="149" width="0.0199%" height="15" fill="rgb(208,96,46)" fg:x="60480" fg:w="16"/><text x="75.6004%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573b2 (16 samples, 0.02%)</title><rect x="75.3753%" y="149" width="0.0199%" height="15" fill="rgb(239,3,39)" fg:x="60500" fg:w="16"/><text x="75.6253%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573ca (36 samples, 0.04%)</title><rect x="75.3977%" y="149" width="0.0449%" height="15" fill="rgb(233,210,1)" fg:x="60518" fg:w="36"/><text x="75.6477%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573d9 (22 samples, 0.03%)</title><rect x="75.4488%" y="149" width="0.0274%" height="15" fill="rgb(244,137,37)" fg:x="60559" fg:w="22"/><text x="75.6988%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573dd (85 samples, 0.11%)</title><rect x="75.4762%" y="149" width="0.1059%" height="15" fill="rgb(240,136,2)" fg:x="60581" fg:w="85"/><text x="75.7262%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573e7 (408 samples, 0.51%)</title><rect x="75.5821%" y="149" width="0.5083%" height="15" fill="rgb(239,18,37)" fg:x="60666" fg:w="408"/><text x="75.8321%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573eb (28 samples, 0.03%)</title><rect x="76.0905%" y="149" width="0.0349%" height="15" fill="rgb(218,185,22)" fg:x="61074" fg:w="28"/><text x="76.3405%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f573f8 (26 samples, 0.03%)</title><rect x="76.1253%" y="149" width="0.0324%" height="15" fill="rgb(225,218,4)" fg:x="61102" fg:w="26"/><text x="76.3753%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57407 (166 samples, 0.21%)</title><rect x="76.1590%" y="149" width="0.2068%" height="15" fill="rgb(230,182,32)" fg:x="61129" fg:w="166"/><text x="76.4090%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5740a (30 samples, 0.04%)</title><rect x="76.3658%" y="149" width="0.0374%" height="15" fill="rgb(242,56,43)" fg:x="61295" fg:w="30"/><text x="76.6158%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57414 (26 samples, 0.03%)</title><rect x="76.4032%" y="149" width="0.0324%" height="15" fill="rgb(233,99,24)" fg:x="61325" fg:w="26"/><text x="76.6532%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5741b (58 samples, 0.07%)</title><rect x="76.4368%" y="149" width="0.0723%" height="15" fill="rgb(234,209,42)" fg:x="61352" fg:w="58"/><text x="76.6868%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5742b (35 samples, 0.04%)</title><rect x="76.5103%" y="149" width="0.0436%" height="15" fill="rgb(227,7,12)" fg:x="61411" fg:w="35"/><text x="76.7603%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57439 (29 samples, 0.04%)</title><rect x="76.5552%" y="149" width="0.0361%" height="15" fill="rgb(245,203,43)" fg:x="61447" fg:w="29"/><text x="76.8052%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57442 (14 samples, 0.02%)</title><rect x="76.5950%" y="149" width="0.0174%" height="15" fill="rgb(238,205,33)" fg:x="61479" fg:w="14"/><text x="76.8450%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57445 (29 samples, 0.04%)</title><rect x="76.6125%" y="149" width="0.0361%" height="15" fill="rgb(231,56,7)" fg:x="61493" fg:w="29"/><text x="76.8625%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57452 (29 samples, 0.04%)</title><rect x="76.6486%" y="149" width="0.0361%" height="15" fill="rgb(244,186,29)" fg:x="61522" fg:w="29"/><text x="76.8986%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57467 (31 samples, 0.04%)</title><rect x="76.6847%" y="149" width="0.0386%" height="15" fill="rgb(234,111,31)" fg:x="61551" fg:w="31"/><text x="76.9347%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57484 (33 samples, 0.04%)</title><rect x="76.7234%" y="149" width="0.0411%" height="15" fill="rgb(241,149,10)" fg:x="61582" fg:w="33"/><text x="76.9734%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57493 (27 samples, 0.03%)</title><rect x="76.7645%" y="149" width="0.0336%" height="15" fill="rgb(249,206,44)" fg:x="61615" fg:w="27"/><text x="77.0145%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574a4 (31 samples, 0.04%)</title><rect x="76.7981%" y="149" width="0.0386%" height="15" fill="rgb(251,153,30)" fg:x="61642" fg:w="31"/><text x="77.0481%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574c1 (11 samples, 0.01%)</title><rect x="76.8380%" y="149" width="0.0137%" height="15" fill="rgb(239,152,38)" fg:x="61674" fg:w="11"/><text x="77.0880%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574ce (157 samples, 0.20%)</title><rect x="76.8579%" y="149" width="0.1956%" height="15" fill="rgb(249,139,47)" fg:x="61690" fg:w="157"/><text x="77.1079%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574d9 (11 samples, 0.01%)</title><rect x="77.0572%" y="149" width="0.0137%" height="15" fill="rgb(244,64,35)" fg:x="61850" fg:w="11"/><text x="77.3072%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574e3 (9 samples, 0.01%)</title><rect x="77.0734%" y="149" width="0.0112%" height="15" fill="rgb(216,46,15)" fg:x="61863" fg:w="9"/><text x="77.3234%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574e7 (17 samples, 0.02%)</title><rect x="77.0847%" y="149" width="0.0212%" height="15" fill="rgb(250,74,19)" fg:x="61872" fg:w="17"/><text x="77.3347%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574ef (140 samples, 0.17%)</title><rect x="77.1058%" y="149" width="0.1744%" height="15" fill="rgb(249,42,33)" fg:x="61889" fg:w="140"/><text x="77.3558%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574fc (24 samples, 0.03%)</title><rect x="77.2803%" y="149" width="0.0299%" height="15" fill="rgb(242,149,17)" fg:x="62029" fg:w="24"/><text x="77.5303%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f574fe (23 samples, 0.03%)</title><rect x="77.3102%" y="149" width="0.0287%" height="15" fill="rgb(244,29,21)" fg:x="62053" fg:w="23"/><text x="77.5602%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57504 (15 samples, 0.02%)</title><rect x="77.3388%" y="149" width="0.0187%" height="15" fill="rgb(220,130,37)" fg:x="62076" fg:w="15"/><text x="77.5888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57509 (310 samples, 0.39%)</title><rect x="77.3575%" y="149" width="0.3862%" height="15" fill="rgb(211,67,2)" fg:x="62091" fg:w="310"/><text x="77.6075%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575a4 (21 samples, 0.03%)</title><rect x="77.7774%" y="149" width="0.0262%" height="15" fill="rgb(235,68,52)" fg:x="62428" fg:w="21"/><text x="78.0274%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575ae (12 samples, 0.01%)</title><rect x="77.8073%" y="149" width="0.0150%" height="15" fill="rgb(246,142,3)" fg:x="62452" fg:w="12"/><text x="78.0573%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575b5 (67 samples, 0.08%)</title><rect x="77.8247%" y="149" width="0.0835%" height="15" fill="rgb(241,25,7)" fg:x="62466" fg:w="67"/><text x="78.0747%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575b9 (17 samples, 0.02%)</title><rect x="77.9094%" y="149" width="0.0212%" height="15" fill="rgb(242,119,39)" fg:x="62534" fg:w="17"/><text x="78.1594%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575c6 (19 samples, 0.02%)</title><rect x="77.9319%" y="149" width="0.0237%" height="15" fill="rgb(241,98,45)" fg:x="62552" fg:w="19"/><text x="78.1819%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575d8 (29 samples, 0.04%)</title><rect x="77.9667%" y="149" width="0.0361%" height="15" fill="rgb(254,28,30)" fg:x="62580" fg:w="29"/><text x="78.2167%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716fe (78 samples, 0.10%)</title><rect x="78.0377%" y="149" width="0.0972%" height="15" fill="rgb(241,142,54)" fg:x="62637" fg:w="78"/><text x="78.2877%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71704 (9 samples, 0.01%)</title><rect x="78.1499%" y="149" width="0.0112%" height="15" fill="rgb(222,85,15)" fg:x="62727" fg:w="9"/><text x="78.3999%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71705 (55 samples, 0.07%)</title><rect x="78.1611%" y="149" width="0.0685%" height="15" fill="rgb(210,85,47)" fg:x="62736" fg:w="55"/><text x="78.4111%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7170f (48 samples, 0.06%)</title><rect x="78.2358%" y="149" width="0.0598%" height="15" fill="rgb(224,206,25)" fg:x="62796" fg:w="48"/><text x="78.4858%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7172f (63 samples, 0.08%)</title><rect x="78.3056%" y="149" width="0.0785%" height="15" fill="rgb(243,201,19)" fg:x="62852" fg:w="63"/><text x="78.5556%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7174f (46 samples, 0.06%)</title><rect x="78.3941%" y="149" width="0.0573%" height="15" fill="rgb(236,59,4)" fg:x="62923" fg:w="46"/><text x="78.6441%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717e0 (67 samples, 0.08%)</title><rect x="78.4626%" y="149" width="0.0835%" height="15" fill="rgb(254,179,45)" fg:x="62978" fg:w="67"/><text x="78.7126%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717ef (13 samples, 0.02%)</title><rect x="78.5523%" y="149" width="0.0162%" height="15" fill="rgb(226,14,10)" fg:x="63050" fg:w="13"/><text x="78.8023%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717f2 (52 samples, 0.06%)</title><rect x="78.5685%" y="149" width="0.0648%" height="15" fill="rgb(244,27,41)" fg:x="63063" fg:w="52"/><text x="78.8185%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717f5 (9 samples, 0.01%)</title><rect x="78.6333%" y="149" width="0.0112%" height="15" fill="rgb(235,35,32)" fg:x="63115" fg:w="9"/><text x="78.8833%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717ff (45 samples, 0.06%)</title><rect x="78.6445%" y="149" width="0.0561%" height="15" fill="rgb(218,68,31)" fg:x="63124" fg:w="45"/><text x="78.8945%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71802 (59 samples, 0.07%)</title><rect x="78.7006%" y="149" width="0.0735%" height="15" fill="rgb(207,120,37)" fg:x="63169" fg:w="59"/><text x="78.9506%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71816 (53 samples, 0.07%)</title><rect x="78.7840%" y="149" width="0.0660%" height="15" fill="rgb(227,98,0)" fg:x="63236" fg:w="53"/><text x="79.0340%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71820 (17 samples, 0.02%)</title><rect x="78.8501%" y="149" width="0.0212%" height="15" fill="rgb(207,7,3)" fg:x="63289" fg:w="17"/><text x="79.1001%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71826 (56 samples, 0.07%)</title><rect x="78.8712%" y="149" width="0.0698%" height="15" fill="rgb(206,98,19)" fg:x="63306" fg:w="56"/><text x="79.1212%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7182d (22 samples, 0.03%)</title><rect x="78.9410%" y="149" width="0.0274%" height="15" fill="rgb(217,5,26)" fg:x="63362" fg:w="22"/><text x="79.1910%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71835 (64 samples, 0.08%)</title><rect x="78.9784%" y="149" width="0.0797%" height="15" fill="rgb(235,190,38)" fg:x="63392" fg:w="64"/><text x="79.2284%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7183d (18 samples, 0.02%)</title><rect x="79.0581%" y="149" width="0.0224%" height="15" fill="rgb(247,86,24)" fg:x="63456" fg:w="18"/><text x="79.3081%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71851 (36 samples, 0.04%)</title><rect x="79.0868%" y="149" width="0.0449%" height="15" fill="rgb(205,101,16)" fg:x="63479" fg:w="36"/><text x="79.3368%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71866 (14 samples, 0.02%)</title><rect x="79.1379%" y="149" width="0.0174%" height="15" fill="rgb(246,168,33)" fg:x="63520" fg:w="14"/><text x="79.3879%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7186d (66 samples, 0.08%)</title><rect x="79.1553%" y="149" width="0.0822%" height="15" fill="rgb(231,114,1)" fg:x="63534" fg:w="66"/><text x="79.4053%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71870 (10 samples, 0.01%)</title><rect x="79.2375%" y="149" width="0.0125%" height="15" fill="rgb(207,184,53)" fg:x="63600" fg:w="10"/><text x="79.4875%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71876 (11 samples, 0.01%)</title><rect x="79.2550%" y="149" width="0.0137%" height="15" fill="rgb(224,95,51)" fg:x="63614" fg:w="11"/><text x="79.5050%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71879 (40 samples, 0.05%)</title><rect x="79.2687%" y="149" width="0.0498%" height="15" fill="rgb(212,188,45)" fg:x="63625" fg:w="40"/><text x="79.5187%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71887 (55 samples, 0.07%)</title><rect x="79.3260%" y="149" width="0.0685%" height="15" fill="rgb(223,154,38)" fg:x="63671" fg:w="55"/><text x="79.5760%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71891 (1,569 samples, 1.95%)</title><rect x="79.3970%" y="149" width="1.9548%" height="15" fill="rgb(251,22,52)" fg:x="63728" fg:w="1569"/><text x="79.6470%" y="159.50">l..</text></g><g><title>libsystem_malloc.dylib`0x7ff806f718d0 (67 samples, 0.08%)</title><rect x="81.3630%" y="149" width="0.0835%" height="15" fill="rgb(229,209,22)" fg:x="65306" fg:w="67"/><text x="81.6130%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718e5 (51 samples, 0.06%)</title><rect x="81.4552%" y="149" width="0.0635%" height="15" fill="rgb(234,138,34)" fg:x="65380" fg:w="51"/><text x="81.7052%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718f1 (68 samples, 0.08%)</title><rect x="81.5200%" y="149" width="0.0847%" height="15" fill="rgb(212,95,11)" fg:x="65432" fg:w="68"/><text x="81.7700%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718f5 (9 samples, 0.01%)</title><rect x="81.6047%" y="149" width="0.0112%" height="15" fill="rgb(240,179,47)" fg:x="65500" fg:w="9"/><text x="81.8547%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71901 (445 samples, 0.55%)</title><rect x="81.6184%" y="149" width="0.5544%" height="15" fill="rgb(240,163,11)" fg:x="65511" fg:w="445"/><text x="81.8684%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (444 samples, 0.55%)</title><rect x="81.6196%" y="133" width="0.5532%" height="15" fill="rgb(236,37,12)" fg:x="65512" fg:w="444"/><text x="81.8696%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71904 (11 samples, 0.01%)</title><rect x="82.1728%" y="149" width="0.0137%" height="15" fill="rgb(232,164,16)" fg:x="65956" fg:w="11"/><text x="82.4228%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71908 (28 samples, 0.03%)</title><rect x="82.1865%" y="149" width="0.0349%" height="15" fill="rgb(244,205,15)" fg:x="65967" fg:w="28"/><text x="82.4365%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7190f (53 samples, 0.07%)</title><rect x="82.2214%" y="149" width="0.0660%" height="15" fill="rgb(223,117,47)" fg:x="65995" fg:w="53"/><text x="82.4714%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7191d (36 samples, 0.04%)</title><rect x="82.2986%" y="149" width="0.0449%" height="15" fill="rgb(244,107,35)" fg:x="66057" fg:w="36"/><text x="82.5486%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71920 (39 samples, 0.05%)</title><rect x="82.3435%" y="149" width="0.0486%" height="15" fill="rgb(205,140,8)" fg:x="66093" fg:w="39"/><text x="82.5935%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71924 (17 samples, 0.02%)</title><rect x="82.3921%" y="149" width="0.0212%" height="15" fill="rgb(228,84,46)" fg:x="66132" fg:w="17"/><text x="82.6421%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71928 (10 samples, 0.01%)</title><rect x="82.4133%" y="149" width="0.0125%" height="15" fill="rgb(254,188,9)" fg:x="66149" fg:w="10"/><text x="82.6633%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7192b (11 samples, 0.01%)</title><rect x="82.4257%" y="149" width="0.0137%" height="15" fill="rgb(206,112,54)" fg:x="66159" fg:w="11"/><text x="82.6757%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71932 (31 samples, 0.04%)</title><rect x="82.4394%" y="149" width="0.0386%" height="15" fill="rgb(216,84,49)" fg:x="66170" fg:w="31"/><text x="82.6894%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71934 (11 samples, 0.01%)</title><rect x="82.4780%" y="149" width="0.0137%" height="15" fill="rgb(214,194,35)" fg:x="66201" fg:w="11"/><text x="82.7280%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7193f (20 samples, 0.02%)</title><rect x="82.5005%" y="149" width="0.0249%" height="15" fill="rgb(249,28,3)" fg:x="66219" fg:w="20"/><text x="82.7505%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71945 (32 samples, 0.04%)</title><rect x="82.5254%" y="149" width="0.0399%" height="15" fill="rgb(222,56,52)" fg:x="66239" fg:w="32"/><text x="82.7754%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71947 (12 samples, 0.01%)</title><rect x="82.5653%" y="149" width="0.0150%" height="15" fill="rgb(245,217,50)" fg:x="66271" fg:w="12"/><text x="82.8153%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71953 (9 samples, 0.01%)</title><rect x="82.5889%" y="149" width="0.0112%" height="15" fill="rgb(213,201,24)" fg:x="66290" fg:w="9"/><text x="82.8389%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71959 (31 samples, 0.04%)</title><rect x="82.6001%" y="149" width="0.0386%" height="15" fill="rgb(248,116,28)" fg:x="66299" fg:w="31"/><text x="82.8501%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7195d (9 samples, 0.01%)</title><rect x="82.6475%" y="149" width="0.0112%" height="15" fill="rgb(219,72,43)" fg:x="66337" fg:w="9"/><text x="82.8975%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71962 (20 samples, 0.02%)</title><rect x="82.6587%" y="149" width="0.0249%" height="15" fill="rgb(209,138,14)" fg:x="66346" fg:w="20"/><text x="82.9087%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71969 (37 samples, 0.05%)</title><rect x="82.6836%" y="149" width="0.0461%" height="15" fill="rgb(222,18,33)" fg:x="66366" fg:w="37"/><text x="82.9336%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7196c (10 samples, 0.01%)</title><rect x="82.7297%" y="149" width="0.0125%" height="15" fill="rgb(213,199,7)" fg:x="66403" fg:w="10"/><text x="82.9797%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71992 (133 samples, 0.17%)</title><rect x="82.7683%" y="149" width="0.1657%" height="15" fill="rgb(250,110,10)" fg:x="66434" fg:w="133"/><text x="83.0183%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71996 (18 samples, 0.02%)</title><rect x="82.9353%" y="149" width="0.0224%" height="15" fill="rgb(248,123,6)" fg:x="66568" fg:w="18"/><text x="83.1853%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71999 (28 samples, 0.03%)</title><rect x="82.9577%" y="149" width="0.0349%" height="15" fill="rgb(206,91,31)" fg:x="66586" fg:w="28"/><text x="83.2077%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7199e (850 samples, 1.06%)</title><rect x="82.9976%" y="149" width="1.0590%" height="15" fill="rgb(211,154,13)" fg:x="66618" fg:w="850"/><text x="83.2476%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719a2 (24 samples, 0.03%)</title><rect x="84.0566%" y="149" width="0.0299%" height="15" fill="rgb(225,148,7)" fg:x="67468" fg:w="24"/><text x="84.3066%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719a8 (71 samples, 0.09%)</title><rect x="84.0865%" y="149" width="0.0885%" height="15" fill="rgb(220,160,43)" fg:x="67492" fg:w="71"/><text x="84.3365%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719aa (52 samples, 0.06%)</title><rect x="84.1749%" y="149" width="0.0648%" height="15" fill="rgb(213,52,39)" fg:x="67563" fg:w="52"/><text x="84.4249%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719b7 (1,038 samples, 1.29%)</title><rect x="84.2410%" y="149" width="1.2932%" height="15" fill="rgb(243,137,7)" fg:x="67616" fg:w="1038"/><text x="84.4910%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719f4 (10 samples, 0.01%)</title><rect x="85.5441%" y="149" width="0.0125%" height="15" fill="rgb(230,79,13)" fg:x="68662" fg:w="10"/><text x="85.7941%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a39 (58 samples, 0.07%)</title><rect x="85.5616%" y="149" width="0.0723%" height="15" fill="rgb(247,105,23)" fg:x="68676" fg:w="58"/><text x="85.8116%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a40 (64 samples, 0.08%)</title><rect x="85.6376%" y="149" width="0.0797%" height="15" fill="rgb(223,179,41)" fg:x="68737" fg:w="64"/><text x="85.8876%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73cdd (69 samples, 0.09%)</title><rect x="85.7186%" y="149" width="0.0860%" height="15" fill="rgb(218,9,34)" fg:x="68802" fg:w="69"/><text x="85.9686%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73cf1 (69 samples, 0.09%)</title><rect x="85.8157%" y="149" width="0.0860%" height="15" fill="rgb(222,106,8)" fg:x="68880" fg:w="69"/><text x="86.0657%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73cfd (27 samples, 0.03%)</title><rect x="85.9079%" y="149" width="0.0336%" height="15" fill="rgb(211,220,0)" fg:x="68954" fg:w="27"/><text x="86.1579%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d04 (69 samples, 0.09%)</title><rect x="85.9416%" y="149" width="0.0860%" height="15" fill="rgb(229,52,16)" fg:x="68981" fg:w="69"/><text x="86.1916%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d0d (77 samples, 0.10%)</title><rect x="86.0313%" y="149" width="0.0959%" height="15" fill="rgb(212,155,18)" fg:x="69053" fg:w="77"/><text x="86.2813%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d19 (69 samples, 0.09%)</title><rect x="86.1309%" y="149" width="0.0860%" height="15" fill="rgb(242,21,14)" fg:x="69133" fg:w="69"/><text x="86.3809%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d1d (20 samples, 0.02%)</title><rect x="86.2169%" y="149" width="0.0249%" height="15" fill="rgb(222,19,48)" fg:x="69202" fg:w="20"/><text x="86.4669%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d1f (9 samples, 0.01%)</title><rect x="86.2418%" y="149" width="0.0112%" height="15" fill="rgb(232,45,27)" fg:x="69222" fg:w="9"/><text x="86.4918%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d28 (65 samples, 0.08%)</title><rect x="86.2555%" y="149" width="0.0810%" height="15" fill="rgb(249,103,42)" fg:x="69233" fg:w="65"/><text x="86.5055%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d2c (9 samples, 0.01%)</title><rect x="86.3365%" y="149" width="0.0112%" height="15" fill="rgb(246,81,33)" fg:x="69298" fg:w="9"/><text x="86.5865%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7a472 (67 samples, 0.08%)</title><rect x="86.3477%" y="149" width="0.0835%" height="15" fill="rgb(252,33,42)" fg:x="69307" fg:w="67"/><text x="86.5977%" y="159.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (72 samples, 0.09%)</title><rect x="86.4312%" y="149" width="0.0897%" height="15" fill="rgb(209,212,41)" fg:x="69374" fg:w="72"/><text x="86.6812%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (126 samples, 0.16%)</title><rect x="86.5209%" y="149" width="0.1570%" height="15" fill="rgb(207,154,6)" fg:x="69446" fg:w="126"/><text x="86.7709%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (46,298 samples, 57.68%)</title><rect x="29.5558%" y="165" width="57.6814%" height="15" fill="rgb(223,64,47)" fg:x="23723" fg:w="46298"/><text x="29.8058%" y="175.50">dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (449 samples, 0.56%)</title><rect x="86.6779%" y="149" width="0.5594%" height="15" fill="rgb(211,161,38)" fg:x="69572" fg:w="449"/><text x="86.9279%" y="159.50"></text></g><g><title>libsystem_m.dylib`0x00007ff812c6e470 (991 samples, 1.23%)</title><rect x="87.2373%" y="165" width="1.2347%" height="15" fill="rgb(219,138,40)" fg:x="70021" fg:w="991"/><text x="87.4873%" y="175.50"></text></g><g><title>libsystem_m.dylib`0x00007ff812c70aa0 (4,599 samples, 5.73%)</title><rect x="88.4719%" y="165" width="5.7298%" height="15" fill="rgb(241,228,46)" fg:x="71012" fg:w="4599"/><text x="88.7219%" y="175.50">libsyst..</text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (72 samples, 0.09%)</title><rect x="94.2017%" y="165" width="0.0897%" height="15" fill="rgb(223,209,38)" fg:x="75611" fg:w="72"/><text x="94.4517%" y="175.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (75 samples, 0.09%)</title><rect x="94.2914%" y="165" width="0.0934%" height="15" fill="rgb(236,164,45)" fg:x="75683" fg:w="75"/><text x="94.5414%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57350 (38 samples, 0.05%)</title><rect x="94.3849%" y="165" width="0.0473%" height="15" fill="rgb(231,15,5)" fg:x="75758" fg:w="38"/><text x="94.6349%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f575b5 (25 samples, 0.03%)</title><rect x="94.4372%" y="165" width="0.0311%" height="15" fill="rgb(252,35,15)" fg:x="75800" fg:w="25"/><text x="94.6872%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e2b (74 samples, 0.09%)</title><rect x="94.4683%" y="165" width="0.0922%" height="15" fill="rgb(248,181,18)" fg:x="75825" fg:w="74"/><text x="94.7183%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e3a (83 samples, 0.10%)</title><rect x="94.5667%" y="165" width="0.1034%" height="15" fill="rgb(233,39,42)" fg:x="75904" fg:w="83"/><text x="94.8167%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e45 (67 samples, 0.08%)</title><rect x="94.6764%" y="165" width="0.0835%" height="15" fill="rgb(238,110,33)" fg:x="75992" fg:w="67"/><text x="94.9264%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e4d (15 samples, 0.02%)</title><rect x="94.7599%" y="165" width="0.0187%" height="15" fill="rgb(233,195,10)" fg:x="76059" fg:w="15"/><text x="95.0099%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e57 (68 samples, 0.08%)</title><rect x="94.7823%" y="165" width="0.0847%" height="15" fill="rgb(254,105,3)" fg:x="76077" fg:w="68"/><text x="95.0323%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e60 (73 samples, 0.09%)</title><rect x="94.8707%" y="165" width="0.0909%" height="15" fill="rgb(221,225,9)" fg:x="76148" fg:w="73"/><text x="95.1207%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e6c (29 samples, 0.04%)</title><rect x="94.9791%" y="165" width="0.0361%" height="15" fill="rgb(224,227,45)" fg:x="76235" fg:w="29"/><text x="95.2291%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e70 (118 samples, 0.15%)</title><rect x="95.0153%" y="165" width="0.1470%" height="15" fill="rgb(229,198,43)" fg:x="76264" fg:w="118"/><text x="95.2653%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e72 (11 samples, 0.01%)</title><rect x="95.1623%" y="165" width="0.0137%" height="15" fill="rgb(206,209,35)" fg:x="76382" fg:w="11"/><text x="95.4123%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e79 (27 samples, 0.03%)</title><rect x="95.1760%" y="165" width="0.0336%" height="15" fill="rgb(245,195,53)" fg:x="76393" fg:w="27"/><text x="95.4260%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (12 samples, 0.01%)</title><rect x="95.2171%" y="149" width="0.0150%" height="15" fill="rgb(240,92,26)" fg:x="76426" fg:w="12"/><text x="95.4671%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5be86 (13 samples, 0.02%)</title><rect x="95.2171%" y="165" width="0.0162%" height="15" fill="rgb(207,40,23)" fg:x="76426" fg:w="13"/><text x="95.4671%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f5c006 (27 samples, 0.03%)</title><rect x="95.2470%" y="165" width="0.0336%" height="15" fill="rgb(223,111,35)" fg:x="76450" fg:w="27"/><text x="95.4970%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716f8 (72 samples, 0.09%)</title><rect x="95.3006%" y="165" width="0.0897%" height="15" fill="rgb(229,147,28)" fg:x="76493" fg:w="72"/><text x="95.5506%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716fe (27 samples, 0.03%)</title><rect x="95.3977%" y="165" width="0.0336%" height="15" fill="rgb(211,29,28)" fg:x="76571" fg:w="27"/><text x="95.6477%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71705 (26 samples, 0.03%)</title><rect x="95.4339%" y="165" width="0.0324%" height="15" fill="rgb(228,72,33)" fg:x="76600" fg:w="26"/><text x="95.6839%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7170f (26 samples, 0.03%)</title><rect x="95.4700%" y="165" width="0.0324%" height="15" fill="rgb(205,214,31)" fg:x="76629" fg:w="26"/><text x="95.7200%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7172f (23 samples, 0.03%)</title><rect x="95.5036%" y="165" width="0.0287%" height="15" fill="rgb(224,111,15)" fg:x="76656" fg:w="23"/><text x="95.7536%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7174f (20 samples, 0.02%)</title><rect x="95.5398%" y="165" width="0.0249%" height="15" fill="rgb(253,21,26)" fg:x="76685" fg:w="20"/><text x="95.7898%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717e0 (20 samples, 0.02%)</title><rect x="95.5709%" y="165" width="0.0249%" height="15" fill="rgb(245,139,43)" fg:x="76710" fg:w="20"/><text x="95.8209%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717f2 (22 samples, 0.03%)</title><rect x="95.6058%" y="165" width="0.0274%" height="15" fill="rgb(252,170,7)" fg:x="76738" fg:w="22"/><text x="95.8558%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f717ff (21 samples, 0.03%)</title><rect x="95.6370%" y="165" width="0.0262%" height="15" fill="rgb(231,118,14)" fg:x="76763" fg:w="21"/><text x="95.8870%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71802 (17 samples, 0.02%)</title><rect x="95.6631%" y="165" width="0.0212%" height="15" fill="rgb(238,83,0)" fg:x="76784" fg:w="17"/><text x="95.9131%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71816 (25 samples, 0.03%)</title><rect x="95.6905%" y="165" width="0.0311%" height="15" fill="rgb(221,39,39)" fg:x="76806" fg:w="25"/><text x="95.9405%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71826 (17 samples, 0.02%)</title><rect x="95.7291%" y="165" width="0.0212%" height="15" fill="rgb(222,119,46)" fg:x="76837" fg:w="17"/><text x="95.9791%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7182d (25 samples, 0.03%)</title><rect x="95.7503%" y="165" width="0.0311%" height="15" fill="rgb(222,165,49)" fg:x="76854" fg:w="25"/><text x="96.0003%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71835 (23 samples, 0.03%)</title><rect x="95.7889%" y="165" width="0.0287%" height="15" fill="rgb(219,113,52)" fg:x="76885" fg:w="23"/><text x="96.0389%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7183d (14 samples, 0.02%)</title><rect x="95.8176%" y="165" width="0.0174%" height="15" fill="rgb(214,7,15)" fg:x="76908" fg:w="14"/><text x="96.0676%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71851 (19 samples, 0.02%)</title><rect x="95.8400%" y="165" width="0.0237%" height="15" fill="rgb(235,32,4)" fg:x="76926" fg:w="19"/><text x="96.0900%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7186d (18 samples, 0.02%)</title><rect x="95.8787%" y="165" width="0.0224%" height="15" fill="rgb(238,90,54)" fg:x="76957" fg:w="18"/><text x="96.1287%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71879 (22 samples, 0.03%)</title><rect x="95.9173%" y="165" width="0.0274%" height="15" fill="rgb(213,208,19)" fg:x="76988" fg:w="22"/><text x="96.1673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71887 (18 samples, 0.02%)</title><rect x="95.9596%" y="165" width="0.0224%" height="15" fill="rgb(233,156,4)" fg:x="77022" fg:w="18"/><text x="96.2096%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71891 (725 samples, 0.90%)</title><rect x="95.9846%" y="165" width="0.9033%" height="15" fill="rgb(207,194,5)" fg:x="77042" fg:w="725"/><text x="96.2346%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718d0 (19 samples, 0.02%)</title><rect x="96.9028%" y="165" width="0.0237%" height="15" fill="rgb(206,111,30)" fg:x="77779" fg:w="19"/><text x="97.1528%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718e5 (26 samples, 0.03%)</title><rect x="96.9289%" y="165" width="0.0324%" height="15" fill="rgb(243,70,54)" fg:x="77800" fg:w="26"/><text x="97.1789%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f718f1 (19 samples, 0.02%)</title><rect x="96.9638%" y="165" width="0.0237%" height="15" fill="rgb(242,28,8)" fg:x="77828" fg:w="19"/><text x="97.2138%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71901 (218 samples, 0.27%)</title><rect x="96.9900%" y="165" width="0.2716%" height="15" fill="rgb(219,106,18)" fg:x="77849" fg:w="218"/><text x="97.2400%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (208 samples, 0.26%)</title><rect x="97.0024%" y="149" width="0.2591%" height="15" fill="rgb(244,222,10)" fg:x="77859" fg:w="208"/><text x="97.2524%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7190f (13 samples, 0.02%)</title><rect x="97.2715%" y="165" width="0.0162%" height="15" fill="rgb(236,179,52)" fg:x="78075" fg:w="13"/><text x="97.5215%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7191d (10 samples, 0.01%)</title><rect x="97.2965%" y="165" width="0.0125%" height="15" fill="rgb(213,23,39)" fg:x="78095" fg:w="10"/><text x="97.5465%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71920 (12 samples, 0.01%)</title><rect x="97.3089%" y="165" width="0.0150%" height="15" fill="rgb(238,48,10)" fg:x="78105" fg:w="12"/><text x="97.5589%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71924 (16 samples, 0.02%)</title><rect x="97.3239%" y="165" width="0.0199%" height="15" fill="rgb(251,196,23)" fg:x="78117" fg:w="16"/><text x="97.5739%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71928 (9 samples, 0.01%)</title><rect x="97.3438%" y="165" width="0.0112%" height="15" fill="rgb(250,152,24)" fg:x="78133" fg:w="9"/><text x="97.5938%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71932 (17 samples, 0.02%)</title><rect x="97.3612%" y="165" width="0.0212%" height="15" fill="rgb(209,150,17)" fg:x="78147" fg:w="17"/><text x="97.6112%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71934 (12 samples, 0.01%)</title><rect x="97.3824%" y="165" width="0.0150%" height="15" fill="rgb(234,202,34)" fg:x="78164" fg:w="12"/><text x="97.6324%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71945 (11 samples, 0.01%)</title><rect x="97.4098%" y="165" width="0.0137%" height="15" fill="rgb(253,148,53)" fg:x="78186" fg:w="11"/><text x="97.6598%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71947 (14 samples, 0.02%)</title><rect x="97.4235%" y="165" width="0.0174%" height="15" fill="rgb(218,129,16)" fg:x="78197" fg:w="14"/><text x="97.6735%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71959 (9 samples, 0.01%)</title><rect x="97.4485%" y="165" width="0.0112%" height="15" fill="rgb(216,85,19)" fg:x="78217" fg:w="9"/><text x="97.6985%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71969 (16 samples, 0.02%)</title><rect x="97.4821%" y="165" width="0.0199%" height="15" fill="rgb(235,228,7)" fg:x="78244" fg:w="16"/><text x="97.7321%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7197b (11 samples, 0.01%)</title><rect x="97.5207%" y="165" width="0.0137%" height="15" fill="rgb(245,175,0)" fg:x="78275" fg:w="11"/><text x="97.7707%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71992 (242 samples, 0.30%)</title><rect x="97.5730%" y="165" width="0.3015%" height="15" fill="rgb(208,168,36)" fg:x="78317" fg:w="242"/><text x="97.8230%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7199e (191 samples, 0.24%)</title><rect x="97.8895%" y="165" width="0.2380%" height="15" fill="rgb(246,171,24)" fg:x="78571" fg:w="191"/><text x="98.1395%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719a8 (17 samples, 0.02%)</title><rect x="98.1312%" y="165" width="0.0212%" height="15" fill="rgb(215,142,24)" fg:x="78765" fg:w="17"/><text x="98.3812%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719aa (15 samples, 0.02%)</title><rect x="98.1524%" y="165" width="0.0187%" height="15" fill="rgb(250,187,7)" fg:x="78782" fg:w="15"/><text x="98.4024%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719b7 (280 samples, 0.35%)</title><rect x="98.1736%" y="165" width="0.3488%" height="15" fill="rgb(228,66,33)" fg:x="78799" fg:w="280"/><text x="98.4236%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f719c0 (13 samples, 0.02%)</title><rect x="98.5224%" y="165" width="0.0162%" height="15" fill="rgb(234,215,21)" fg:x="79079" fg:w="13"/><text x="98.7724%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a39 (31 samples, 0.04%)</title><rect x="98.5486%" y="165" width="0.0386%" height="15" fill="rgb(222,191,20)" fg:x="79100" fg:w="31"/><text x="98.7986%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a40 (26 samples, 0.03%)</title><rect x="98.5884%" y="165" width="0.0324%" height="15" fill="rgb(245,79,54)" fg:x="79132" fg:w="26"/><text x="98.8384%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a47 (58 samples, 0.07%)</title><rect x="98.6221%" y="165" width="0.0723%" height="15" fill="rgb(240,10,37)" fg:x="79159" fg:w="58"/><text x="98.8721%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a48 (65 samples, 0.08%)</title><rect x="98.6943%" y="165" width="0.0810%" height="15" fill="rgb(214,192,32)" fg:x="79217" fg:w="65"/><text x="98.9443%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a4d (10 samples, 0.01%)</title><rect x="98.7753%" y="165" width="0.0125%" height="15" fill="rgb(209,36,54)" fg:x="79282" fg:w="10"/><text x="99.0253%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73cdd (33 samples, 0.04%)</title><rect x="98.7878%" y="165" width="0.0411%" height="15" fill="rgb(220,10,11)" fg:x="79292" fg:w="33"/><text x="99.0378%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73cf1 (38 samples, 0.05%)</title><rect x="98.8314%" y="165" width="0.0473%" height="15" fill="rgb(221,106,17)" fg:x="79327" fg:w="38"/><text x="99.0814%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d04 (28 samples, 0.03%)</title><rect x="98.8962%" y="165" width="0.0349%" height="15" fill="rgb(251,142,44)" fg:x="79379" fg:w="28"/><text x="99.1462%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d0d (27 samples, 0.03%)</title><rect x="98.9323%" y="165" width="0.0336%" height="15" fill="rgb(238,13,15)" fg:x="79408" fg:w="27"/><text x="99.1823%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d19 (19 samples, 0.02%)</title><rect x="98.9697%" y="165" width="0.0237%" height="15" fill="rgb(208,107,27)" fg:x="79438" fg:w="19"/><text x="99.2197%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f73d28 (26 samples, 0.03%)</title><rect x="99.0021%" y="165" width="0.0324%" height="15" fill="rgb(205,136,37)" fg:x="79464" fg:w="26"/><text x="99.2521%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f7a472 (29 samples, 0.04%)</title><rect x="99.0432%" y="165" width="0.0361%" height="15" fill="rgb(250,205,27)" fg:x="79497" fg:w="29"/><text x="99.2932%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (30 samples, 0.04%)</title><rect x="99.0793%" y="165" width="0.0374%" height="15" fill="rgb(210,80,43)" fg:x="79526" fg:w="30"/><text x="99.3293%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (90 samples, 0.11%)</title><rect x="99.1167%" y="165" width="0.1121%" height="15" fill="rgb(247,160,36)" fg:x="79556" fg:w="90"/><text x="99.3667%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (38 samples, 0.05%)</title><rect x="99.2288%" y="165" width="0.0473%" height="15" fill="rgb(234,13,49)" fg:x="79646" fg:w="38"/><text x="99.4788%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (145 samples, 0.18%)</title><rect x="99.2761%" y="165" width="0.1807%" height="15" fill="rgb(234,122,0)" fg:x="79684" fg:w="145"/><text x="99.5261%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (76,715 samples, 95.58%)</title><rect x="3.8809%" y="181" width="95.5772%" height="15" fill="rgb(207,146,38)" fg:x="3115" fg:w="76715"/><text x="4.1309%" y="191.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (24 samples, 0.03%)</title><rect x="99.4580%" y="181" width="0.0299%" height="15" fill="rgb(207,177,25)" fg:x="79830" fg:w="24"/><text x="99.7080%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e2b (62 samples, 0.08%)</title><rect x="99.4879%" y="181" width="0.0772%" height="15" fill="rgb(211,178,42)" fg:x="79854" fg:w="62"/><text x="99.7379%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e3a (50 samples, 0.06%)</title><rect x="99.5677%" y="181" width="0.0623%" height="15" fill="rgb(230,69,54)" fg:x="79918" fg:w="50"/><text x="99.8177%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e43 (9 samples, 0.01%)</title><rect x="99.6337%" y="181" width="0.0112%" height="15" fill="rgb(214,135,41)" fg:x="79971" fg:w="9"/><text x="99.8837%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e45 (23 samples, 0.03%)</title><rect x="99.6449%" y="181" width="0.0287%" height="15" fill="rgb(237,67,25)" fg:x="79980" fg:w="23"/><text x="99.8949%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e57 (25 samples, 0.03%)</title><rect x="99.6811%" y="181" width="0.0311%" height="15" fill="rgb(222,189,50)" fg:x="80009" fg:w="25"/><text x="99.9311%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e60 (28 samples, 0.03%)</title><rect x="99.7159%" y="181" width="0.0349%" height="15" fill="rgb(245,148,34)" fg:x="80037" fg:w="28"/><text x="99.9659%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e6c (26 samples, 0.03%)</title><rect x="99.7670%" y="181" width="0.0324%" height="15" fill="rgb(222,29,6)" fg:x="80078" fg:w="26"/><text x="100.0170%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f57e70 (75 samples, 0.09%)</title><rect x="99.7994%" y="181" width="0.0934%" height="15" fill="rgb(221,189,43)" fg:x="80104" fg:w="75"/><text x="100.0494%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f716f8 (23 samples, 0.03%)</title><rect x="99.9140%" y="181" width="0.0287%" height="15" fill="rgb(207,36,27)" fg:x="80196" fg:w="23"/><text x="100.1640%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a47 (22 samples, 0.03%)</title><rect x="99.9439%" y="181" width="0.0274%" height="15" fill="rgb(217,90,24)" fg:x="80220" fg:w="22"/><text x="100.1939%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff806f71a48 (19 samples, 0.02%)</title><rect x="99.9713%" y="181" width="0.0237%" height="15" fill="rgb(224,66,35)" fg:x="80242" fg:w="19"/><text x="100.2213%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (80,263 samples, 100.00%)</title><rect x="0.0012%" y="213" width="99.9975%" height="15" fill="rgb(221,13,50)" fg:x="1" fg:w="80263"/><text x="0.2512%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (80,263 samples, 100.00%)</title><rect x="0.0012%" y="197" width="99.9975%" height="15" fill="rgb(236,68,49)" fg:x="1" fg:w="80263"/><text x="0.2512%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>all (80,265 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(229,146,28)" fg:x="0" fg:w="80265"/><text x="0.2500%" y="335.50"></text></g><g><title>dyld`start (80,264 samples, 100.00%)</title><rect x="0.0012%" y="309" width="99.9988%" height="15" fill="rgb(225,31,38)" fg:x="1" fg:w="80264"/><text x="0.2512%" y="319.50">dyld`start</text></g><g><title>dateo_fun_remover`main (80,264 samples, 100.00%)</title><rect x="0.0012%" y="293" width="99.9988%" height="15" fill="rgb(250,208,3)" fg:x="1" fg:w="80264"/><text x="0.2512%" y="303.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (80,264 samples, 100.00%)</title><rect x="0.0012%" y="277" width="99.9988%" height="15" fill="rgb(246,54,23)" fg:x="1" fg:w="80264"/><text x="0.2512%" y="287.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (80,264 samples, 100.00%)</title><rect x="0.0012%" y="261" width="99.9988%" height="15" fill="rgb(243,76,11)" fg:x="1" fg:w="80264"/><text x="0.2512%" y="271.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (80,264 samples, 100.00%)</title><rect x="0.0012%" y="245" width="99.9988%" height="15" fill="rgb(245,21,50)" fg:x="1" fg:w="80264"/><text x="0.2512%" y="255.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (80,264 samples, 100.00%)</title><rect x="0.0012%" y="229" width="99.9988%" height="15" fill="rgb(228,9,43)" fg:x="1" fg:w="80264"/><text x="0.2512%" y="239.50">dateo_fun_remover`dateo_fun_remover::main</text></g></svg></svg>