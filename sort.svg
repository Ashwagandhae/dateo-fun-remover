<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="29653"><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.07%)</title><rect x="0.0034%" y="277" width="0.0674%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="20"/><text x="0.2534%" y="287.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (10 samples, 0.03%)</title><rect x="0.0708%" y="277" width="0.0337%" height="15" fill="rgb(217,0,24)" fg:x="21" fg:w="10"/><text x="0.3208%" y="287.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (5 samples, 0.02%)</title><rect x="0.1045%" y="277" width="0.0169%" height="15" fill="rgb(221,193,54)" fg:x="31" fg:w="5"/><text x="0.3545%" y="287.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::break_patterns (3 samples, 0.01%)</title><rect x="34.3810%" y="133" width="0.0101%" height="15" fill="rgb(248,212,6)" fg:x="10195" fg:w="3"/><text x="34.6310%" y="143.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::partial_insertion_sort (4 samples, 0.01%)</title><rect x="36.3336%" y="101" width="0.0135%" height="15" fill="rgb(208,68,35)" fg:x="10774" fg:w="4"/><text x="36.5836%" y="111.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (3 samples, 0.01%)</title><rect x="36.6607%" y="53" width="0.0101%" height="15" fill="rgb(232,128,0)" fg:x="10871" fg:w="3"/><text x="36.9107%" y="63.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (3 samples, 0.01%)</title><rect x="36.6607%" y="37" width="0.0101%" height="15" fill="rgb(207,160,47)" fg:x="10871" fg:w="3"/><text x="36.9107%" y="47.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (16 samples, 0.05%)</title><rect x="36.6573%" y="69" width="0.0540%" height="15" fill="rgb(228,23,34)" fg:x="10870" fg:w="16"/><text x="36.9073%" y="79.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (12 samples, 0.04%)</title><rect x="36.6708%" y="53" width="0.0405%" height="15" fill="rgb(218,30,26)" fg:x="10874" fg:w="12"/><text x="36.9208%" y="63.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (82 samples, 0.28%)</title><rect x="36.5697%" y="85" width="0.2765%" height="15" fill="rgb(220,122,19)" fg:x="10844" fg:w="82"/><text x="36.8197%" y="95.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (40 samples, 0.13%)</title><rect x="36.7113%" y="69" width="0.1349%" height="15" fill="rgb(250,228,42)" fg:x="10886" fg:w="40"/><text x="36.9613%" y="79.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (254 samples, 0.86%)</title><rect x="36.3471%" y="101" width="0.8566%" height="15" fill="rgb(240,193,28)" fg:x="10778" fg:w="254"/><text x="36.5971%" y="111.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (106 samples, 0.36%)</title><rect x="36.8462%" y="85" width="0.3575%" height="15" fill="rgb(216,20,37)" fg:x="10926" fg:w="106"/><text x="37.0962%" y="95.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (666 samples, 2.25%)</title><rect x="35.6827%" y="117" width="2.2460%" height="15" fill="rgb(206,188,39)" fg:x="10581" fg:w="666"/><text x="35.9327%" y="127.50">d..</text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (215 samples, 0.73%)</title><rect x="37.2037%" y="101" width="0.7251%" height="15" fill="rgb(217,207,13)" fg:x="11032" fg:w="215"/><text x="37.4537%" y="111.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (1,301 samples, 4.39%)</title><rect x="34.3945%" y="133" width="4.3874%" height="15" fill="rgb(231,73,38)" fg:x="10199" fg:w="1301"/><text x="34.6445%" y="143.50">dateo..</text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (253 samples, 0.85%)</title><rect x="37.9287%" y="117" width="0.8532%" height="15" fill="rgb(225,20,46)" fg:x="11247" fg:w="253"/><text x="38.1787%" y="127.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (2,076 samples, 7.00%)</title><rect x="32.5599%" y="149" width="7.0010%" height="15" fill="rgb(210,31,41)" fg:x="9655" fg:w="2076"/><text x="32.8099%" y="159.50">dateo_fun..</text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (231 samples, 0.78%)</title><rect x="38.7819%" y="133" width="0.7790%" height="15" fill="rgb(221,200,47)" fg:x="11500" fg:w="231"/><text x="39.0319%" y="143.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (2,821 samples, 9.51%)</title><rect x="30.4657%" y="165" width="9.5134%" height="15" fill="rgb(226,26,5)" fg:x="9034" fg:w="2821"/><text x="30.7157%" y="175.50">dateo_fun_remo..</text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (124 samples, 0.42%)</title><rect x="39.5609%" y="149" width="0.4182%" height="15" fill="rgb(249,33,26)" fg:x="11731" fg:w="124"/><text x="39.8109%" y="159.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (3,641 samples, 12.28%)</title><rect x="27.9230%" y="181" width="12.2787%" height="15" fill="rgb(235,183,28)" fg:x="8280" fg:w="3641"/><text x="28.1730%" y="191.50">dateo_fun_remover`..</text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (66 samples, 0.22%)</title><rect x="39.9791%" y="165" width="0.2226%" height="15" fill="rgb(221,5,38)" fg:x="11855" fg:w="66"/><text x="40.2291%" y="175.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (4,525 samples, 15.26%)</title><rect x="25.0093%" y="197" width="15.2598%" height="15" fill="rgb(247,18,42)" fg:x="7416" fg:w="4525"/><text x="25.2593%" y="207.50">dateo_fun_remover`core:..</text></g><g><title>dateo_fun_remover`core::slice::sort::shift_tail (20 samples, 0.07%)</title><rect x="40.2017%" y="181" width="0.0674%" height="15" fill="rgb(241,131,45)" fg:x="11921" fg:w="20"/><text x="40.4517%" y="191.50"></text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (5,555 samples, 18.73%)</title><rect x="21.5425%" y="213" width="18.7333%" height="15" fill="rgb(249,31,29)" fg:x="6388" fg:w="5555"/><text x="21.7925%" y="223.50">dateo_fun_remover`core::slice..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (11,906 samples, 40.15%)</title><rect x="0.1315%" y="277" width="40.1511%" height="15" fill="rgb(225,111,53)" fg:x="39" fg:w="11906"/><text x="0.3815%" y="287.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_inte..</text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (11,627 samples, 39.21%)</title><rect x="1.0724%" y="261" width="39.2102%" height="15" fill="rgb(238,160,17)" fg:x="318" fg:w="11627"/><text x="1.3224%" y="271.50">dateo_fun_remover`core::slice::sort::recurse</text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (8,270 samples, 27.89%)</title><rect x="12.3933%" y="245" width="27.8893%" height="15" fill="rgb(214,148,48)" fg:x="3675" fg:w="8270"/><text x="12.6433%" y="255.50">dateo_fun_remover`core::slice::sort::recurse</text></g><g><title>dateo_fun_remover`core::slice::sort::recurse (6,815 samples, 22.98%)</title><rect x="17.3001%" y="229" width="22.9825%" height="15" fill="rgb(232,36,49)" fg:x="5130" fg:w="6815"/><text x="17.5501%" y="239.50">dateo_fun_remover`core::slice::sort:..</text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.12%)</title><rect x="43.0176%" y="261" width="0.1180%" height="15" fill="rgb(209,103,24)" fg:x="12756" fg:w="35"/><text x="43.2676%" y="271.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,769 samples, 5.97%)</title><rect x="43.1356%" y="261" width="5.9657%" height="15" fill="rgb(229,88,8)" fg:x="12791" fg:w="1769"/><text x="43.3856%" y="271.50">dateo_fu..</text></g><g><title>dateo_fun_remover`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="49.1013%" y="261" width="0.0101%" height="15" fill="rgb(213,181,19)" fg:x="14560" fg:w="3"/><text x="49.3513%" y="271.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (21 samples, 0.07%)</title><rect x="49.1114%" y="261" width="0.0708%" height="15" fill="rgb(254,191,54)" fg:x="14563" fg:w="21"/><text x="49.3614%" y="271.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (11 samples, 0.04%)</title><rect x="49.1822%" y="261" width="0.0371%" height="15" fill="rgb(241,83,37)" fg:x="14584" fg:w="11"/><text x="49.4322%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d794 (8 samples, 0.03%)</title><rect x="49.2193%" y="197" width="0.0270%" height="15" fill="rgb(233,36,39)" fg:x="14595" fg:w="8"/><text x="49.4693%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (8 samples, 0.03%)</title><rect x="49.2193%" y="181" width="0.0270%" height="15" fill="rgb(226,3,54)" fg:x="14595" fg:w="8"/><text x="49.4693%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.03%)</title><rect x="49.2193%" y="165" width="0.0270%" height="15" fill="rgb(245,192,40)" fg:x="14595" fg:w="8"/><text x="49.4693%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (3 samples, 0.01%)</title><rect x="49.2463%" y="197" width="0.0101%" height="15" fill="rgb(238,167,29)" fg:x="14603" fg:w="3"/><text x="49.4963%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="49.2463%" y="181" width="0.0101%" height="15" fill="rgb(232,182,51)" fg:x="14603" fg:w="3"/><text x="49.4963%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (70 samples, 0.24%)</title><rect x="49.2193%" y="261" width="0.2361%" height="15" fill="rgb(231,60,39)" fg:x="14595" fg:w="70"/><text x="49.4693%" y="271.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (70 samples, 0.24%)</title><rect x="49.2193%" y="245" width="0.2361%" height="15" fill="rgb(208,69,12)" fg:x="14595" fg:w="70"/><text x="49.4693%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (70 samples, 0.24%)</title><rect x="49.2193%" y="229" width="0.2361%" height="15" fill="rgb(235,93,37)" fg:x="14595" fg:w="70"/><text x="49.4693%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (70 samples, 0.24%)</title><rect x="49.2193%" y="213" width="0.2361%" height="15" fill="rgb(213,116,39)" fg:x="14595" fg:w="70"/><text x="49.4693%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (59 samples, 0.20%)</title><rect x="49.2564%" y="197" width="0.1990%" height="15" fill="rgb(222,207,29)" fg:x="14606" fg:w="59"/><text x="49.5064%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (59 samples, 0.20%)</title><rect x="49.2564%" y="181" width="0.1990%" height="15" fill="rgb(206,96,30)" fg:x="14606" fg:w="59"/><text x="49.5064%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (59 samples, 0.20%)</title><rect x="49.2564%" y="165" width="0.1990%" height="15" fill="rgb(218,138,4)" fg:x="14606" fg:w="59"/><text x="49.5064%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (59 samples, 0.20%)</title><rect x="49.2564%" y="149" width="0.1990%" height="15" fill="rgb(250,191,14)" fg:x="14606" fg:w="59"/><text x="49.5064%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (59 samples, 0.20%)</title><rect x="49.2564%" y="133" width="0.1990%" height="15" fill="rgb(239,60,40)" fg:x="14606" fg:w="59"/><text x="49.5064%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="49.4587%" y="245" width="0.0101%" height="15" fill="rgb(206,27,48)" fg:x="14666" fg:w="3"/><text x="49.7087%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="49.4722%" y="229" width="0.0101%" height="15" fill="rgb(225,35,8)" fg:x="14670" fg:w="3"/><text x="49.7222%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (6 samples, 0.02%)</title><rect x="49.4722%" y="245" width="0.0202%" height="15" fill="rgb(250,213,24)" fg:x="14670" fg:w="6"/><text x="49.7222%" y="255.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (4 samples, 0.01%)</title><rect x="49.4925%" y="245" width="0.0135%" height="15" fill="rgb(247,123,22)" fg:x="14676" fg:w="4"/><text x="49.7425%" y="255.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (3 samples, 0.01%)</title><rect x="49.4958%" y="229" width="0.0101%" height="15" fill="rgb(231,138,38)" fg:x="14677" fg:w="3"/><text x="49.7458%" y="239.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="49.4958%" y="213" width="0.0101%" height="15" fill="rgb(231,145,46)" fg:x="14677" fg:w="3"/><text x="49.7458%" y="223.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (16 samples, 0.05%)</title><rect x="49.4587%" y="261" width="0.0540%" height="15" fill="rgb(251,118,11)" fg:x="14666" fg:w="16"/><text x="49.7087%" y="271.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (26 samples, 0.09%)</title><rect x="57.9638%" y="213" width="0.0877%" height="15" fill="rgb(217,147,25)" fg:x="17188" fg:w="26"/><text x="58.2138%" y="223.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (584 samples, 1.97%)</title><rect x="58.0515%" y="213" width="1.9694%" height="15" fill="rgb(247,81,37)" fg:x="17214" fg:w="584"/><text x="58.3015%" y="223.50">d..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (42 samples, 0.14%)</title><rect x="60.0209%" y="213" width="0.1416%" height="15" fill="rgb(209,12,38)" fg:x="17798" fg:w="42"/><text x="60.2709%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,583 samples, 5.34%)</title><rect x="55.0872%" y="229" width="5.3384%" height="15" fill="rgb(227,1,9)" fg:x="16335" fg:w="1583"/><text x="55.3372%" y="239.50">dateo_f..</text></g><g><title>libsystem_m.dylib`trunc (78 samples, 0.26%)</title><rect x="60.1625%" y="213" width="0.2630%" height="15" fill="rgb(248,47,43)" fg:x="17840" fg:w="78"/><text x="60.4125%" y="223.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (3 samples, 0.01%)</title><rect x="60.4256%" y="229" width="0.0101%" height="15" fill="rgb(221,10,30)" fg:x="17918" fg:w="3"/><text x="60.6756%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (457 samples, 1.54%)</title><rect x="60.4357%" y="229" width="1.5412%" height="15" fill="rgb(210,229,1)" fg:x="17921" fg:w="457"/><text x="60.6857%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (42 samples, 0.14%)</title><rect x="61.9769%" y="229" width="0.1416%" height="15" fill="rgb(222,148,37)" fg:x="18378" fg:w="42"/><text x="62.2269%" y="239.50"></text></g><g><title>libsystem_m.dylib`trunc (25 samples, 0.08%)</title><rect x="62.1185%" y="229" width="0.0843%" height="15" fill="rgb(234,67,33)" fg:x="18420" fg:w="25"/><text x="62.3685%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (9 samples, 0.03%)</title><rect x="62.2028%" y="229" width="0.0304%" height="15" fill="rgb(247,98,35)" fg:x="18445" fg:w="9"/><text x="62.4528%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (10 samples, 0.03%)</title><rect x="62.2332%" y="229" width="0.0337%" height="15" fill="rgb(247,138,52)" fg:x="18454" fg:w="10"/><text x="62.4832%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (12 samples, 0.04%)</title><rect x="62.2703%" y="229" width="0.0405%" height="15" fill="rgb(213,79,30)" fg:x="18465" fg:w="12"/><text x="62.5203%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (11 samples, 0.04%)</title><rect x="62.3107%" y="229" width="0.0371%" height="15" fill="rgb(246,177,23)" fg:x="18477" fg:w="11"/><text x="62.5607%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (8 samples, 0.03%)</title><rect x="62.3478%" y="229" width="0.0270%" height="15" fill="rgb(230,62,27)" fg:x="18488" fg:w="8"/><text x="62.5978%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (12 samples, 0.04%)</title><rect x="62.3748%" y="229" width="0.0405%" height="15" fill="rgb(216,154,8)" fg:x="18496" fg:w="12"/><text x="62.6248%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (51 samples, 0.17%)</title><rect x="62.4153%" y="229" width="0.1720%" height="15" fill="rgb(244,35,45)" fg:x="18508" fg:w="51"/><text x="62.6653%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (242 samples, 0.82%)</title><rect x="62.5906%" y="229" width="0.8161%" height="15" fill="rgb(251,115,12)" fg:x="18560" fg:w="242"/><text x="62.8406%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (19 samples, 0.06%)</title><rect x="63.4067%" y="229" width="0.0641%" height="15" fill="rgb(240,54,50)" fg:x="18802" fg:w="19"/><text x="63.6567%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (10 samples, 0.03%)</title><rect x="63.4708%" y="229" width="0.0337%" height="15" fill="rgb(233,84,52)" fg:x="18821" fg:w="10"/><text x="63.7208%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (60 samples, 0.20%)</title><rect x="63.5045%" y="229" width="0.2023%" height="15" fill="rgb(207,117,47)" fg:x="18831" fg:w="60"/><text x="63.7545%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (17 samples, 0.06%)</title><rect x="63.7069%" y="229" width="0.0573%" height="15" fill="rgb(249,43,39)" fg:x="18891" fg:w="17"/><text x="63.9569%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (10 samples, 0.03%)</title><rect x="63.7642%" y="229" width="0.0337%" height="15" fill="rgb(209,38,44)" fg:x="18908" fg:w="10"/><text x="64.0142%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (28 samples, 0.09%)</title><rect x="63.8013%" y="229" width="0.0944%" height="15" fill="rgb(236,212,23)" fg:x="18919" fg:w="28"/><text x="64.0513%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (12 samples, 0.04%)</title><rect x="63.9025%" y="229" width="0.0405%" height="15" fill="rgb(242,79,21)" fg:x="18949" fg:w="12"/><text x="64.1525%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (14 samples, 0.05%)</title><rect x="63.9429%" y="229" width="0.0472%" height="15" fill="rgb(211,96,35)" fg:x="18961" fg:w="14"/><text x="64.1929%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (3 samples, 0.01%)</title><rect x="63.9935%" y="229" width="0.0101%" height="15" fill="rgb(253,215,40)" fg:x="18976" fg:w="3"/><text x="64.2435%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (11 samples, 0.04%)</title><rect x="64.0036%" y="229" width="0.0371%" height="15" fill="rgb(211,81,21)" fg:x="18979" fg:w="11"/><text x="64.2536%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (11 samples, 0.04%)</title><rect x="64.0407%" y="229" width="0.0371%" height="15" fill="rgb(208,190,38)" fg:x="18990" fg:w="11"/><text x="64.2907%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (15 samples, 0.05%)</title><rect x="64.0778%" y="229" width="0.0506%" height="15" fill="rgb(235,213,38)" fg:x="19001" fg:w="15"/><text x="64.3278%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (20 samples, 0.07%)</title><rect x="64.1284%" y="229" width="0.0674%" height="15" fill="rgb(237,122,38)" fg:x="19016" fg:w="20"/><text x="64.3784%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (17 samples, 0.06%)</title><rect x="64.1959%" y="229" width="0.0573%" height="15" fill="rgb(244,218,35)" fg:x="19036" fg:w="17"/><text x="64.4459%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (5 samples, 0.02%)</title><rect x="64.2532%" y="229" width="0.0169%" height="15" fill="rgb(240,68,47)" fg:x="19053" fg:w="5"/><text x="64.5032%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094c1 (4 samples, 0.01%)</title><rect x="64.2701%" y="229" width="0.0135%" height="15" fill="rgb(210,16,53)" fg:x="19058" fg:w="4"/><text x="64.5201%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (76 samples, 0.26%)</title><rect x="64.2903%" y="229" width="0.2563%" height="15" fill="rgb(235,124,12)" fg:x="19064" fg:w="76"/><text x="64.5403%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (8 samples, 0.03%)</title><rect x="64.5533%" y="229" width="0.0270%" height="15" fill="rgb(224,169,11)" fg:x="19142" fg:w="8"/><text x="64.8033%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e0 (3 samples, 0.01%)</title><rect x="64.5803%" y="229" width="0.0101%" height="15" fill="rgb(250,166,2)" fg:x="19150" fg:w="3"/><text x="64.8303%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (5 samples, 0.02%)</title><rect x="64.5972%" y="229" width="0.0169%" height="15" fill="rgb(242,216,29)" fg:x="19155" fg:w="5"/><text x="64.8472%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (37 samples, 0.12%)</title><rect x="64.6140%" y="229" width="0.1248%" height="15" fill="rgb(230,116,27)" fg:x="19160" fg:w="37"/><text x="64.8640%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (7 samples, 0.02%)</title><rect x="64.7388%" y="229" width="0.0236%" height="15" fill="rgb(228,99,48)" fg:x="19197" fg:w="7"/><text x="64.9888%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (12 samples, 0.04%)</title><rect x="64.7624%" y="229" width="0.0405%" height="15" fill="rgb(253,11,6)" fg:x="19204" fg:w="12"/><text x="65.0124%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (14 samples, 0.05%)</title><rect x="64.8029%" y="229" width="0.0472%" height="15" fill="rgb(247,143,39)" fg:x="19216" fg:w="14"/><text x="65.0529%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (150 samples, 0.51%)</title><rect x="64.8501%" y="229" width="0.5059%" height="15" fill="rgb(236,97,10)" fg:x="19230" fg:w="150"/><text x="65.1001%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (5 samples, 0.02%)</title><rect x="65.3560%" y="229" width="0.0169%" height="15" fill="rgb(233,208,19)" fg:x="19380" fg:w="5"/><text x="65.6060%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20955a (4 samples, 0.01%)</title><rect x="65.3762%" y="229" width="0.0135%" height="15" fill="rgb(216,164,2)" fg:x="19386" fg:w="4"/><text x="65.6262%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209568 (7 samples, 0.02%)</title><rect x="65.3930%" y="229" width="0.0236%" height="15" fill="rgb(220,129,5)" fg:x="19391" fg:w="7"/><text x="65.6430%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (9 samples, 0.03%)</title><rect x="65.4167%" y="229" width="0.0304%" height="15" fill="rgb(242,17,10)" fg:x="19398" fg:w="9"/><text x="65.6667%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (14 samples, 0.05%)</title><rect x="65.4470%" y="229" width="0.0472%" height="15" fill="rgb(242,107,0)" fg:x="19407" fg:w="14"/><text x="65.6970%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (7 samples, 0.02%)</title><rect x="65.4976%" y="229" width="0.0236%" height="15" fill="rgb(251,28,31)" fg:x="19422" fg:w="7"/><text x="65.7476%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (12 samples, 0.04%)</title><rect x="65.5246%" y="229" width="0.0405%" height="15" fill="rgb(233,223,10)" fg:x="19430" fg:w="12"/><text x="65.7746%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (4 samples, 0.01%)</title><rect x="65.5684%" y="229" width="0.0135%" height="15" fill="rgb(215,21,27)" fg:x="19443" fg:w="4"/><text x="65.8184%" y="239.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,467 samples, 15.06%)</title><rect x="50.5311%" y="245" width="15.0642%" height="15" fill="rgb(232,23,21)" fg:x="14984" fg:w="4467"/><text x="50.7811%" y="255.50">dateo_fun_remover`&lt;allo..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ec (3 samples, 0.01%)</title><rect x="65.5853%" y="229" width="0.0101%" height="15" fill="rgb(244,5,23)" fg:x="19448" fg:w="3"/><text x="65.8353%" y="239.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="65.5954%" y="245" width="0.0438%" height="15" fill="rgb(226,81,46)" fg:x="19451" fg:w="13"/><text x="65.8454%" y="255.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (24 samples, 0.08%)</title><rect x="65.6392%" y="245" width="0.0809%" height="15" fill="rgb(247,70,30)" fg:x="19464" fg:w="24"/><text x="65.8892%" y="255.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (4 samples, 0.01%)</title><rect x="65.7202%" y="245" width="0.0135%" height="15" fill="rgb(212,68,19)" fg:x="19488" fg:w="4"/><text x="65.9702%" y="255.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="65.7370%" y="229" width="0.0337%" height="15" fill="rgb(240,187,13)" fg:x="19493" fg:w="10"/><text x="65.9870%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (9 samples, 0.03%)</title><rect x="65.7404%" y="213" width="0.0304%" height="15" fill="rgb(223,113,26)" fg:x="19494" fg:w="9"/><text x="65.9904%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (7 samples, 0.02%)</title><rect x="65.7471%" y="197" width="0.0236%" height="15" fill="rgb(206,192,2)" fg:x="19496" fg:w="7"/><text x="65.9971%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (3 samples, 0.01%)</title><rect x="65.7606%" y="181" width="0.0101%" height="15" fill="rgb(241,108,4)" fg:x="19500" fg:w="3"/><text x="66.0106%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.04%)</title><rect x="65.7337%" y="245" width="0.0405%" height="15" fill="rgb(247,173,49)" fg:x="19492" fg:w="12"/><text x="65.9837%" y="255.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (42 samples, 0.14%)</title><rect x="65.7741%" y="245" width="0.1416%" height="15" fill="rgb(224,114,35)" fg:x="19504" fg:w="42"/><text x="66.0241%" y="255.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (8 samples, 0.03%)</title><rect x="65.9158%" y="245" width="0.0270%" height="15" fill="rgb(245,159,27)" fg:x="19546" fg:w="8"/><text x="66.1658%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (16 samples, 0.05%)</title><rect x="65.9427%" y="245" width="0.0540%" height="15" fill="rgb(245,172,44)" fg:x="19554" fg:w="16"/><text x="66.1927%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (13 samples, 0.04%)</title><rect x="66.0068%" y="245" width="0.0438%" height="15" fill="rgb(236,23,11)" fg:x="19573" fg:w="13"/><text x="66.2568%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (9 samples, 0.03%)</title><rect x="66.0507%" y="245" width="0.0304%" height="15" fill="rgb(205,117,38)" fg:x="19586" fg:w="9"/><text x="66.3007%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (5 samples, 0.02%)</title><rect x="66.0844%" y="245" width="0.0169%" height="15" fill="rgb(237,72,25)" fg:x="19596" fg:w="5"/><text x="66.3344%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (13 samples, 0.04%)</title><rect x="66.1046%" y="245" width="0.0438%" height="15" fill="rgb(244,70,9)" fg:x="19602" fg:w="13"/><text x="66.3546%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (6 samples, 0.02%)</title><rect x="66.1485%" y="245" width="0.0202%" height="15" fill="rgb(217,125,39)" fg:x="19615" fg:w="6"/><text x="66.3985%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (3 samples, 0.01%)</title><rect x="66.1721%" y="245" width="0.0101%" height="15" fill="rgb(235,36,10)" fg:x="19622" fg:w="3"/><text x="66.4221%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (10 samples, 0.03%)</title><rect x="66.1822%" y="245" width="0.0337%" height="15" fill="rgb(251,123,47)" fg:x="19625" fg:w="10"/><text x="66.4322%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (10 samples, 0.03%)</title><rect x="66.2159%" y="245" width="0.0337%" height="15" fill="rgb(221,13,13)" fg:x="19635" fg:w="10"/><text x="66.4659%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (3 samples, 0.01%)</title><rect x="66.2564%" y="245" width="0.0101%" height="15" fill="rgb(238,131,9)" fg:x="19647" fg:w="3"/><text x="66.5064%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (11 samples, 0.04%)</title><rect x="66.2665%" y="245" width="0.0371%" height="15" fill="rgb(211,50,8)" fg:x="19650" fg:w="11"/><text x="66.5165%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (10 samples, 0.03%)</title><rect x="66.3036%" y="245" width="0.0337%" height="15" fill="rgb(245,182,24)" fg:x="19661" fg:w="10"/><text x="66.5536%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (7 samples, 0.02%)</title><rect x="66.3373%" y="245" width="0.0236%" height="15" fill="rgb(242,14,37)" fg:x="19671" fg:w="7"/><text x="66.5873%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (12 samples, 0.04%)</title><rect x="66.3643%" y="245" width="0.0405%" height="15" fill="rgb(246,228,12)" fg:x="19679" fg:w="12"/><text x="66.6143%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (3 samples, 0.01%)</title><rect x="66.4047%" y="245" width="0.0101%" height="15" fill="rgb(213,55,15)" fg:x="19691" fg:w="3"/><text x="66.6547%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (10 samples, 0.03%)</title><rect x="66.4182%" y="245" width="0.0337%" height="15" fill="rgb(209,9,3)" fg:x="19695" fg:w="10"/><text x="66.6682%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (8 samples, 0.03%)</title><rect x="66.4553%" y="245" width="0.0270%" height="15" fill="rgb(230,59,30)" fg:x="19706" fg:w="8"/><text x="66.7053%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (13 samples, 0.04%)</title><rect x="66.4891%" y="245" width="0.0438%" height="15" fill="rgb(209,121,21)" fg:x="19716" fg:w="13"/><text x="66.7391%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (11 samples, 0.04%)</title><rect x="66.5363%" y="245" width="0.0371%" height="15" fill="rgb(220,109,13)" fg:x="19730" fg:w="11"/><text x="66.7863%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (281 samples, 0.95%)</title><rect x="66.5734%" y="245" width="0.9476%" height="15" fill="rgb(232,18,1)" fg:x="19741" fg:w="281"/><text x="66.8234%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (4 samples, 0.01%)</title><rect x="67.5210%" y="245" width="0.0135%" height="15" fill="rgb(215,41,42)" fg:x="20022" fg:w="4"/><text x="67.7710%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (9 samples, 0.03%)</title><rect x="67.5379%" y="245" width="0.0304%" height="15" fill="rgb(224,123,36)" fg:x="20027" fg:w="9"/><text x="67.7879%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (10 samples, 0.03%)</title><rect x="67.5682%" y="245" width="0.0337%" height="15" fill="rgb(240,125,3)" fg:x="20036" fg:w="10"/><text x="67.8182%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (12 samples, 0.04%)</title><rect x="67.6019%" y="245" width="0.0405%" height="15" fill="rgb(205,98,50)" fg:x="20046" fg:w="12"/><text x="67.8519%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (52 samples, 0.18%)</title><rect x="67.6424%" y="245" width="0.1754%" height="15" fill="rgb(205,185,37)" fg:x="20058" fg:w="52"/><text x="67.8924%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (52 samples, 0.18%)</title><rect x="67.6424%" y="229" width="0.1754%" height="15" fill="rgb(238,207,15)" fg:x="20058" fg:w="52"/><text x="67.8924%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (6 samples, 0.02%)</title><rect x="67.8279%" y="245" width="0.0202%" height="15" fill="rgb(213,199,42)" fg:x="20113" fg:w="6"/><text x="68.0779%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (29 samples, 0.10%)</title><rect x="67.8481%" y="245" width="0.0978%" height="15" fill="rgb(235,201,11)" fg:x="20119" fg:w="29"/><text x="68.0981%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223928 (10 samples, 0.03%)</title><rect x="67.9459%" y="245" width="0.0337%" height="15" fill="rgb(207,46,11)" fg:x="20148" fg:w="10"/><text x="68.1959%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223939 (10 samples, 0.03%)</title><rect x="67.9796%" y="245" width="0.0337%" height="15" fill="rgb(241,35,35)" fg:x="20158" fg:w="10"/><text x="68.2296%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22394d (9 samples, 0.03%)</title><rect x="68.0167%" y="245" width="0.0304%" height="15" fill="rgb(243,32,47)" fg:x="20169" fg:w="9"/><text x="68.2667%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395d (11 samples, 0.04%)</title><rect x="68.0471%" y="245" width="0.0371%" height="15" fill="rgb(247,202,23)" fg:x="20178" fg:w="11"/><text x="68.2971%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396e (5 samples, 0.02%)</title><rect x="68.0875%" y="245" width="0.0169%" height="15" fill="rgb(219,102,11)" fg:x="20190" fg:w="5"/><text x="68.3375%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (113 samples, 0.38%)</title><rect x="68.1145%" y="245" width="0.3811%" height="15" fill="rgb(243,110,44)" fg:x="20198" fg:w="113"/><text x="68.3645%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a2 (6 samples, 0.02%)</title><rect x="68.5023%" y="245" width="0.0202%" height="15" fill="rgb(222,74,54)" fg:x="20313" fg:w="6"/><text x="68.7523%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (6 samples, 0.02%)</title><rect x="68.5226%" y="245" width="0.0202%" height="15" fill="rgb(216,99,12)" fg:x="20319" fg:w="6"/><text x="68.7726%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (6 samples, 0.02%)</title><rect x="68.5428%" y="245" width="0.0202%" height="15" fill="rgb(226,22,26)" fg:x="20325" fg:w="6"/><text x="68.7928%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (165 samples, 0.56%)</title><rect x="68.5664%" y="245" width="0.5564%" height="15" fill="rgb(217,163,10)" fg:x="20332" fg:w="165"/><text x="68.8164%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (8 samples, 0.03%)</title><rect x="69.1262%" y="245" width="0.0270%" height="15" fill="rgb(213,25,53)" fg:x="20498" fg:w="8"/><text x="69.3762%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (11 samples, 0.04%)</title><rect x="69.1532%" y="245" width="0.0371%" height="15" fill="rgb(252,105,26)" fg:x="20506" fg:w="11"/><text x="69.4032%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (13 samples, 0.04%)</title><rect x="69.1937%" y="245" width="0.0438%" height="15" fill="rgb(220,39,43)" fg:x="20518" fg:w="13"/><text x="69.4437%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (21 samples, 0.07%)</title><rect x="69.2409%" y="245" width="0.0708%" height="15" fill="rgb(229,68,48)" fg:x="20532" fg:w="21"/><text x="69.4909%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (13 samples, 0.04%)</title><rect x="69.3218%" y="245" width="0.0438%" height="15" fill="rgb(252,8,32)" fg:x="20556" fg:w="13"/><text x="69.5718%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (15 samples, 0.05%)</title><rect x="69.3657%" y="245" width="0.0506%" height="15" fill="rgb(223,20,43)" fg:x="20569" fg:w="15"/><text x="69.6157%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (17 samples, 0.06%)</title><rect x="69.4196%" y="245" width="0.0573%" height="15" fill="rgb(229,81,49)" fg:x="20585" fg:w="17"/><text x="69.6696%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (14 samples, 0.05%)</title><rect x="69.4803%" y="245" width="0.0472%" height="15" fill="rgb(236,28,36)" fg:x="20603" fg:w="14"/><text x="69.7303%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (6 samples, 0.02%)</title><rect x="69.5275%" y="245" width="0.0202%" height="15" fill="rgb(249,185,26)" fg:x="20617" fg:w="6"/><text x="69.7775%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (13 samples, 0.04%)</title><rect x="69.5478%" y="245" width="0.0438%" height="15" fill="rgb(249,174,33)" fg:x="20623" fg:w="13"/><text x="69.7978%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.04%)</title><rect x="69.5916%" y="245" width="0.0438%" height="15" fill="rgb(233,201,37)" fg:x="20636" fg:w="13"/><text x="69.8416%" y="255.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (6,045 samples, 20.39%)</title><rect x="49.5127%" y="261" width="20.3858%" height="15" fill="rgb(221,78,26)" fg:x="14682" fg:w="6045"/><text x="49.7627%" y="271.50">dateo_fun_remover`dateo_fun_remo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (78 samples, 0.26%)</title><rect x="69.6355%" y="245" width="0.2630%" height="15" fill="rgb(250,127,30)" fg:x="20649" fg:w="78"/><text x="69.8855%" y="255.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,107 samples, 3.73%)</title><rect x="70.0165%" y="245" width="3.7332%" height="15" fill="rgb(230,49,44)" fg:x="20762" fg:w="1107"/><text x="70.2665%" y="255.50">date..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d671 (6 samples, 0.02%)</title><rect x="73.7497%" y="181" width="0.0202%" height="15" fill="rgb(229,67,23)" fg:x="21869" fg:w="6"/><text x="73.9997%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ddf (6 samples, 0.02%)</title><rect x="73.7497%" y="165" width="0.0202%" height="15" fill="rgb(249,83,47)" fg:x="21869" fg:w="6"/><text x="73.9997%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (6 samples, 0.02%)</title><rect x="73.7497%" y="149" width="0.0202%" height="15" fill="rgb(215,43,3)" fg:x="21869" fg:w="6"/><text x="73.9997%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (6 samples, 0.02%)</title><rect x="73.7497%" y="133" width="0.0202%" height="15" fill="rgb(238,154,13)" fg:x="21869" fg:w="6"/><text x="73.9997%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (4 samples, 0.01%)</title><rect x="73.7733%" y="181" width="0.0135%" height="15" fill="rgb(219,56,2)" fg:x="21876" fg:w="4"/><text x="74.0233%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.01%)</title><rect x="73.7733%" y="165" width="0.0135%" height="15" fill="rgb(233,0,4)" fg:x="21876" fg:w="4"/><text x="74.0233%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.05%)</title><rect x="73.7497%" y="245" width="0.0506%" height="15" fill="rgb(235,30,7)" fg:x="21869" fg:w="15"/><text x="73.9997%" y="255.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (15 samples, 0.05%)</title><rect x="73.7497%" y="229" width="0.0506%" height="15" fill="rgb(250,79,13)" fg:x="21869" fg:w="15"/><text x="73.9997%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (15 samples, 0.05%)</title><rect x="73.7497%" y="213" width="0.0506%" height="15" fill="rgb(211,146,34)" fg:x="21869" fg:w="15"/><text x="73.9997%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (15 samples, 0.05%)</title><rect x="73.7497%" y="197" width="0.0506%" height="15" fill="rgb(228,22,38)" fg:x="21869" fg:w="15"/><text x="73.9997%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (4 samples, 0.01%)</title><rect x="73.7868%" y="181" width="0.0135%" height="15" fill="rgb(235,168,5)" fg:x="21880" fg:w="4"/><text x="74.0368%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (4 samples, 0.01%)</title><rect x="73.7868%" y="165" width="0.0135%" height="15" fill="rgb(221,155,16)" fg:x="21880" fg:w="4"/><text x="74.0368%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (4 samples, 0.01%)</title><rect x="73.7868%" y="149" width="0.0135%" height="15" fill="rgb(215,215,53)" fg:x="21880" fg:w="4"/><text x="74.0368%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (4 samples, 0.01%)</title><rect x="73.7868%" y="133" width="0.0135%" height="15" fill="rgb(223,4,10)" fg:x="21880" fg:w="4"/><text x="74.0368%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.01%)</title><rect x="73.7868%" y="117" width="0.0135%" height="15" fill="rgb(234,103,6)" fg:x="21880" fg:w="4"/><text x="74.0368%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.07%)</title><rect x="74.3534%" y="213" width="0.0742%" height="15" fill="rgb(227,97,0)" fg:x="22048" fg:w="22"/><text x="74.6034%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (9 samples, 0.03%)</title><rect x="78.7509%" y="181" width="0.0304%" height="15" fill="rgb(234,150,53)" fg:x="23352" fg:w="9"/><text x="79.0009%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209395 (5 samples, 0.02%)</title><rect x="78.7812%" y="181" width="0.0169%" height="15" fill="rgb(228,201,54)" fg:x="23361" fg:w="5"/><text x="79.0312%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (6 samples, 0.02%)</title><rect x="78.8048%" y="181" width="0.0202%" height="15" fill="rgb(222,22,37)" fg:x="23368" fg:w="6"/><text x="79.0548%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (7 samples, 0.02%)</title><rect x="78.8251%" y="181" width="0.0236%" height="15" fill="rgb(237,53,32)" fg:x="23374" fg:w="7"/><text x="79.0751%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (7 samples, 0.02%)</title><rect x="78.8588%" y="181" width="0.0236%" height="15" fill="rgb(233,25,53)" fg:x="23384" fg:w="7"/><text x="79.1088%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (11 samples, 0.04%)</title><rect x="78.8959%" y="181" width="0.0371%" height="15" fill="rgb(210,40,34)" fg:x="23395" fg:w="11"/><text x="79.1459%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d3 (4 samples, 0.01%)</title><rect x="78.9364%" y="181" width="0.0135%" height="15" fill="rgb(241,220,44)" fg:x="23407" fg:w="4"/><text x="79.1864%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (3 samples, 0.01%)</title><rect x="78.9499%" y="181" width="0.0101%" height="15" fill="rgb(235,28,35)" fg:x="23411" fg:w="3"/><text x="79.1999%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (30 samples, 0.10%)</title><rect x="78.9600%" y="181" width="0.1012%" height="15" fill="rgb(210,56,17)" fg:x="23414" fg:w="30"/><text x="79.2100%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (132 samples, 0.45%)</title><rect x="79.0611%" y="181" width="0.4451%" height="15" fill="rgb(224,130,29)" fg:x="23444" fg:w="132"/><text x="79.3111%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (10 samples, 0.03%)</title><rect x="79.5063%" y="181" width="0.0337%" height="15" fill="rgb(235,212,8)" fg:x="23576" fg:w="10"/><text x="79.7563%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (12 samples, 0.04%)</title><rect x="79.5400%" y="181" width="0.0405%" height="15" fill="rgb(223,33,50)" fg:x="23586" fg:w="12"/><text x="79.7900%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (30 samples, 0.10%)</title><rect x="79.5805%" y="181" width="0.1012%" height="15" fill="rgb(219,149,13)" fg:x="23598" fg:w="30"/><text x="79.8305%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (7 samples, 0.02%)</title><rect x="79.6817%" y="181" width="0.0236%" height="15" fill="rgb(250,156,29)" fg:x="23628" fg:w="7"/><text x="79.9317%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (16 samples, 0.05%)</title><rect x="79.7086%" y="181" width="0.0540%" height="15" fill="rgb(216,193,19)" fg:x="23636" fg:w="16"/><text x="79.9586%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (16 samples, 0.05%)</title><rect x="79.7626%" y="181" width="0.0540%" height="15" fill="rgb(216,135,14)" fg:x="23652" fg:w="16"/><text x="80.0126%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (10 samples, 0.03%)</title><rect x="79.8199%" y="181" width="0.0337%" height="15" fill="rgb(241,47,5)" fg:x="23669" fg:w="10"/><text x="80.0699%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (5 samples, 0.02%)</title><rect x="79.8536%" y="181" width="0.0169%" height="15" fill="rgb(233,42,35)" fg:x="23679" fg:w="5"/><text x="80.1036%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (4 samples, 0.01%)</title><rect x="79.8772%" y="181" width="0.0135%" height="15" fill="rgb(231,13,6)" fg:x="23686" fg:w="4"/><text x="80.1272%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (9 samples, 0.03%)</title><rect x="79.8907%" y="181" width="0.0304%" height="15" fill="rgb(207,181,40)" fg:x="23690" fg:w="9"/><text x="80.1407%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (6 samples, 0.02%)</title><rect x="79.9211%" y="181" width="0.0202%" height="15" fill="rgb(254,173,49)" fg:x="23699" fg:w="6"/><text x="80.1711%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (11 samples, 0.04%)</title><rect x="79.9413%" y="181" width="0.0371%" height="15" fill="rgb(221,1,38)" fg:x="23705" fg:w="11"/><text x="80.1913%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (10 samples, 0.03%)</title><rect x="79.9818%" y="181" width="0.0337%" height="15" fill="rgb(206,124,46)" fg:x="23717" fg:w="10"/><text x="80.2318%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (9 samples, 0.03%)</title><rect x="80.0155%" y="181" width="0.0304%" height="15" fill="rgb(249,21,11)" fg:x="23727" fg:w="9"/><text x="80.2655%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (11 samples, 0.04%)</title><rect x="80.0492%" y="181" width="0.0371%" height="15" fill="rgb(222,201,40)" fg:x="23737" fg:w="11"/><text x="80.2992%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (56 samples, 0.19%)</title><rect x="80.0964%" y="181" width="0.1889%" height="15" fill="rgb(235,61,29)" fg:x="23751" fg:w="56"/><text x="80.3464%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (7 samples, 0.02%)</title><rect x="80.2954%" y="181" width="0.0236%" height="15" fill="rgb(219,207,3)" fg:x="23810" fg:w="7"/><text x="80.5454%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e3 (3 samples, 0.01%)</title><rect x="80.3258%" y="181" width="0.0101%" height="15" fill="rgb(222,56,46)" fg:x="23819" fg:w="3"/><text x="80.5758%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (34 samples, 0.11%)</title><rect x="80.3426%" y="181" width="0.1147%" height="15" fill="rgb(239,76,54)" fg:x="23824" fg:w="34"/><text x="80.5926%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (6 samples, 0.02%)</title><rect x="80.4607%" y="181" width="0.0202%" height="15" fill="rgb(231,124,27)" fg:x="23859" fg:w="6"/><text x="80.7107%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (8 samples, 0.03%)</title><rect x="80.4809%" y="181" width="0.0270%" height="15" fill="rgb(249,195,6)" fg:x="23865" fg:w="8"/><text x="80.7309%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209504 (7 samples, 0.02%)</title><rect x="80.5079%" y="181" width="0.0236%" height="15" fill="rgb(237,174,47)" fg:x="23873" fg:w="7"/><text x="80.7579%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (112 samples, 0.38%)</title><rect x="80.5315%" y="181" width="0.3777%" height="15" fill="rgb(206,201,31)" fg:x="23880" fg:w="112"/><text x="80.7815%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (3 samples, 0.01%)</title><rect x="80.9092%" y="181" width="0.0101%" height="15" fill="rgb(231,57,52)" fg:x="23992" fg:w="3"/><text x="81.1592%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209568 (6 samples, 0.02%)</title><rect x="80.9260%" y="181" width="0.0202%" height="15" fill="rgb(248,177,22)" fg:x="23997" fg:w="6"/><text x="81.1760%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (7 samples, 0.02%)</title><rect x="80.9463%" y="181" width="0.0236%" height="15" fill="rgb(215,211,37)" fg:x="24003" fg:w="7"/><text x="81.1963%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (4 samples, 0.01%)</title><rect x="80.9699%" y="181" width="0.0135%" height="15" fill="rgb(241,128,51)" fg:x="24010" fg:w="4"/><text x="81.2199%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b6 (3 samples, 0.01%)</title><rect x="80.9901%" y="181" width="0.0101%" height="15" fill="rgb(227,165,31)" fg:x="24016" fg:w="3"/><text x="81.2401%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (8 samples, 0.03%)</title><rect x="81.0002%" y="181" width="0.0270%" height="15" fill="rgb(228,167,24)" fg:x="24019" fg:w="8"/><text x="81.2502%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (5 samples, 0.02%)</title><rect x="81.0272%" y="181" width="0.0169%" height="15" fill="rgb(228,143,12)" fg:x="24027" fg:w="5"/><text x="81.2772%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (12 samples, 0.04%)</title><rect x="81.0441%" y="181" width="0.0405%" height="15" fill="rgb(249,149,8)" fg:x="24032" fg:w="12"/><text x="81.2941%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,500 samples, 5.06%)</title><rect x="76.0294%" y="197" width="5.0585%" height="15" fill="rgb(243,35,44)" fg:x="22545" fg:w="1500"/><text x="76.2794%" y="207.50">dateo_..</text></g><g><title>dateo_fun_remover`__rdl_alloc (21 samples, 0.07%)</title><rect x="81.0947%" y="197" width="0.0708%" height="15" fill="rgb(246,89,9)" fg:x="24047" fg:w="21"/><text x="81.3447%" y="207.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (3 samples, 0.01%)</title><rect x="81.1655%" y="197" width="0.0101%" height="15" fill="rgb(233,213,13)" fg:x="24068" fg:w="3"/><text x="81.4155%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (10 samples, 0.03%)</title><rect x="81.1756%" y="197" width="0.0337%" height="15" fill="rgb(233,141,41)" fg:x="24071" fg:w="10"/><text x="81.4256%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20938f (3 samples, 0.01%)</title><rect x="81.2161%" y="197" width="0.0101%" height="15" fill="rgb(239,167,4)" fg:x="24083" fg:w="3"/><text x="81.4661%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (5 samples, 0.02%)</title><rect x="81.2262%" y="197" width="0.0169%" height="15" fill="rgb(209,217,16)" fg:x="24086" fg:w="5"/><text x="81.4762%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (11 samples, 0.04%)</title><rect x="81.2430%" y="197" width="0.0371%" height="15" fill="rgb(219,88,35)" fg:x="24091" fg:w="11"/><text x="81.4930%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (6 samples, 0.02%)</title><rect x="81.2835%" y="197" width="0.0202%" height="15" fill="rgb(220,193,23)" fg:x="24103" fg:w="6"/><text x="81.5335%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (4 samples, 0.01%)</title><rect x="81.3172%" y="197" width="0.0135%" height="15" fill="rgb(230,90,52)" fg:x="24113" fg:w="4"/><text x="81.5672%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (9 samples, 0.03%)</title><rect x="81.3307%" y="197" width="0.0304%" height="15" fill="rgb(252,106,19)" fg:x="24117" fg:w="9"/><text x="81.5807%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (8 samples, 0.03%)</title><rect x="81.3779%" y="197" width="0.0270%" height="15" fill="rgb(206,74,20)" fg:x="24131" fg:w="8"/><text x="81.6279%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (12 samples, 0.04%)</title><rect x="81.4117%" y="197" width="0.0405%" height="15" fill="rgb(230,138,44)" fg:x="24141" fg:w="12"/><text x="81.6617%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (5 samples, 0.02%)</title><rect x="81.4555%" y="197" width="0.0169%" height="15" fill="rgb(235,182,43)" fg:x="24154" fg:w="5"/><text x="81.7055%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223802 (5 samples, 0.02%)</title><rect x="81.4724%" y="197" width="0.0169%" height="15" fill="rgb(242,16,51)" fg:x="24159" fg:w="5"/><text x="81.7224%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (7 samples, 0.02%)</title><rect x="81.4960%" y="197" width="0.0236%" height="15" fill="rgb(248,9,4)" fg:x="24166" fg:w="7"/><text x="81.7460%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (7 samples, 0.02%)</title><rect x="81.5229%" y="197" width="0.0236%" height="15" fill="rgb(210,31,22)" fg:x="24174" fg:w="7"/><text x="81.7729%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (11 samples, 0.04%)</title><rect x="81.5567%" y="197" width="0.0371%" height="15" fill="rgb(239,54,39)" fg:x="24184" fg:w="11"/><text x="81.8067%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (9 samples, 0.03%)</title><rect x="81.6039%" y="197" width="0.0304%" height="15" fill="rgb(230,99,41)" fg:x="24198" fg:w="9"/><text x="81.8539%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (6 samples, 0.02%)</title><rect x="81.6342%" y="197" width="0.0202%" height="15" fill="rgb(253,106,12)" fg:x="24207" fg:w="6"/><text x="81.8842%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (9 samples, 0.03%)</title><rect x="81.6646%" y="197" width="0.0304%" height="15" fill="rgb(213,46,41)" fg:x="24216" fg:w="9"/><text x="81.9146%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223884 (5 samples, 0.02%)</title><rect x="81.7017%" y="197" width="0.0169%" height="15" fill="rgb(215,133,35)" fg:x="24227" fg:w="5"/><text x="81.9517%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (12 samples, 0.04%)</title><rect x="81.7185%" y="197" width="0.0405%" height="15" fill="rgb(213,28,5)" fg:x="24232" fg:w="12"/><text x="81.9685%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (232 samples, 0.78%)</title><rect x="81.7590%" y="197" width="0.7824%" height="15" fill="rgb(215,77,49)" fg:x="24244" fg:w="232"/><text x="82.0090%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238c2 (4 samples, 0.01%)</title><rect x="82.5414%" y="197" width="0.0135%" height="15" fill="rgb(248,100,22)" fg:x="24476" fg:w="4"/><text x="82.7914%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (10 samples, 0.03%)</title><rect x="82.5549%" y="197" width="0.0337%" height="15" fill="rgb(208,67,9)" fg:x="24480" fg:w="10"/><text x="82.8049%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (9 samples, 0.03%)</title><rect x="82.5920%" y="197" width="0.0304%" height="15" fill="rgb(219,133,21)" fg:x="24491" fg:w="9"/><text x="82.8420%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (5 samples, 0.02%)</title><rect x="82.6223%" y="197" width="0.0169%" height="15" fill="rgb(246,46,29)" fg:x="24500" fg:w="5"/><text x="82.8723%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (105 samples, 0.35%)</title><rect x="82.6392%" y="197" width="0.3541%" height="15" fill="rgb(246,185,52)" fg:x="24505" fg:w="105"/><text x="82.8892%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (95 samples, 0.32%)</title><rect x="82.6729%" y="181" width="0.3204%" height="15" fill="rgb(252,136,11)" fg:x="24515" fg:w="95"/><text x="82.9229%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (7 samples, 0.02%)</title><rect x="83.0000%" y="197" width="0.0236%" height="15" fill="rgb(219,138,53)" fg:x="24612" fg:w="7"/><text x="83.2500%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (9 samples, 0.03%)</title><rect x="83.0236%" y="197" width="0.0304%" height="15" fill="rgb(211,51,23)" fg:x="24619" fg:w="9"/><text x="83.2736%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223924 (4 samples, 0.01%)</title><rect x="83.0574%" y="197" width="0.0135%" height="15" fill="rgb(247,221,28)" fg:x="24629" fg:w="4"/><text x="83.3074%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (6 samples, 0.02%)</title><rect x="83.0709%" y="197" width="0.0202%" height="15" fill="rgb(251,222,45)" fg:x="24633" fg:w="6"/><text x="83.3209%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (10 samples, 0.03%)</title><rect x="83.0911%" y="197" width="0.0337%" height="15" fill="rgb(217,162,53)" fg:x="24639" fg:w="10"/><text x="83.3411%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (11 samples, 0.04%)</title><rect x="83.1248%" y="197" width="0.0371%" height="15" fill="rgb(229,93,14)" fg:x="24649" fg:w="11"/><text x="83.3748%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22397d (5 samples, 0.02%)</title><rect x="83.1720%" y="197" width="0.0169%" height="15" fill="rgb(209,67,49)" fg:x="24663" fg:w="5"/><text x="83.4220%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (46 samples, 0.16%)</title><rect x="83.1956%" y="197" width="0.1551%" height="15" fill="rgb(213,87,29)" fg:x="24670" fg:w="46"/><text x="83.4456%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399b (6 samples, 0.02%)</title><rect x="83.3609%" y="197" width="0.0202%" height="15" fill="rgb(205,151,52)" fg:x="24719" fg:w="6"/><text x="83.6109%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (101 samples, 0.34%)</title><rect x="83.3811%" y="197" width="0.3406%" height="15" fill="rgb(253,215,39)" fg:x="24725" fg:w="101"/><text x="83.6311%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a2 (3 samples, 0.01%)</title><rect x="83.7217%" y="197" width="0.0101%" height="15" fill="rgb(221,220,41)" fg:x="24826" fg:w="3"/><text x="83.9717%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (10 samples, 0.03%)</title><rect x="83.7318%" y="197" width="0.0337%" height="15" fill="rgb(218,133,21)" fg:x="24829" fg:w="10"/><text x="83.9818%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (11 samples, 0.04%)</title><rect x="83.7656%" y="197" width="0.0371%" height="15" fill="rgb(221,193,43)" fg:x="24839" fg:w="11"/><text x="84.0156%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (130 samples, 0.44%)</title><rect x="83.8027%" y="197" width="0.4384%" height="15" fill="rgb(240,128,52)" fg:x="24850" fg:w="130"/><text x="84.0527%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239c0 (3 samples, 0.01%)</title><rect x="84.2411%" y="197" width="0.0101%" height="15" fill="rgb(253,114,12)" fg:x="24980" fg:w="3"/><text x="84.4911%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (3 samples, 0.01%)</title><rect x="84.2512%" y="197" width="0.0101%" height="15" fill="rgb(215,223,47)" fg:x="24983" fg:w="3"/><text x="84.5012%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f6 (3 samples, 0.01%)</title><rect x="84.2613%" y="197" width="0.0101%" height="15" fill="rgb(248,225,23)" fg:x="24986" fg:w="3"/><text x="84.5113%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (7 samples, 0.02%)</title><rect x="84.2714%" y="197" width="0.0236%" height="15" fill="rgb(250,108,0)" fg:x="24989" fg:w="7"/><text x="84.5214%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (11 samples, 0.04%)</title><rect x="84.3051%" y="197" width="0.0371%" height="15" fill="rgb(228,208,7)" fg:x="24999" fg:w="11"/><text x="84.5551%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (12 samples, 0.04%)</title><rect x="84.3422%" y="197" width="0.0405%" height="15" fill="rgb(244,45,10)" fg:x="25010" fg:w="12"/><text x="84.5922%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (11 samples, 0.04%)</title><rect x="84.3928%" y="197" width="0.0371%" height="15" fill="rgb(207,125,25)" fg:x="25025" fg:w="11"/><text x="84.6428%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cfd (5 samples, 0.02%)</title><rect x="84.4299%" y="197" width="0.0169%" height="15" fill="rgb(210,195,18)" fg:x="25036" fg:w="5"/><text x="84.6799%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (9 samples, 0.03%)</title><rect x="84.4468%" y="197" width="0.0304%" height="15" fill="rgb(249,80,12)" fg:x="25041" fg:w="9"/><text x="84.6968%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (5 samples, 0.02%)</title><rect x="84.4805%" y="197" width="0.0169%" height="15" fill="rgb(221,65,9)" fg:x="25051" fg:w="5"/><text x="84.7305%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (11 samples, 0.04%)</title><rect x="84.5041%" y="197" width="0.0371%" height="15" fill="rgb(235,49,36)" fg:x="25058" fg:w="11"/><text x="84.7541%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d1d (6 samples, 0.02%)</title><rect x="84.5412%" y="197" width="0.0202%" height="15" fill="rgb(225,32,20)" fg:x="25069" fg:w="6"/><text x="84.7912%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d1f (6 samples, 0.02%)</title><rect x="84.5614%" y="197" width="0.0202%" height="15" fill="rgb(215,141,46)" fg:x="25075" fg:w="6"/><text x="84.8114%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (7 samples, 0.02%)</title><rect x="84.5817%" y="197" width="0.0236%" height="15" fill="rgb(250,160,47)" fg:x="25081" fg:w="7"/><text x="84.8317%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d2c (4 samples, 0.01%)</title><rect x="84.6053%" y="197" width="0.0135%" height="15" fill="rgb(216,222,40)" fg:x="25088" fg:w="4"/><text x="84.8553%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (7 samples, 0.02%)</title><rect x="84.6188%" y="197" width="0.0236%" height="15" fill="rgb(234,217,39)" fg:x="25092" fg:w="7"/><text x="84.8688%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (10 samples, 0.03%)</title><rect x="84.6424%" y="197" width="0.0337%" height="15" fill="rgb(207,178,40)" fg:x="25099" fg:w="10"/><text x="84.8924%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,050 samples, 10.29%)</title><rect x="74.4275%" y="213" width="10.2856%" height="15" fill="rgb(221,136,13)" fg:x="22070" fg:w="3050"/><text x="74.6775%" y="223.50">dateo_fun_remov..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.04%)</title><rect x="84.6761%" y="197" width="0.0371%" height="15" fill="rgb(249,199,10)" fg:x="25109" fg:w="11"/><text x="84.9261%" y="207.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$log (3 samples, 0.01%)</title><rect x="84.7132%" y="213" width="0.0101%" height="15" fill="rgb(249,222,13)" fg:x="25120" fg:w="3"/><text x="84.9632%" y="223.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (24 samples, 0.08%)</title><rect x="84.7233%" y="213" width="0.0809%" height="15" fill="rgb(244,185,38)" fg:x="25123" fg:w="24"/><text x="84.9733%" y="223.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (12 samples, 0.04%)</title><rect x="84.8042%" y="213" width="0.0405%" height="15" fill="rgb(236,202,9)" fg:x="25147" fg:w="12"/><text x="85.0542%" y="223.50"></text></g><g><title>dateo_fun_remover`__rdl_realloc (10 samples, 0.03%)</title><rect x="85.0336%" y="181" width="0.0337%" height="15" fill="rgb(250,229,37)" fg:x="25215" fg:w="10"/><text x="85.2836%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f78 (4 samples, 0.01%)</title><rect x="85.0875%" y="181" width="0.0135%" height="15" fill="rgb(206,174,23)" fg:x="25231" fg:w="4"/><text x="85.3375%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f7b (9 samples, 0.03%)</title><rect x="85.1010%" y="181" width="0.0304%" height="15" fill="rgb(211,33,43)" fg:x="25235" fg:w="9"/><text x="85.3510%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (61 samples, 0.21%)</title><rect x="85.1617%" y="181" width="0.2057%" height="15" fill="rgb(245,58,50)" fg:x="25253" fg:w="61"/><text x="85.4117%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b125 (3 samples, 0.01%)</title><rect x="85.3843%" y="181" width="0.0101%" height="15" fill="rgb(244,68,36)" fg:x="25319" fg:w="3"/><text x="85.6343%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b16b (4 samples, 0.01%)</title><rect x="85.4011%" y="181" width="0.0135%" height="15" fill="rgb(232,229,15)" fg:x="25324" fg:w="4"/><text x="85.6511%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b227 (3 samples, 0.01%)</title><rect x="85.4281%" y="181" width="0.0101%" height="15" fill="rgb(254,30,23)" fg:x="25332" fg:w="3"/><text x="85.6781%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c67b (3 samples, 0.01%)</title><rect x="85.4618%" y="165" width="0.0101%" height="15" fill="rgb(235,160,14)" fg:x="25342" fg:w="3"/><text x="85.7118%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a10f (3 samples, 0.01%)</title><rect x="85.5091%" y="149" width="0.0101%" height="15" fill="rgb(212,155,44)" fg:x="25356" fg:w="3"/><text x="85.7591%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (48 samples, 0.16%)</title><rect x="85.5698%" y="149" width="0.1619%" height="15" fill="rgb(226,2,50)" fg:x="25374" fg:w="48"/><text x="85.8198%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c84d (5 samples, 0.02%)</title><rect x="85.7721%" y="149" width="0.0169%" height="15" fill="rgb(234,177,6)" fg:x="25434" fg:w="5"/><text x="86.0221%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (4 samples, 0.01%)</title><rect x="85.7890%" y="133" width="0.0135%" height="15" fill="rgb(217,24,9)" fg:x="25439" fg:w="4"/><text x="86.0390%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (6 samples, 0.02%)</title><rect x="85.8126%" y="133" width="0.0202%" height="15" fill="rgb(220,13,46)" fg:x="25446" fg:w="6"/><text x="86.0626%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (4 samples, 0.01%)</title><rect x="85.8328%" y="133" width="0.0135%" height="15" fill="rgb(239,221,27)" fg:x="25452" fg:w="4"/><text x="86.0828%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (3 samples, 0.01%)</title><rect x="85.8463%" y="133" width="0.0101%" height="15" fill="rgb(222,198,25)" fg:x="25456" fg:w="3"/><text x="86.0963%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (5 samples, 0.02%)</title><rect x="85.8564%" y="133" width="0.0169%" height="15" fill="rgb(211,99,13)" fg:x="25459" fg:w="5"/><text x="86.1064%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (22 samples, 0.07%)</title><rect x="85.8733%" y="133" width="0.0742%" height="15" fill="rgb(232,111,31)" fg:x="25464" fg:w="22"/><text x="86.1233%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (3 samples, 0.01%)</title><rect x="85.9475%" y="133" width="0.0101%" height="15" fill="rgb(245,82,37)" fg:x="25486" fg:w="3"/><text x="86.1975%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (14 samples, 0.05%)</title><rect x="85.9576%" y="133" width="0.0472%" height="15" fill="rgb(227,149,46)" fg:x="25489" fg:w="14"/><text x="86.2076%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (3 samples, 0.01%)</title><rect x="86.0048%" y="133" width="0.0101%" height="15" fill="rgb(218,36,50)" fg:x="25503" fg:w="3"/><text x="86.2548%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (8 samples, 0.03%)</title><rect x="86.0149%" y="133" width="0.0270%" height="15" fill="rgb(226,80,48)" fg:x="25506" fg:w="8"/><text x="86.2649%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (3 samples, 0.01%)</title><rect x="86.0587%" y="133" width="0.0101%" height="15" fill="rgb(238,224,15)" fg:x="25519" fg:w="3"/><text x="86.3087%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (3 samples, 0.01%)</title><rect x="86.0689%" y="133" width="0.0101%" height="15" fill="rgb(241,136,10)" fg:x="25522" fg:w="3"/><text x="86.3189%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (3 samples, 0.01%)</title><rect x="86.0790%" y="133" width="0.0101%" height="15" fill="rgb(208,32,45)" fg:x="25525" fg:w="3"/><text x="86.3290%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (17 samples, 0.06%)</title><rect x="86.0925%" y="133" width="0.0573%" height="15" fill="rgb(207,135,9)" fg:x="25529" fg:w="17"/><text x="86.3425%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (5 samples, 0.02%)</title><rect x="86.1565%" y="133" width="0.0169%" height="15" fill="rgb(206,86,44)" fg:x="25548" fg:w="5"/><text x="86.4065%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (7 samples, 0.02%)</title><rect x="86.1903%" y="133" width="0.0236%" height="15" fill="rgb(245,177,15)" fg:x="25558" fg:w="7"/><text x="86.4403%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (3 samples, 0.01%)</title><rect x="86.2206%" y="133" width="0.0101%" height="15" fill="rgb(206,64,50)" fg:x="25567" fg:w="3"/><text x="86.4706%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (135 samples, 0.46%)</title><rect x="85.7890%" y="149" width="0.4553%" height="15" fill="rgb(234,36,40)" fg:x="25439" fg:w="135"/><text x="86.0390%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (13 samples, 0.04%)</title><rect x="86.2577%" y="149" width="0.0438%" height="15" fill="rgb(213,64,8)" fg:x="25578" fg:w="13"/><text x="86.5077%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.04%)</title><rect x="86.2577%" y="133" width="0.0438%" height="15" fill="rgb(210,75,36)" fg:x="25578" fg:w="13"/><text x="86.5077%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223700 (4 samples, 0.01%)</title><rect x="86.3049%" y="133" width="0.0135%" height="15" fill="rgb(229,88,21)" fg:x="25592" fg:w="4"/><text x="86.5549%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223758 (3 samples, 0.01%)</title><rect x="86.3454%" y="133" width="0.0101%" height="15" fill="rgb(252,204,47)" fg:x="25604" fg:w="3"/><text x="86.5954%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e3 (3 samples, 0.01%)</title><rect x="86.3555%" y="133" width="0.0101%" height="15" fill="rgb(208,77,27)" fg:x="25607" fg:w="3"/><text x="86.6055%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223829 (5 samples, 0.02%)</title><rect x="86.3825%" y="133" width="0.0169%" height="15" fill="rgb(221,76,26)" fg:x="25615" fg:w="5"/><text x="86.6325%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22387d (5 samples, 0.02%)</title><rect x="86.4162%" y="133" width="0.0169%" height="15" fill="rgb(225,139,18)" fg:x="25625" fg:w="5"/><text x="86.6662%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (36 samples, 0.12%)</title><rect x="86.4398%" y="133" width="0.1214%" height="15" fill="rgb(230,137,11)" fg:x="25632" fg:w="36"/><text x="86.6898%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238cd (4 samples, 0.01%)</title><rect x="86.5646%" y="133" width="0.0135%" height="15" fill="rgb(212,28,1)" fg:x="25669" fg:w="4"/><text x="86.8146%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238fc (4 samples, 0.01%)</title><rect x="86.5848%" y="133" width="0.0135%" height="15" fill="rgb(248,164,17)" fg:x="25675" fg:w="4"/><text x="86.8348%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (20 samples, 0.07%)</title><rect x="86.5983%" y="133" width="0.0674%" height="15" fill="rgb(222,171,42)" fg:x="25679" fg:w="20"/><text x="86.8483%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (20 samples, 0.07%)</title><rect x="86.5983%" y="117" width="0.0674%" height="15" fill="rgb(243,84,45)" fg:x="25679" fg:w="20"/><text x="86.8483%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (3 samples, 0.01%)</title><rect x="86.7096%" y="133" width="0.0101%" height="15" fill="rgb(252,49,23)" fg:x="25712" fg:w="3"/><text x="86.9596%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (8 samples, 0.03%)</title><rect x="86.7231%" y="133" width="0.0270%" height="15" fill="rgb(215,19,7)" fg:x="25716" fg:w="8"/><text x="86.9731%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (23 samples, 0.08%)</title><rect x="86.7636%" y="133" width="0.0776%" height="15" fill="rgb(238,81,41)" fg:x="25728" fg:w="23"/><text x="87.0136%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (166 samples, 0.56%)</title><rect x="86.3016%" y="149" width="0.5598%" height="15" fill="rgb(210,199,37)" fg:x="25591" fg:w="166"/><text x="86.5516%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c88c (4 samples, 0.01%)</title><rect x="86.8614%" y="149" width="0.0135%" height="15" fill="rgb(244,192,49)" fg:x="25757" fg:w="4"/><text x="87.1114%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f9 (3 samples, 0.01%)</title><rect x="86.8816%" y="149" width="0.0101%" height="15" fill="rgb(226,211,11)" fg:x="25763" fg:w="3"/><text x="87.1316%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (3 samples, 0.01%)</title><rect x="86.8917%" y="149" width="0.0101%" height="15" fill="rgb(236,162,54)" fg:x="25766" fg:w="3"/><text x="87.1417%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (430 samples, 1.45%)</title><rect x="85.4787%" y="165" width="1.4501%" height="15" fill="rgb(220,229,9)" fg:x="25347" fg:w="430"/><text x="85.7287%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.02%)</title><rect x="86.9086%" y="149" width="0.0202%" height="15" fill="rgb(250,87,22)" fg:x="25771" fg:w="6"/><text x="87.1586%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (448 samples, 1.51%)</title><rect x="85.4382%" y="181" width="1.5108%" height="15" fill="rgb(239,43,17)" fg:x="25335" fg:w="448"/><text x="85.6882%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (595 samples, 2.01%)</title><rect x="84.9627%" y="197" width="2.0065%" height="15" fill="rgb(231,177,25)" fg:x="25194" fg:w="595"/><text x="85.2127%" y="207.50">d..</text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (633 samples, 2.13%)</title><rect x="84.8447%" y="213" width="2.1347%" height="15" fill="rgb(219,179,1)" fg:x="25159" fg:w="633"/><text x="85.0947%" y="223.50">d..</text></g><g><title>libsystem_m.dylib`0x00007ff825f20470 (182 samples, 0.61%)</title><rect x="86.9861%" y="213" width="0.6138%" height="15" fill="rgb(238,219,53)" fg:x="25794" fg:w="182"/><text x="87.2361%" y="223.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (271 samples, 0.91%)</title><rect x="87.5999%" y="213" width="0.9139%" height="15" fill="rgb(232,167,36)" fg:x="25976" fg:w="271"/><text x="87.8499%" y="223.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$log (6 samples, 0.02%)</title><rect x="88.5138%" y="213" width="0.0202%" height="15" fill="rgb(244,19,51)" fg:x="26247" fg:w="6"/><text x="88.7638%" y="223.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$pow (4 samples, 0.01%)</title><rect x="88.5340%" y="213" width="0.0135%" height="15" fill="rgb(224,6,22)" fg:x="26253" fg:w="4"/><text x="88.7840%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (6 samples, 0.02%)</title><rect x="88.5644%" y="213" width="0.0202%" height="15" fill="rgb(224,145,5)" fg:x="26262" fg:w="6"/><text x="88.8144%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (19 samples, 0.06%)</title><rect x="88.5846%" y="213" width="0.0641%" height="15" fill="rgb(234,130,49)" fg:x="26268" fg:w="19"/><text x="88.8346%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (7 samples, 0.02%)</title><rect x="88.6588%" y="213" width="0.0236%" height="15" fill="rgb(254,6,2)" fg:x="26290" fg:w="7"/><text x="88.9088%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (3 samples, 0.01%)</title><rect x="88.6858%" y="213" width="0.0101%" height="15" fill="rgb(208,96,46)" fg:x="26298" fg:w="3"/><text x="88.9358%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (6 samples, 0.02%)</title><rect x="88.7128%" y="213" width="0.0202%" height="15" fill="rgb(239,3,39)" fg:x="26306" fg:w="6"/><text x="88.9628%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (3 samples, 0.01%)</title><rect x="88.7330%" y="213" width="0.0101%" height="15" fill="rgb(233,210,1)" fg:x="26312" fg:w="3"/><text x="88.9830%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (11 samples, 0.04%)</title><rect x="88.7465%" y="213" width="0.0371%" height="15" fill="rgb(244,137,37)" fg:x="26316" fg:w="11"/><text x="88.9965%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (9 samples, 0.03%)</title><rect x="88.8038%" y="213" width="0.0304%" height="15" fill="rgb(240,136,2)" fg:x="26333" fg:w="9"/><text x="89.0538%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (7 samples, 0.02%)</title><rect x="88.8342%" y="213" width="0.0236%" height="15" fill="rgb(239,18,37)" fg:x="26342" fg:w="7"/><text x="89.0842%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (8 samples, 0.03%)</title><rect x="88.8612%" y="213" width="0.0270%" height="15" fill="rgb(218,185,22)" fg:x="26350" fg:w="8"/><text x="89.1112%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (5 samples, 0.02%)</title><rect x="88.8949%" y="213" width="0.0169%" height="15" fill="rgb(225,218,4)" fg:x="26360" fg:w="5"/><text x="89.1449%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (9 samples, 0.03%)</title><rect x="88.9151%" y="213" width="0.0304%" height="15" fill="rgb(230,182,32)" fg:x="26366" fg:w="9"/><text x="89.1651%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (19 samples, 0.06%)</title><rect x="88.9556%" y="213" width="0.0641%" height="15" fill="rgb(242,56,43)" fg:x="26378" fg:w="19"/><text x="89.2056%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (10 samples, 0.03%)</title><rect x="89.0298%" y="213" width="0.0337%" height="15" fill="rgb(233,99,24)" fg:x="26400" fg:w="10"/><text x="89.2798%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (12 samples, 0.04%)</title><rect x="89.0635%" y="213" width="0.0405%" height="15" fill="rgb(234,209,42)" fg:x="26410" fg:w="12"/><text x="89.3135%" y="223.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,541 samples, 15.31%)</title><rect x="73.8273%" y="229" width="15.3138%" height="15" fill="rgb(227,7,12)" fg:x="21892" fg:w="4541"/><text x="74.0773%" y="239.50">dateo_fun_remover`&lt;allo..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (11 samples, 0.04%)</title><rect x="89.1040%" y="213" width="0.0371%" height="15" fill="rgb(245,203,43)" fg:x="26422" fg:w="11"/><text x="89.3540%" y="223.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (7 samples, 0.02%)</title><rect x="89.1478%" y="229" width="0.0236%" height="15" fill="rgb(238,205,33)" fg:x="26435" fg:w="7"/><text x="89.3978%" y="239.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (4,568 samples, 15.40%)</title><rect x="73.8070%" y="245" width="15.4048%" height="15" fill="rgb(231,56,7)" fg:x="21886" fg:w="4568"/><text x="74.0570%" y="255.50">dateo_fun_remover`dateo_..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (3 samples, 0.01%)</title><rect x="89.2220%" y="245" width="0.0101%" height="15" fill="rgb(244,186,29)" fg:x="26457" fg:w="3"/><text x="89.4720%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (3 samples, 0.01%)</title><rect x="89.2625%" y="245" width="0.0101%" height="15" fill="rgb(234,111,31)" fg:x="26469" fg:w="3"/><text x="89.5125%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (27 samples, 0.09%)</title><rect x="89.2793%" y="245" width="0.0911%" height="15" fill="rgb(241,149,10)" fg:x="26474" fg:w="27"/><text x="89.5293%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (18 samples, 0.06%)</title><rect x="89.3839%" y="245" width="0.0607%" height="15" fill="rgb(249,206,44)" fg:x="26505" fg:w="18"/><text x="89.6339%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (18 samples, 0.06%)</title><rect x="89.3839%" y="229" width="0.0607%" height="15" fill="rgb(251,153,30)" fg:x="26505" fg:w="18"/><text x="89.6339%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (17 samples, 0.06%)</title><rect x="89.4648%" y="245" width="0.0573%" height="15" fill="rgb(239,152,38)" fg:x="26529" fg:w="17"/><text x="89.7148%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (3 samples, 0.01%)</title><rect x="89.5221%" y="245" width="0.0101%" height="15" fill="rgb(249,139,47)" fg:x="26546" fg:w="3"/><text x="89.7721%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (5 samples, 0.02%)</title><rect x="89.5356%" y="245" width="0.0169%" height="15" fill="rgb(244,64,35)" fg:x="26550" fg:w="5"/><text x="89.7856%" y="255.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (5,833 samples, 19.67%)</title><rect x="69.8985%" y="261" width="19.6709%" height="15" fill="rgb(216,46,15)" fg:x="20727" fg:w="5833"/><text x="70.1485%" y="271.50">dateo_fun_remover`dateo_fun_rem..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (6 samples, 0.02%)</title><rect x="89.5694%" y="261" width="0.0202%" height="15" fill="rgb(250,74,19)" fg:x="26560" fg:w="6"/><text x="89.8194%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (14 samples, 0.05%)</title><rect x="89.5896%" y="261" width="0.0472%" height="15" fill="rgb(249,42,33)" fg:x="26566" fg:w="14"/><text x="89.8396%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (7 samples, 0.02%)</title><rect x="89.6435%" y="261" width="0.0236%" height="15" fill="rgb(242,149,17)" fg:x="26582" fg:w="7"/><text x="89.8935%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (6 samples, 0.02%)</title><rect x="89.6773%" y="261" width="0.0202%" height="15" fill="rgb(244,29,21)" fg:x="26592" fg:w="6"/><text x="89.9273%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (13 samples, 0.04%)</title><rect x="89.6975%" y="261" width="0.0438%" height="15" fill="rgb(220,130,37)" fg:x="26598" fg:w="13"/><text x="89.9475%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (17 samples, 0.06%)</title><rect x="89.7515%" y="261" width="0.0573%" height="15" fill="rgb(211,67,2)" fg:x="26614" fg:w="17"/><text x="90.0015%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (119 samples, 0.40%)</title><rect x="89.8155%" y="261" width="0.4013%" height="15" fill="rgb(235,68,52)" fg:x="26633" fg:w="119"/><text x="90.0655%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (119 samples, 0.40%)</title><rect x="89.8155%" y="245" width="0.4013%" height="15" fill="rgb(246,142,3)" fg:x="26633" fg:w="119"/><text x="90.0655%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (119 samples, 0.40%)</title><rect x="89.8155%" y="229" width="0.4013%" height="15" fill="rgb(241,25,7)" fg:x="26633" fg:w="119"/><text x="90.0655%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (119 samples, 0.40%)</title><rect x="89.8155%" y="213" width="0.4013%" height="15" fill="rgb(242,119,39)" fg:x="26633" fg:w="119"/><text x="90.0655%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (13 samples, 0.04%)</title><rect x="90.2168%" y="261" width="0.0438%" height="15" fill="rgb(241,98,45)" fg:x="26752" fg:w="13"/><text x="90.4668%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (8 samples, 0.03%)</title><rect x="90.2641%" y="261" width="0.0270%" height="15" fill="rgb(254,28,30)" fg:x="26766" fg:w="8"/><text x="90.5141%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (5 samples, 0.02%)</title><rect x="90.2978%" y="261" width="0.0169%" height="15" fill="rgb(241,142,54)" fg:x="26776" fg:w="5"/><text x="90.5478%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (6 samples, 0.02%)</title><rect x="90.3146%" y="261" width="0.0202%" height="15" fill="rgb(222,85,15)" fg:x="26781" fg:w="6"/><text x="90.5646%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (3 samples, 0.01%)</title><rect x="90.3349%" y="261" width="0.0101%" height="15" fill="rgb(210,85,47)" fg:x="26787" fg:w="3"/><text x="90.5849%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (5 samples, 0.02%)</title><rect x="90.3450%" y="261" width="0.0169%" height="15" fill="rgb(224,206,25)" fg:x="26790" fg:w="5"/><text x="90.5950%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237dd (3 samples, 0.01%)</title><rect x="90.3652%" y="261" width="0.0101%" height="15" fill="rgb(243,201,19)" fg:x="26796" fg:w="3"/><text x="90.6152%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (4 samples, 0.01%)</title><rect x="90.3753%" y="261" width="0.0135%" height="15" fill="rgb(236,59,4)" fg:x="26799" fg:w="4"/><text x="90.6253%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (6 samples, 0.02%)</title><rect x="90.3888%" y="261" width="0.0202%" height="15" fill="rgb(254,179,45)" fg:x="26803" fg:w="6"/><text x="90.6388%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (8 samples, 0.03%)</title><rect x="90.4158%" y="261" width="0.0270%" height="15" fill="rgb(226,14,10)" fg:x="26811" fg:w="8"/><text x="90.6658%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223820 (3 samples, 0.01%)</title><rect x="90.4596%" y="261" width="0.0101%" height="15" fill="rgb(244,27,41)" fg:x="26824" fg:w="3"/><text x="90.7096%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (4 samples, 0.01%)</title><rect x="90.4698%" y="261" width="0.0135%" height="15" fill="rgb(235,35,32)" fg:x="26827" fg:w="4"/><text x="90.7198%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (3 samples, 0.01%)</title><rect x="90.4967%" y="261" width="0.0101%" height="15" fill="rgb(218,68,31)" fg:x="26835" fg:w="3"/><text x="90.7467%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (5 samples, 0.02%)</title><rect x="90.5069%" y="261" width="0.0169%" height="15" fill="rgb(207,120,37)" fg:x="26838" fg:w="5"/><text x="90.7569%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223849 (3 samples, 0.01%)</title><rect x="90.5237%" y="261" width="0.0101%" height="15" fill="rgb(227,98,0)" fg:x="26843" fg:w="3"/><text x="90.7737%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223870 (3 samples, 0.01%)</title><rect x="90.5440%" y="261" width="0.0101%" height="15" fill="rgb(207,7,3)" fg:x="26849" fg:w="3"/><text x="90.7940%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (5 samples, 0.02%)</title><rect x="90.5608%" y="261" width="0.0169%" height="15" fill="rgb(206,98,19)" fg:x="26854" fg:w="5"/><text x="90.8108%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (6 samples, 0.02%)</title><rect x="90.5811%" y="261" width="0.0202%" height="15" fill="rgb(217,5,26)" fg:x="26860" fg:w="6"/><text x="90.8311%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (147 samples, 0.50%)</title><rect x="90.6047%" y="261" width="0.4957%" height="15" fill="rgb(235,190,38)" fg:x="26867" fg:w="147"/><text x="90.8547%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (6 samples, 0.02%)</title><rect x="91.1071%" y="261" width="0.0202%" height="15" fill="rgb(247,86,24)" fg:x="27016" fg:w="6"/><text x="91.3571%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (3 samples, 0.01%)</title><rect x="91.1274%" y="261" width="0.0101%" height="15" fill="rgb(205,101,16)" fg:x="27022" fg:w="3"/><text x="91.3774%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (8 samples, 0.03%)</title><rect x="91.1375%" y="261" width="0.0270%" height="15" fill="rgb(246,168,33)" fg:x="27025" fg:w="8"/><text x="91.3875%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (46 samples, 0.16%)</title><rect x="91.1645%" y="261" width="0.1551%" height="15" fill="rgb(231,114,1)" fg:x="27033" fg:w="46"/><text x="91.4145%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (46 samples, 0.16%)</title><rect x="91.1645%" y="245" width="0.1551%" height="15" fill="rgb(207,184,53)" fg:x="27033" fg:w="46"/><text x="91.4145%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223908 (5 samples, 0.02%)</title><rect x="91.3263%" y="261" width="0.0169%" height="15" fill="rgb(224,95,51)" fg:x="27081" fg:w="5"/><text x="91.5763%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (3 samples, 0.01%)</title><rect x="91.3432%" y="261" width="0.0101%" height="15" fill="rgb(212,188,45)" fg:x="27086" fg:w="3"/><text x="91.5932%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (22 samples, 0.07%)</title><rect x="91.3567%" y="261" width="0.0742%" height="15" fill="rgb(223,154,38)" fg:x="27090" fg:w="22"/><text x="91.6067%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223939 (6 samples, 0.02%)</title><rect x="91.4410%" y="261" width="0.0202%" height="15" fill="rgb(251,22,52)" fg:x="27115" fg:w="6"/><text x="91.6910%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223945 (3 samples, 0.01%)</title><rect x="91.4612%" y="261" width="0.0101%" height="15" fill="rgb(229,209,22)" fg:x="27121" fg:w="3"/><text x="91.7112%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22394d (5 samples, 0.02%)</title><rect x="91.4714%" y="261" width="0.0169%" height="15" fill="rgb(234,138,34)" fg:x="27124" fg:w="5"/><text x="91.7214%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (37 samples, 0.12%)</title><rect x="91.5186%" y="261" width="0.1248%" height="15" fill="rgb(212,95,11)" fg:x="27138" fg:w="37"/><text x="91.7686%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (36 samples, 0.12%)</title><rect x="91.6433%" y="261" width="0.1214%" height="15" fill="rgb(240,179,47)" fg:x="27175" fg:w="36"/><text x="91.8933%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (3 samples, 0.01%)</title><rect x="91.7749%" y="261" width="0.0101%" height="15" fill="rgb(240,163,11)" fg:x="27214" fg:w="3"/><text x="92.0249%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (39 samples, 0.13%)</title><rect x="91.7850%" y="261" width="0.1315%" height="15" fill="rgb(236,37,12)" fg:x="27217" fg:w="39"/><text x="92.0350%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (7 samples, 0.02%)</title><rect x="91.9300%" y="261" width="0.0236%" height="15" fill="rgb(232,164,16)" fg:x="27260" fg:w="7"/><text x="92.1800%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (7 samples, 0.02%)</title><rect x="91.9536%" y="261" width="0.0236%" height="15" fill="rgb(244,205,15)" fg:x="27267" fg:w="7"/><text x="92.2036%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (6 samples, 0.02%)</title><rect x="91.9772%" y="261" width="0.0202%" height="15" fill="rgb(223,117,47)" fg:x="27274" fg:w="6"/><text x="92.2272%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (9 samples, 0.03%)</title><rect x="91.9974%" y="261" width="0.0304%" height="15" fill="rgb(244,107,35)" fg:x="27280" fg:w="9"/><text x="92.2474%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (5 samples, 0.02%)</title><rect x="92.0312%" y="261" width="0.0169%" height="15" fill="rgb(205,140,8)" fg:x="27290" fg:w="5"/><text x="92.2812%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (10 samples, 0.03%)</title><rect x="92.0480%" y="261" width="0.0337%" height="15" fill="rgb(228,84,46)" fg:x="27295" fg:w="10"/><text x="92.2980%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (7 samples, 0.02%)</title><rect x="92.0817%" y="261" width="0.0236%" height="15" fill="rgb(254,188,9)" fg:x="27305" fg:w="7"/><text x="92.3317%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="92.1054%" y="261" width="0.0169%" height="15" fill="rgb(206,112,54)" fg:x="27312" fg:w="5"/><text x="92.3554%" y="271.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (17,645 samples, 59.50%)</title><rect x="40.2826%" y="277" width="59.5049%" height="15" fill="rgb(216,84,49)" fg:x="11945" fg:w="17645"/><text x="40.5326%" y="287.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2,273 samples, 7.67%)</title><rect x="92.1222%" y="261" width="7.6653%" height="15" fill="rgb(214,194,35)" fg:x="27317" fg:w="2273"/><text x="92.3722%" y="271.50">libsystem_..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (12 samples, 0.04%)</title><rect x="99.7875%" y="277" width="0.0405%" height="15" fill="rgb(249,28,3)" fg:x="29590" fg:w="12"/><text x="100.0375%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (5 samples, 0.02%)</title><rect x="99.8280%" y="277" width="0.0169%" height="15" fill="rgb(222,56,52)" fg:x="29602" fg:w="5"/><text x="100.0780%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (4 samples, 0.01%)</title><rect x="99.8449%" y="277" width="0.0135%" height="15" fill="rgb(245,217,50)" fg:x="29607" fg:w="4"/><text x="100.0949%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (4 samples, 0.01%)</title><rect x="99.8617%" y="277" width="0.0135%" height="15" fill="rgb(213,201,24)" fg:x="29612" fg:w="4"/><text x="100.1117%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (4 samples, 0.01%)</title><rect x="99.8853%" y="277" width="0.0135%" height="15" fill="rgb(248,116,28)" fg:x="29619" fg:w="4"/><text x="100.1353%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e6c (3 samples, 0.01%)</title><rect x="99.9022%" y="277" width="0.0101%" height="15" fill="rgb(219,72,43)" fg:x="29624" fg:w="3"/><text x="100.1522%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (8 samples, 0.03%)</title><rect x="99.9123%" y="277" width="0.0270%" height="15" fill="rgb(209,138,14)" fg:x="29627" fg:w="8"/><text x="100.1623%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (4 samples, 0.01%)</title><rect x="99.9528%" y="277" width="0.0135%" height="15" fill="rgb(222,18,33)" fg:x="29639" fg:w="4"/><text x="100.2028%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (5 samples, 0.02%)</title><rect x="99.9663%" y="277" width="0.0169%" height="15" fill="rgb(213,199,7)" fg:x="29643" fg:w="5"/><text x="100.2163%" y="287.50"></text></g><g><title>all (29,653 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(250,110,10)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="431.50"></text></g><g><title>dyld`start (29,653 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="415.50">dyld`start</text></g><g><title>dateo_fun_remover`main (29,653 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(206,91,31)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="399.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (29,653 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="383.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (29,653 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(225,148,7)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="367.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (29,653 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(220,160,43)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="351.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (29,653 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(213,52,39)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="335.50">dateo_fun_remover`dateo_fun_remover::main</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (29,653 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(243,137,7)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="319.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (29,653 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(230,79,13)" fg:x="0" fg:w="29653"/><text x="0.2500%" y="303.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (5 samples, 0.02%)</title><rect x="99.9831%" y="277" width="0.0169%" height="15" fill="rgb(247,105,23)" fg:x="29648" fg:w="5"/><text x="100.2331%" y="287.50"></text></g></svg></svg>