<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="56409"><g><title>libsystem_malloc.dylib`0x7ff81a20b6d4 (6 samples, 0.01%)</title><rect x="0.1418%" y="85" width="0.0106%" height="15" fill="rgb(227,0,7)" fg:x="80" fg:w="6"/><text x="0.3918%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b7de (9 samples, 0.02%)</title><rect x="0.1542%" y="85" width="0.0160%" height="15" fill="rgb(217,0,24)" fg:x="87" fg:w="9"/><text x="0.4042%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a464 (22 samples, 0.04%)</title><rect x="0.1347%" y="101" width="0.0390%" height="15" fill="rgb(221,193,54)" fg:x="76" fg:w="22"/><text x="0.3847%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c7a0 (24 samples, 0.04%)</title><rect x="0.1347%" y="117" width="0.0425%" height="15" fill="rgb(248,212,6)" fg:x="76" fg:w="24"/><text x="0.3847%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (9 samples, 0.02%)</title><rect x="0.1790%" y="117" width="0.0160%" height="15" fill="rgb(208,68,35)" fg:x="101" fg:w="9"/><text x="0.4290%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (40 samples, 0.07%)</title><rect x="0.1259%" y="133" width="0.0709%" height="15" fill="rgb(232,128,0)" fg:x="71" fg:w="40"/><text x="0.3759%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.10%)</title><rect x="0.0975%" y="181" width="0.1010%" height="15" fill="rgb(207,160,47)" fg:x="55" fg:w="57"/><text x="0.3475%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (52 samples, 0.09%)</title><rect x="0.1064%" y="165" width="0.0922%" height="15" fill="rgb(228,23,34)" fg:x="60" fg:w="52"/><text x="0.3564%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (44 samples, 0.08%)</title><rect x="0.1205%" y="149" width="0.0780%" height="15" fill="rgb(218,30,26)" fg:x="68" fg:w="44"/><text x="0.3705%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20e58d (7 samples, 0.01%)</title><rect x="0.2376%" y="165" width="0.0124%" height="15" fill="rgb(220,122,19)" fg:x="134" fg:w="7"/><text x="0.4876%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20e006 (14 samples, 0.02%)</title><rect x="0.2287%" y="181" width="0.0248%" height="15" fill="rgb(250,228,42)" fg:x="129" fg:w="14"/><text x="0.4787%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (132 samples, 0.23%)</title><rect x="0.0496%" y="197" width="0.2340%" height="15" fill="rgb(240,193,28)" fg:x="28" fg:w="132"/><text x="0.2996%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::bloom::BloomFilter&lt;R,S&gt; as bloom::ASMS&gt;::insert (6 samples, 0.01%)</title><rect x="0.2836%" y="197" width="0.0106%" height="15" fill="rgb(216,20,37)" fg:x="160" fg:w="6"/><text x="0.5336%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::hashing::HashIter as core::iter::traits::iterator::Iterator&gt;::next (686 samples, 1.22%)</title><rect x="0.2943%" y="197" width="1.2161%" height="15" fill="rgb(206,188,39)" fg:x="166" fg:w="686"/><text x="0.5443%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.04%)</title><rect x="1.5104%" y="197" width="0.0355%" height="15" fill="rgb(217,207,13)" fg:x="852" fg:w="20"/><text x="1.7604%" y="207.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (22 samples, 0.04%)</title><rect x="1.5459%" y="197" width="0.0390%" height="15" fill="rgb(231,73,38)" fg:x="872" fg:w="22"/><text x="1.7959%" y="207.50"></text></g><g><title>dateo_fun_remover`bloom::hashing::HashIter::from (90 samples, 0.16%)</title><rect x="1.5990%" y="197" width="0.1595%" height="15" fill="rgb(225,20,46)" fg:x="902" fg:w="90"/><text x="1.8490%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (6 samples, 0.01%)</title><rect x="1.8082%" y="149" width="0.0106%" height="15" fill="rgb(210,31,41)" fg:x="1020" fg:w="6"/><text x="2.0582%" y="159.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (30 samples, 0.05%)</title><rect x="1.7710%" y="165" width="0.0532%" height="15" fill="rgb(221,200,47)" fg:x="999" fg:w="30"/><text x="2.0210%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (7 samples, 0.01%)</title><rect x="1.8330%" y="165" width="0.0124%" height="15" fill="rgb(226,26,5)" fg:x="1034" fg:w="7"/><text x="2.0830%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (8 samples, 0.01%)</title><rect x="1.8614%" y="165" width="0.0142%" height="15" fill="rgb(249,33,26)" fg:x="1050" fg:w="8"/><text x="2.1114%" y="175.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (61 samples, 0.11%)</title><rect x="1.7692%" y="181" width="0.1081%" height="15" fill="rgb(235,183,28)" fg:x="998" fg:w="61"/><text x="2.0192%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (16 samples, 0.03%)</title><rect x="1.9004%" y="181" width="0.0284%" height="15" fill="rgb(221,5,38)" fg:x="1072" fg:w="16"/><text x="2.1504%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (6 samples, 0.01%)</title><rect x="1.9341%" y="181" width="0.0106%" height="15" fill="rgb(247,18,42)" fg:x="1091" fg:w="6"/><text x="2.1841%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="1.9341%" y="165" width="0.0106%" height="15" fill="rgb(241,131,45)" fg:x="1091" fg:w="6"/><text x="2.1841%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (6 samples, 0.01%)</title><rect x="1.9571%" y="181" width="0.0106%" height="15" fill="rgb(249,31,29)" fg:x="1104" fg:w="6"/><text x="2.2071%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (6 samples, 0.01%)</title><rect x="1.9695%" y="181" width="0.0106%" height="15" fill="rgb(225,111,53)" fg:x="1111" fg:w="6"/><text x="2.2195%" y="191.50"></text></g><g><title>dateo_fun_remover`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dateo_fun_remover::finder::atom::Atom&gt;&gt; (131 samples, 0.23%)</title><rect x="1.7586%" y="197" width="0.2322%" height="15" fill="rgb(238,160,17)" fg:x="992" fg:w="131"/><text x="2.0086%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (13 samples, 0.02%)</title><rect x="2.1202%" y="117" width="0.0230%" height="15" fill="rgb(214,148,48)" fg:x="1196" fg:w="13"/><text x="2.3702%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_if_limit (9 samples, 0.02%)</title><rect x="2.1273%" y="101" width="0.0160%" height="15" fill="rgb(232,36,49)" fg:x="1200" fg:w="9"/><text x="2.3773%" y="111.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (25 samples, 0.04%)</title><rect x="2.1078%" y="133" width="0.0443%" height="15" fill="rgb(209,103,24)" fg:x="1189" fg:w="25"/><text x="2.3578%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_if_limit (13 samples, 0.02%)</title><rect x="2.1521%" y="133" width="0.0230%" height="15" fill="rgb(229,88,8)" fg:x="1214" fg:w="13"/><text x="2.4021%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (59 samples, 0.10%)</title><rect x="2.0777%" y="149" width="0.1046%" height="15" fill="rgb(213,181,19)" fg:x="1172" fg:w="59"/><text x="2.3277%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_if_limit (12 samples, 0.02%)</title><rect x="2.1823%" y="149" width="0.0213%" height="15" fill="rgb(254,191,54)" fg:x="1231" fg:w="12"/><text x="2.4323%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (88 samples, 0.16%)</title><rect x="2.0582%" y="165" width="0.1560%" height="15" fill="rgb(241,83,37)" fg:x="1161" fg:w="88"/><text x="2.3082%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_if_limit (6 samples, 0.01%)</title><rect x="2.2142%" y="165" width="0.0106%" height="15" fill="rgb(233,36,39)" fg:x="1249" fg:w="6"/><text x="2.4642%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::eval (117 samples, 0.21%)</title><rect x="2.0316%" y="181" width="0.2074%" height="15" fill="rgb(226,3,54)" fg:x="1146" fg:w="117"/><text x="2.2816%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::test (143 samples, 0.25%)</title><rect x="1.9908%" y="197" width="0.2535%" height="15" fill="rgb(245,192,40)" fg:x="1123" fg:w="143"/><text x="2.2408%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::hashing::HashIter as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.12%)</title><rect x="45.4839%" y="165" width="0.1241%" height="15" fill="rgb(238,167,29)" fg:x="25657" fg:w="70"/><text x="45.7339%" y="175.50"></text></g><g><title>dateo_fun_remover`core::hash::Hasher::write_u64 (94 samples, 0.17%)</title><rect x="45.8650%" y="149" width="0.1666%" height="15" fill="rgb(232,182,51)" fg:x="25872" fg:w="94"/><text x="46.1150%" y="159.50"></text></g><g><title>dateo_fun_remover`bloom::hashing::HashIter::from (270 samples, 0.48%)</title><rect x="45.6080%" y="165" width="0.4786%" height="15" fill="rgb(231,60,39)" fg:x="25727" fg:w="270"/><text x="45.8580%" y="175.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (31 samples, 0.05%)</title><rect x="46.0317%" y="149" width="0.0550%" height="15" fill="rgb(208,69,12)" fg:x="25966" fg:w="31"/><text x="46.2817%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;bloom::bloom::BloomFilter&lt;R,S&gt; as bloom::ASMS&gt;::insert (1,084 samples, 1.92%)</title><rect x="44.1791%" y="181" width="1.9217%" height="15" fill="rgb(235,93,37)" fg:x="24921" fg:w="1084"/><text x="44.4291%" y="191.50">d..</text></g><g><title>dateo_fun_remover`&lt;bloom::hashing::HashIter as core::iter::traits::iterator::Iterator&gt;::next (756 samples, 1.34%)</title><rect x="46.1008%" y="181" width="1.3402%" height="15" fill="rgb(213,116,39)" fg:x="26005" fg:w="756"/><text x="46.3508%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (13 samples, 0.02%)</title><rect x="47.4446%" y="117" width="0.0230%" height="15" fill="rgb(222,207,29)" fg:x="26763" fg:w="13"/><text x="47.6946%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="47.4446%" y="101" width="0.0230%" height="15" fill="rgb(206,96,30)" fg:x="26763" fg:w="13"/><text x="47.6946%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.03%)</title><rect x="47.4410%" y="181" width="0.0284%" height="15" fill="rgb(218,138,4)" fg:x="26761" fg:w="16"/><text x="47.6910%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (16 samples, 0.03%)</title><rect x="47.4410%" y="165" width="0.0284%" height="15" fill="rgb(250,191,14)" fg:x="26761" fg:w="16"/><text x="47.6910%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (16 samples, 0.03%)</title><rect x="47.4410%" y="149" width="0.0284%" height="15" fill="rgb(239,60,40)" fg:x="26761" fg:w="16"/><text x="47.6910%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (16 samples, 0.03%)</title><rect x="47.4410%" y="133" width="0.0284%" height="15" fill="rgb(206,27,48)" fg:x="26761" fg:w="16"/><text x="47.6910%" y="143.50"></text></g><g><title>dateo_fun_remover`core::hash::Hasher::write_u64 (2,563 samples, 4.54%)</title><rect x="56.6718%" y="165" width="4.5436%" height="15" fill="rgb(225,35,8)" fg:x="31968" fg:w="2563"/><text x="56.9218%" y="175.50">dateo..</text></g><g><title>dateo_fun_remover`bloom::hashing::HashIter::from (8,820 samples, 15.64%)</title><rect x="47.4711%" y="181" width="15.6358%" height="15" fill="rgb(250,213,24)" fg:x="26778" fg:w="8820"/><text x="47.7211%" y="191.50">dateo_fun_remover`bloom:..</text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (1,067 samples, 1.89%)</title><rect x="61.2154%" y="165" width="1.8915%" height="15" fill="rgb(247,123,22)" fg:x="34531" fg:w="1067"/><text x="61.4654%" y="175.50">d..</text></g><g><title>dateo_fun_remover`core::hash::Hasher::write_u64 (118 samples, 0.21%)</title><rect x="63.1070%" y="181" width="0.2092%" height="15" fill="rgb(231,138,38)" fg:x="35598" fg:w="118"/><text x="63.3570%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (356 samples, 0.63%)</title><rect x="63.3161%" y="181" width="0.6311%" height="15" fill="rgb(231,145,46)" fg:x="35716" fg:w="356"/><text x="63.5661%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (42 samples, 0.07%)</title><rect x="64.2132%" y="165" width="0.0745%" height="15" fill="rgb(251,118,11)" fg:x="36222" fg:w="42"/><text x="64.4632%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (12 samples, 0.02%)</title><rect x="64.2876%" y="165" width="0.0213%" height="15" fill="rgb(217,147,25)" fg:x="36264" fg:w="12"/><text x="64.5376%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="64.2929%" y="149" width="0.0160%" height="15" fill="rgb(247,81,37)" fg:x="36267" fg:w="9"/><text x="64.5429%" y="159.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (6 samples, 0.01%)</title><rect x="64.3089%" y="165" width="0.0106%" height="15" fill="rgb(209,12,38)" fg:x="36276" fg:w="6"/><text x="64.5589%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (215 samples, 0.38%)</title><rect x="63.9472%" y="181" width="0.3811%" height="15" fill="rgb(227,1,9)" fg:x="36072" fg:w="215"/><text x="64.1972%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (18 samples, 0.03%)</title><rect x="64.3284%" y="181" width="0.0319%" height="15" fill="rgb(248,47,43)" fg:x="36287" fg:w="18"/><text x="64.5784%" y="191.50"></text></g><g><title>dateo_fun_remover`num_traits::float::integer_decode_f64 (109 samples, 0.19%)</title><rect x="64.3603%" y="181" width="0.1932%" height="15" fill="rgb(221,10,30)" fg:x="36305" fg:w="109"/><text x="64.6103%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="64.5535%" y="165" width="0.0142%" height="15" fill="rgb(210,229,1)" fg:x="36414" fg:w="8"/><text x="64.8035%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects (35,157 samples, 62.33%)</title><rect x="2.2479%" y="197" width="62.3252%" height="15" fill="rgb(222,148,37)" fg:x="1268" fg:w="35157"/><text x="2.4979%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::find_val_intersects</text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (11 samples, 0.02%)</title><rect x="64.5535%" y="181" width="0.0195%" height="15" fill="rgb(234,67,33)" fg:x="36414" fg:w="11"/><text x="64.8035%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (25 samples, 0.04%)</title><rect x="64.5908%" y="181" width="0.0443%" height="15" fill="rgb(247,98,35)" fg:x="36435" fg:w="25"/><text x="64.8408%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (6 samples, 0.01%)</title><rect x="64.6617%" y="149" width="0.0106%" height="15" fill="rgb(247,138,52)" fg:x="36475" fg:w="6"/><text x="64.9117%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (29 samples, 0.05%)</title><rect x="64.6493%" y="165" width="0.0514%" height="15" fill="rgb(213,79,30)" fg:x="36468" fg:w="29"/><text x="64.8993%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.02%)</title><rect x="64.7060%" y="165" width="0.0248%" height="15" fill="rgb(246,177,23)" fg:x="36500" fg:w="14"/><text x="64.9560%" y="175.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="64.7095%" y="149" width="0.0213%" height="15" fill="rgb(230,62,27)" fg:x="36502" fg:w="12"/><text x="64.9595%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (57 samples, 0.10%)</title><rect x="64.6351%" y="181" width="0.1010%" height="15" fill="rgb(216,154,8)" fg:x="36460" fg:w="57"/><text x="64.8851%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (21 samples, 0.04%)</title><rect x="64.7361%" y="181" width="0.0372%" height="15" fill="rgb(244,35,45)" fg:x="36517" fg:w="21"/><text x="64.9861%" y="191.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.03%)</title><rect x="64.7468%" y="165" width="0.0266%" height="15" fill="rgb(251,115,12)" fg:x="36523" fg:w="15"/><text x="64.9968%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom (117 samples, 0.21%)</title><rect x="64.5730%" y="197" width="0.2074%" height="15" fill="rgb(240,54,50)" fg:x="36425" fg:w="117"/><text x="64.8230%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (24 samples, 0.04%)</title><rect x="64.8460%" y="165" width="0.0425%" height="15" fill="rgb(233,84,52)" fg:x="36579" fg:w="24"/><text x="65.0960%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (8 samples, 0.01%)</title><rect x="64.8744%" y="149" width="0.0142%" height="15" fill="rgb(207,117,47)" fg:x="36595" fg:w="8"/><text x="65.1244%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::fill_map_rec (63 samples, 0.11%)</title><rect x="64.7804%" y="197" width="0.1117%" height="15" fill="rgb(249,43,39)" fg:x="36542" fg:w="63"/><text x="65.0304%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (39 samples, 0.07%)</title><rect x="64.8230%" y="181" width="0.0691%" height="15" fill="rgb(209,38,44)" fg:x="36566" fg:w="39"/><text x="65.0730%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (6 samples, 0.01%)</title><rect x="64.9329%" y="165" width="0.0106%" height="15" fill="rgb(236,212,23)" fg:x="36628" fg:w="6"/><text x="65.1829%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (24 samples, 0.04%)</title><rect x="64.9187%" y="181" width="0.0425%" height="15" fill="rgb(242,79,21)" fg:x="36620" fg:w="24"/><text x="65.1687%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::atom::Atom::new_express (22 samples, 0.04%)</title><rect x="65.0074%" y="165" width="0.0390%" height="15" fill="rgb(211,96,35)" fg:x="36670" fg:w="22"/><text x="65.2574%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (7 samples, 0.01%)</title><rect x="65.1102%" y="117" width="0.0124%" height="15" fill="rgb(253,215,40)" fg:x="36728" fg:w="7"/><text x="65.3602%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;dateo_fun_remover::finder::atom::Atom as core::clone::Clone&gt;::clone (33 samples, 0.06%)</title><rect x="65.0694%" y="133" width="0.0585%" height="15" fill="rgb(211,81,21)" fg:x="36705" fg:w="33"/><text x="65.3194%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;dateo_fun_remover::finder::atom::Atom as core::clone::Clone&gt;::clone (71 samples, 0.13%)</title><rect x="65.0534%" y="149" width="0.1259%" height="15" fill="rgb(208,190,38)" fg:x="36696" fg:w="71"/><text x="65.3034%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (81 samples, 0.14%)</title><rect x="65.0499%" y="165" width="0.1436%" height="15" fill="rgb(235,213,38)" fg:x="36694" fg:w="81"/><text x="65.2999%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (121 samples, 0.21%)</title><rect x="64.9825%" y="181" width="0.2145%" height="15" fill="rgb(237,122,38)" fg:x="36656" fg:w="121"/><text x="65.2325%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::val_to_atom_rev::rec (175 samples, 0.31%)</title><rect x="64.8921%" y="197" width="0.3102%" height="15" fill="rgb(244,218,35)" fg:x="36605" fg:w="175"/><text x="65.1421%" y="207.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.10%)</title><rect x="66.8209%" y="181" width="0.0993%" height="15" fill="rgb(240,68,47)" fg:x="37693" fg:w="56"/><text x="67.0709%" y="191.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,117 samples, 3.75%)</title><rect x="66.9202%" y="181" width="3.7529%" height="15" fill="rgb(210,16,53)" fg:x="37749" fg:w="2117"/><text x="67.1702%" y="191.50">date..</text></g><g><title>dateo_fun_remover`__rdl_dealloc (25 samples, 0.04%)</title><rect x="70.6802%" y="181" width="0.0443%" height="15" fill="rgb(235,124,12)" fg:x="39870" fg:w="25"/><text x="70.9302%" y="191.50"></text></g><g><title>dateo_fun_remover`__rust_dealloc (10 samples, 0.02%)</title><rect x="70.7245%" y="181" width="0.0177%" height="15" fill="rgb(224,169,11)" fg:x="39895" fg:w="10"/><text x="70.9745%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d794 (11 samples, 0.02%)</title><rect x="70.7440%" y="117" width="0.0195%" height="15" fill="rgb(250,166,2)" fg:x="39906" fg:w="11"/><text x="70.9940%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (11 samples, 0.02%)</title><rect x="70.7440%" y="101" width="0.0195%" height="15" fill="rgb(242,216,29)" fg:x="39906" fg:w="11"/><text x="70.9940%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.02%)</title><rect x="70.7440%" y="85" width="0.0195%" height="15" fill="rgb(230,116,27)" fg:x="39906" fg:w="11"/><text x="70.9940%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.14%)</title><rect x="70.7423%" y="181" width="0.1418%" height="15" fill="rgb(228,99,48)" fg:x="39905" fg:w="80"/><text x="70.9923%" y="191.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (80 samples, 0.14%)</title><rect x="70.7423%" y="165" width="0.1418%" height="15" fill="rgb(253,11,6)" fg:x="39905" fg:w="80"/><text x="70.9923%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (80 samples, 0.14%)</title><rect x="70.7423%" y="149" width="0.1418%" height="15" fill="rgb(247,143,39)" fg:x="39905" fg:w="80"/><text x="70.9923%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (80 samples, 0.14%)</title><rect x="70.7423%" y="133" width="0.1418%" height="15" fill="rgb(236,97,10)" fg:x="39905" fg:w="80"/><text x="70.9923%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7b3 (65 samples, 0.12%)</title><rect x="70.7688%" y="117" width="0.1152%" height="15" fill="rgb(233,208,19)" fg:x="39920" fg:w="65"/><text x="71.0188%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (65 samples, 0.12%)</title><rect x="70.7688%" y="101" width="0.1152%" height="15" fill="rgb(216,164,2)" fg:x="39920" fg:w="65"/><text x="71.0188%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (65 samples, 0.12%)</title><rect x="70.7688%" y="85" width="0.1152%" height="15" fill="rgb(220,129,5)" fg:x="39920" fg:w="65"/><text x="71.0188%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (65 samples, 0.12%)</title><rect x="70.7688%" y="69" width="0.1152%" height="15" fill="rgb(242,17,10)" fg:x="39920" fg:w="65"/><text x="71.0188%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (65 samples, 0.12%)</title><rect x="70.7688%" y="53" width="0.1152%" height="15" fill="rgb(242,107,0)" fg:x="39920" fg:w="65"/><text x="71.0188%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (8 samples, 0.01%)</title><rect x="70.8929%" y="101" width="0.0142%" height="15" fill="rgb(251,28,31)" fg:x="39990" fg:w="8"/><text x="71.1429%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="70.8929%" y="85" width="0.0142%" height="15" fill="rgb(233,223,10)" fg:x="39990" fg:w="8"/><text x="71.1429%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="70.8912%" y="165" width="0.0177%" height="15" fill="rgb(215,21,27)" fg:x="39989" fg:w="10"/><text x="71.1412%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="70.8912%" y="149" width="0.0177%" height="15" fill="rgb(232,23,21)" fg:x="39989" fg:w="10"/><text x="71.1412%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (9 samples, 0.02%)</title><rect x="70.8929%" y="133" width="0.0160%" height="15" fill="rgb(244,5,23)" fg:x="39990" fg:w="9"/><text x="71.1429%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (9 samples, 0.02%)</title><rect x="70.8929%" y="117" width="0.0160%" height="15" fill="rgb(226,81,46)" fg:x="39990" fg:w="9"/><text x="71.1429%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="70.9178%" y="133" width="0.0160%" height="15" fill="rgb(247,70,30)" fg:x="40004" fg:w="9"/><text x="71.1678%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.03%)</title><rect x="70.9107%" y="149" width="0.0319%" height="15" fill="rgb(212,68,19)" fg:x="40000" fg:w="18"/><text x="71.1607%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (25 samples, 0.04%)</title><rect x="70.9089%" y="165" width="0.0443%" height="15" fill="rgb(240,187,13)" fg:x="39999" fg:w="25"/><text x="71.1589%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="70.9603%" y="117" width="0.0124%" height="15" fill="rgb(223,113,26)" fg:x="40028" fg:w="7"/><text x="71.2103%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all (10 samples, 0.02%)</title><rect x="70.9585%" y="149" width="0.0177%" height="15" fill="rgb(206,192,2)" fg:x="40027" fg:w="10"/><text x="71.2085%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="70.9585%" y="133" width="0.0177%" height="15" fill="rgb(241,108,4)" fg:x="40027" fg:w="10"/><text x="71.2085%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (17 samples, 0.03%)</title><rect x="70.9532%" y="165" width="0.0301%" height="15" fill="rgb(247,173,49)" fg:x="40024" fg:w="17"/><text x="71.2032%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (61 samples, 0.11%)</title><rect x="70.8859%" y="181" width="0.1081%" height="15" fill="rgb(224,114,35)" fg:x="39986" fg:w="61"/><text x="71.1359%" y="191.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (27 samples, 0.05%)</title><rect x="76.4523%" y="133" width="0.0479%" height="15" fill="rgb(245,159,27)" fg:x="43126" fg:w="27"/><text x="76.7023%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (713 samples, 1.26%)</title><rect x="76.5002%" y="133" width="1.2640%" height="15" fill="rgb(245,172,44)" fg:x="43153" fg:w="713"/><text x="76.7502%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (63 samples, 0.11%)</title><rect x="77.7642%" y="133" width="0.1117%" height="15" fill="rgb(236,23,11)" fg:x="43866" fg:w="63"/><text x="78.0142%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,904 samples, 3.38%)</title><rect x="74.6991%" y="149" width="3.3753%" height="15" fill="rgb(205,117,38)" fg:x="42137" fg:w="1904"/><text x="74.9491%" y="159.50">dat..</text></g><g><title>libsystem_m.dylib`trunc (112 samples, 0.20%)</title><rect x="77.8759%" y="133" width="0.1985%" height="15" fill="rgb(237,72,25)" fg:x="43929" fg:w="112"/><text x="78.1259%" y="143.50"></text></g><g><title>dateo_fun_remover`DYLD-STUB$$trunc (11 samples, 0.02%)</title><rect x="78.0744%" y="149" width="0.0195%" height="15" fill="rgb(244,70,9)" fg:x="44041" fg:w="11"/><text x="78.3244%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (506 samples, 0.90%)</title><rect x="78.0957%" y="149" width="0.8970%" height="15" fill="rgb(217,125,39)" fg:x="44053" fg:w="506"/><text x="78.3457%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func_list::FuncList::push (56 samples, 0.10%)</title><rect x="78.9927%" y="149" width="0.0993%" height="15" fill="rgb(235,36,10)" fg:x="44559" fg:w="56"/><text x="79.2427%" y="159.50"></text></g><g><title>libsystem_m.dylib`trunc (31 samples, 0.05%)</title><rect x="79.0920%" y="149" width="0.0550%" height="15" fill="rgb(251,123,47)" fg:x="44615" fg:w="31"/><text x="79.3420%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (15 samples, 0.03%)</title><rect x="79.1469%" y="149" width="0.0266%" height="15" fill="rgb(221,13,13)" fg:x="44646" fg:w="15"/><text x="79.3969%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (20 samples, 0.04%)</title><rect x="79.1735%" y="149" width="0.0355%" height="15" fill="rgb(238,131,9)" fg:x="44661" fg:w="20"/><text x="79.4235%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (21 samples, 0.04%)</title><rect x="79.2125%" y="149" width="0.0372%" height="15" fill="rgb(211,50,8)" fg:x="44683" fg:w="21"/><text x="79.4625%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (17 samples, 0.03%)</title><rect x="79.2498%" y="149" width="0.0301%" height="15" fill="rgb(245,182,24)" fg:x="44704" fg:w="17"/><text x="79.4998%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (21 samples, 0.04%)</title><rect x="79.2834%" y="149" width="0.0372%" height="15" fill="rgb(242,14,37)" fg:x="44723" fg:w="21"/><text x="79.5334%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (19 samples, 0.03%)</title><rect x="79.3260%" y="149" width="0.0337%" height="15" fill="rgb(246,228,12)" fg:x="44747" fg:w="19"/><text x="79.5760%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (38 samples, 0.07%)</title><rect x="79.3597%" y="149" width="0.0674%" height="15" fill="rgb(213,55,15)" fg:x="44766" fg:w="38"/><text x="79.6097%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (280 samples, 0.50%)</title><rect x="79.4270%" y="149" width="0.4964%" height="15" fill="rgb(209,9,3)" fg:x="44804" fg:w="280"/><text x="79.6770%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (18 samples, 0.03%)</title><rect x="79.9234%" y="149" width="0.0319%" height="15" fill="rgb(230,59,30)" fg:x="45084" fg:w="18"/><text x="80.1734%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (20 samples, 0.04%)</title><rect x="79.9553%" y="149" width="0.0355%" height="15" fill="rgb(209,121,21)" fg:x="45102" fg:w="20"/><text x="80.2053%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (85 samples, 0.15%)</title><rect x="79.9943%" y="149" width="0.1507%" height="15" fill="rgb(220,109,13)" fg:x="45124" fg:w="85"/><text x="80.2443%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (27 samples, 0.05%)</title><rect x="80.1450%" y="149" width="0.0479%" height="15" fill="rgb(232,18,1)" fg:x="45209" fg:w="27"/><text x="80.3950%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (16 samples, 0.03%)</title><rect x="80.1929%" y="149" width="0.0284%" height="15" fill="rgb(215,41,42)" fg:x="45236" fg:w="16"/><text x="80.4429%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (35 samples, 0.06%)</title><rect x="80.2212%" y="149" width="0.0620%" height="15" fill="rgb(224,123,36)" fg:x="45252" fg:w="35"/><text x="80.4712%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (16 samples, 0.03%)</title><rect x="80.2833%" y="149" width="0.0284%" height="15" fill="rgb(240,125,3)" fg:x="45287" fg:w="16"/><text x="80.5333%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (14 samples, 0.02%)</title><rect x="80.3117%" y="149" width="0.0248%" height="15" fill="rgb(205,98,50)" fg:x="45303" fg:w="14"/><text x="80.5617%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209442 (11 samples, 0.02%)</title><rect x="80.3471%" y="149" width="0.0195%" height="15" fill="rgb(205,185,37)" fg:x="45323" fg:w="11"/><text x="80.5971%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (11 samples, 0.02%)</title><rect x="80.3666%" y="149" width="0.0195%" height="15" fill="rgb(238,207,15)" fg:x="45334" fg:w="11"/><text x="80.6166%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (16 samples, 0.03%)</title><rect x="80.3861%" y="149" width="0.0284%" height="15" fill="rgb(213,199,42)" fg:x="45345" fg:w="16"/><text x="80.6361%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (11 samples, 0.02%)</title><rect x="80.4145%" y="149" width="0.0195%" height="15" fill="rgb(235,201,11)" fg:x="45361" fg:w="11"/><text x="80.6645%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (15 samples, 0.03%)</title><rect x="80.4340%" y="149" width="0.0266%" height="15" fill="rgb(207,46,11)" fg:x="45372" fg:w="15"/><text x="80.6840%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209493 (14 samples, 0.02%)</title><rect x="80.4641%" y="149" width="0.0248%" height="15" fill="rgb(241,35,35)" fg:x="45389" fg:w="14"/><text x="80.7141%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (18 samples, 0.03%)</title><rect x="80.4907%" y="149" width="0.0319%" height="15" fill="rgb(243,32,47)" fg:x="45404" fg:w="18"/><text x="80.7407%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094c1 (7 samples, 0.01%)</title><rect x="80.5226%" y="149" width="0.0124%" height="15" fill="rgb(247,202,23)" fg:x="45422" fg:w="7"/><text x="80.7726%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (132 samples, 0.23%)</title><rect x="80.5368%" y="149" width="0.2340%" height="15" fill="rgb(219,102,11)" fg:x="45430" fg:w="132"/><text x="80.7868%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (16 samples, 0.03%)</title><rect x="80.7726%" y="149" width="0.0284%" height="15" fill="rgb(243,110,44)" fg:x="45563" fg:w="16"/><text x="81.0226%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (9 samples, 0.02%)</title><rect x="80.8080%" y="149" width="0.0160%" height="15" fill="rgb(222,74,54)" fg:x="45583" fg:w="9"/><text x="81.0580%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (43 samples, 0.08%)</title><rect x="80.8240%" y="149" width="0.0762%" height="15" fill="rgb(216,99,12)" fg:x="45592" fg:w="43"/><text x="81.0740%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fc (8 samples, 0.01%)</title><rect x="80.9020%" y="149" width="0.0142%" height="15" fill="rgb(226,22,26)" fg:x="45636" fg:w="8"/><text x="81.1520%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (11 samples, 0.02%)</title><rect x="80.9162%" y="149" width="0.0195%" height="15" fill="rgb(217,163,10)" fg:x="45644" fg:w="11"/><text x="81.1662%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (172 samples, 0.30%)</title><rect x="80.9445%" y="149" width="0.3049%" height="15" fill="rgb(213,25,53)" fg:x="45660" fg:w="172"/><text x="81.1945%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20954a (8 samples, 0.01%)</title><rect x="81.2494%" y="149" width="0.0142%" height="15" fill="rgb(252,105,26)" fg:x="45832" fg:w="8"/><text x="81.4994%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20955a (6 samples, 0.01%)</title><rect x="81.2672%" y="149" width="0.0106%" height="15" fill="rgb(220,39,43)" fg:x="45842" fg:w="6"/><text x="81.5172%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (16 samples, 0.03%)</title><rect x="81.2849%" y="149" width="0.0284%" height="15" fill="rgb(229,68,48)" fg:x="45852" fg:w="16"/><text x="81.5349%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (19 samples, 0.03%)</title><rect x="81.3150%" y="149" width="0.0337%" height="15" fill="rgb(252,8,32)" fg:x="45869" fg:w="19"/><text x="81.5650%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (11 samples, 0.02%)</title><rect x="81.3505%" y="149" width="0.0195%" height="15" fill="rgb(223,20,43)" fg:x="45889" fg:w="11"/><text x="81.6005%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095c6 (8 samples, 0.01%)</title><rect x="81.3718%" y="149" width="0.0142%" height="15" fill="rgb(229,81,49)" fg:x="45901" fg:w="8"/><text x="81.6218%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (8 samples, 0.01%)</title><rect x="81.3859%" y="149" width="0.0142%" height="15" fill="rgb(236,28,36)" fg:x="45909" fg:w="8"/><text x="81.6359%" y="159.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,515 samples, 9.78%)</title><rect x="71.6357%" y="165" width="9.7768%" height="15" fill="rgb(249,185,26)" fg:x="40409" fg:w="5515"/><text x="71.8857%" y="175.50">dateo_fun_remo..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.03%)</title><rect x="81.4125%" y="165" width="0.0337%" height="15" fill="rgb(249,174,33)" fg:x="45924" fg:w="19"/><text x="81.6625%" y="175.50"></text></g><g><title>dateo_fun_remover`__rdl_alloc (38 samples, 0.07%)</title><rect x="81.4498%" y="165" width="0.0674%" height="15" fill="rgb(233,201,37)" fg:x="45945" fg:w="38"/><text x="81.6998%" y="175.50"></text></g><g><title>dateo_fun_remover`__rust_alloc (8 samples, 0.01%)</title><rect x="81.5171%" y="165" width="0.0142%" height="15" fill="rgb(221,78,26)" fg:x="45983" fg:w="8"/><text x="81.7671%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (8 samples, 0.01%)</title><rect x="81.5437%" y="101" width="0.0142%" height="15" fill="rgb(250,127,30)" fg:x="45998" fg:w="8"/><text x="81.7937%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (15 samples, 0.03%)</title><rect x="81.5366%" y="117" width="0.0266%" height="15" fill="rgb(230,49,44)" fg:x="45994" fg:w="15"/><text x="81.7866%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.04%)</title><rect x="81.5313%" y="165" width="0.0355%" height="15" fill="rgb(229,67,23)" fg:x="45991" fg:w="20"/><text x="81.7813%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (19 samples, 0.03%)</title><rect x="81.5331%" y="149" width="0.0337%" height="15" fill="rgb(249,83,47)" fg:x="45992" fg:w="19"/><text x="81.7831%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (17 samples, 0.03%)</title><rect x="81.5366%" y="133" width="0.0301%" height="15" fill="rgb(215,43,3)" fg:x="45994" fg:w="17"/><text x="81.7866%" y="143.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::func::Func::apply_rev_if (52 samples, 0.09%)</title><rect x="81.5685%" y="165" width="0.0922%" height="15" fill="rgb(238,154,13)" fg:x="46012" fg:w="52"/><text x="81.8185%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (20 samples, 0.04%)</title><rect x="81.6678%" y="165" width="0.0355%" height="15" fill="rgb(219,56,2)" fg:x="46068" fg:w="20"/><text x="81.9178%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (14 samples, 0.02%)</title><rect x="81.7050%" y="165" width="0.0248%" height="15" fill="rgb(233,0,4)" fg:x="46089" fg:w="14"/><text x="81.9550%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (11 samples, 0.02%)</title><rect x="81.7352%" y="165" width="0.0195%" height="15" fill="rgb(235,30,7)" fg:x="46106" fg:w="11"/><text x="81.9852%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (15 samples, 0.03%)</title><rect x="81.7547%" y="165" width="0.0266%" height="15" fill="rgb(250,79,13)" fg:x="46117" fg:w="15"/><text x="82.0047%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (13 samples, 0.02%)</title><rect x="81.7830%" y="165" width="0.0230%" height="15" fill="rgb(211,146,34)" fg:x="46133" fg:w="13"/><text x="82.0330%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (8 samples, 0.01%)</title><rect x="81.8132%" y="165" width="0.0142%" height="15" fill="rgb(228,22,38)" fg:x="46150" fg:w="8"/><text x="82.0632%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (8 samples, 0.01%)</title><rect x="81.8327%" y="165" width="0.0142%" height="15" fill="rgb(235,168,5)" fg:x="46161" fg:w="8"/><text x="82.0827%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (10 samples, 0.02%)</title><rect x="81.8486%" y="165" width="0.0177%" height="15" fill="rgb(221,155,16)" fg:x="46170" fg:w="10"/><text x="82.0986%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (6 samples, 0.01%)</title><rect x="81.8699%" y="165" width="0.0106%" height="15" fill="rgb(215,215,53)" fg:x="46182" fg:w="6"/><text x="82.1199%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (8 samples, 0.01%)</title><rect x="81.8894%" y="165" width="0.0142%" height="15" fill="rgb(223,4,10)" fg:x="46193" fg:w="8"/><text x="82.1394%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (9 samples, 0.02%)</title><rect x="81.9036%" y="165" width="0.0160%" height="15" fill="rgb(234,103,6)" fg:x="46201" fg:w="9"/><text x="82.1536%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (8 samples, 0.01%)</title><rect x="81.9196%" y="165" width="0.0142%" height="15" fill="rgb(227,97,0)" fg:x="46210" fg:w="8"/><text x="82.1696%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (9 samples, 0.02%)</title><rect x="81.9391%" y="165" width="0.0160%" height="15" fill="rgb(234,150,53)" fg:x="46221" fg:w="9"/><text x="82.1891%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (12 samples, 0.02%)</title><rect x="81.9568%" y="165" width="0.0213%" height="15" fill="rgb(228,201,54)" fg:x="46231" fg:w="12"/><text x="82.2068%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (18 samples, 0.03%)</title><rect x="81.9798%" y="165" width="0.0319%" height="15" fill="rgb(222,22,37)" fg:x="46244" fg:w="18"/><text x="82.2298%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (9 samples, 0.02%)</title><rect x="82.0117%" y="165" width="0.0160%" height="15" fill="rgb(237,53,32)" fg:x="46262" fg:w="9"/><text x="82.2617%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (302 samples, 0.54%)</title><rect x="82.0277%" y="165" width="0.5354%" height="15" fill="rgb(233,25,53)" fg:x="46271" fg:w="302"/><text x="82.2777%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238d0 (8 samples, 0.01%)</title><rect x="82.5684%" y="165" width="0.0142%" height="15" fill="rgb(210,40,34)" fg:x="46576" fg:w="8"/><text x="82.8184%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (8 samples, 0.01%)</title><rect x="82.5843%" y="165" width="0.0142%" height="15" fill="rgb(241,220,44)" fg:x="46585" fg:w="8"/><text x="82.8343%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (16 samples, 0.03%)</title><rect x="82.5985%" y="165" width="0.0284%" height="15" fill="rgb(235,28,35)" fg:x="46593" fg:w="16"/><text x="82.8485%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (73 samples, 0.13%)</title><rect x="82.6287%" y="165" width="0.1294%" height="15" fill="rgb(210,56,17)" fg:x="46610" fg:w="73"/><text x="82.8787%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (73 samples, 0.13%)</title><rect x="82.6287%" y="149" width="0.1294%" height="15" fill="rgb(224,130,29)" fg:x="46610" fg:w="73"/><text x="82.8787%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (10 samples, 0.02%)</title><rect x="82.7634%" y="165" width="0.0177%" height="15" fill="rgb(235,212,8)" fg:x="46686" fg:w="10"/><text x="83.0134%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22391d (7 samples, 0.01%)</title><rect x="82.7829%" y="165" width="0.0124%" height="15" fill="rgb(223,33,50)" fg:x="46697" fg:w="7"/><text x="83.0329%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223920 (6 samples, 0.01%)</title><rect x="82.7953%" y="165" width="0.0106%" height="15" fill="rgb(219,149,13)" fg:x="46704" fg:w="6"/><text x="83.0453%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223932 (7 samples, 0.01%)</title><rect x="82.8130%" y="165" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="46714" fg:w="7"/><text x="83.0630%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223959 (6 samples, 0.01%)</title><rect x="82.8432%" y="165" width="0.0106%" height="15" fill="rgb(216,193,19)" fg:x="46731" fg:w="6"/><text x="83.0932%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223962 (6 samples, 0.01%)</title><rect x="82.8556%" y="165" width="0.0106%" height="15" fill="rgb(216,135,14)" fg:x="46738" fg:w="6"/><text x="83.1056%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223969 (9 samples, 0.02%)</title><rect x="82.8662%" y="165" width="0.0160%" height="15" fill="rgb(241,47,5)" fg:x="46744" fg:w="9"/><text x="83.1162%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (171 samples, 0.30%)</title><rect x="82.8893%" y="165" width="0.3031%" height="15" fill="rgb(233,42,35)" fg:x="46757" fg:w="171"/><text x="83.1393%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (11 samples, 0.02%)</title><rect x="83.1995%" y="165" width="0.0195%" height="15" fill="rgb(231,13,6)" fg:x="46932" fg:w="11"/><text x="83.4495%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (13 samples, 0.02%)</title><rect x="83.2190%" y="165" width="0.0230%" height="15" fill="rgb(207,181,40)" fg:x="46943" fg:w="13"/><text x="83.4690%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (207 samples, 0.37%)</title><rect x="83.2420%" y="165" width="0.3670%" height="15" fill="rgb(254,173,49)" fg:x="46956" fg:w="207"/><text x="83.4920%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f6 (7 samples, 0.01%)</title><rect x="83.6090%" y="165" width="0.0124%" height="15" fill="rgb(221,1,38)" fg:x="47163" fg:w="7"/><text x="83.8590%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (14 samples, 0.02%)</title><rect x="83.6214%" y="165" width="0.0248%" height="15" fill="rgb(206,124,46)" fg:x="47170" fg:w="14"/><text x="83.8714%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (6 samples, 0.01%)</title><rect x="83.6462%" y="165" width="0.0106%" height="15" fill="rgb(249,21,11)" fg:x="47184" fg:w="6"/><text x="83.8962%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cdd (16 samples, 0.03%)</title><rect x="83.6569%" y="165" width="0.0284%" height="15" fill="rgb(222,201,40)" fg:x="47190" fg:w="16"/><text x="83.9069%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (21 samples, 0.04%)</title><rect x="83.6870%" y="165" width="0.0372%" height="15" fill="rgb(235,61,29)" fg:x="47207" fg:w="21"/><text x="83.9370%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (17 samples, 0.03%)</title><rect x="83.7331%" y="165" width="0.0301%" height="15" fill="rgb(219,207,3)" fg:x="47233" fg:w="17"/><text x="83.9831%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (22 samples, 0.04%)</title><rect x="83.7632%" y="165" width="0.0390%" height="15" fill="rgb(222,56,46)" fg:x="47250" fg:w="22"/><text x="84.0132%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d19 (16 samples, 0.03%)</title><rect x="83.8093%" y="165" width="0.0284%" height="15" fill="rgb(239,76,54)" fg:x="47276" fg:w="16"/><text x="84.0593%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (13 samples, 0.02%)</title><rect x="83.8483%" y="165" width="0.0230%" height="15" fill="rgb(231,124,27)" fg:x="47298" fg:w="13"/><text x="84.0983%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (10 samples, 0.02%)</title><rect x="83.8731%" y="165" width="0.0177%" height="15" fill="rgb(249,195,6)" fg:x="47312" fg:w="10"/><text x="84.1231%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (11 samples, 0.02%)</title><rect x="83.8909%" y="165" width="0.0195%" height="15" fill="rgb(237,174,47)" fg:x="47322" fg:w="11"/><text x="84.1409%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="83.9104%" y="165" width="0.0301%" height="15" fill="rgb(206,201,31)" fg:x="47333" fg:w="17"/><text x="84.1604%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (7,392 samples, 13.10%)</title><rect x="70.9940%" y="181" width="13.1043%" height="15" fill="rgb(231,57,52)" fg:x="40047" fg:w="7392"/><text x="71.2440%" y="191.50">dateo_fun_remover`da..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (89 samples, 0.16%)</title><rect x="83.9405%" y="165" width="0.1578%" height="15" fill="rgb(248,177,22)" fg:x="47350" fg:w="89"/><text x="84.1905%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,166 samples, 2.07%)</title><rect x="84.1444%" y="165" width="2.0670%" height="15" fill="rgb(215,211,37)" fg:x="47465" fg:w="1166"/><text x="84.3944%" y="175.50">d..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d671 (10 samples, 0.02%)</title><rect x="86.2114%" y="101" width="0.0177%" height="15" fill="rgb(241,128,51)" fg:x="48631" fg:w="10"/><text x="86.4614%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ddf (10 samples, 0.02%)</title><rect x="86.2114%" y="85" width="0.0177%" height="15" fill="rgb(227,165,31)" fg:x="48631" fg:w="10"/><text x="86.4614%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (10 samples, 0.02%)</title><rect x="86.2114%" y="69" width="0.0177%" height="15" fill="rgb(228,167,24)" fg:x="48631" fg:w="10"/><text x="86.4614%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (10 samples, 0.02%)</title><rect x="86.2114%" y="53" width="0.0177%" height="15" fill="rgb(228,143,12)" fg:x="48631" fg:w="10"/><text x="86.4614%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20d7a6 (14 samples, 0.02%)</title><rect x="86.2309%" y="101" width="0.0248%" height="15" fill="rgb(249,149,8)" fg:x="48642" fg:w="14"/><text x="86.4809%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="86.2309%" y="85" width="0.0248%" height="15" fill="rgb(243,35,44)" fg:x="48642" fg:w="14"/><text x="86.4809%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.05%)</title><rect x="86.2114%" y="165" width="0.0514%" height="15" fill="rgb(246,89,9)" fg:x="48631" fg:w="29"/><text x="86.4614%" y="175.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (29 samples, 0.05%)</title><rect x="86.2114%" y="149" width="0.0514%" height="15" fill="rgb(233,213,13)" fg:x="48631" fg:w="29"/><text x="86.4614%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (29 samples, 0.05%)</title><rect x="86.2114%" y="133" width="0.0514%" height="15" fill="rgb(233,141,41)" fg:x="48631" fg:w="29"/><text x="86.4614%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (29 samples, 0.05%)</title><rect x="86.2114%" y="117" width="0.0514%" height="15" fill="rgb(239,167,4)" fg:x="48631" fg:w="29"/><text x="86.4614%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (10 samples, 0.02%)</title><rect x="86.3887%" y="101" width="0.0177%" height="15" fill="rgb(209,217,16)" fg:x="48731" fg:w="10"/><text x="86.6387%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (6 samples, 0.01%)</title><rect x="86.4348%" y="101" width="0.0106%" height="15" fill="rgb(219,88,35)" fg:x="48757" fg:w="6"/><text x="86.6848%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.15%)</title><rect x="86.3018%" y="117" width="0.1471%" height="15" fill="rgb(220,193,23)" fg:x="48682" fg:w="83"/><text x="86.5518%" y="127.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_no_limit (13 samples, 0.02%)</title><rect x="86.4507%" y="117" width="0.0230%" height="15" fill="rgb(230,90,52)" fg:x="48766" fg:w="13"/><text x="86.7007%" y="127.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (13 samples, 0.02%)</title><rect x="86.4738%" y="117" width="0.0230%" height="15" fill="rgb(252,106,19)" fg:x="48779" fg:w="13"/><text x="86.7238%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (13 samples, 0.02%)</title><rect x="86.5163%" y="117" width="0.0230%" height="15" fill="rgb(206,74,20)" fg:x="48803" fg:w="13"/><text x="86.7663%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (8 samples, 0.01%)</title><rect x="86.5447%" y="117" width="0.0142%" height="15" fill="rgb(230,138,44)" fg:x="48819" fg:w="8"/><text x="86.7947%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="86.5447%" y="101" width="0.0142%" height="15" fill="rgb(235,182,43)" fg:x="48819" fg:w="8"/><text x="86.7947%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (7 samples, 0.01%)</title><rect x="86.5677%" y="117" width="0.0124%" height="15" fill="rgb(242,16,51)" fg:x="48832" fg:w="7"/><text x="86.8177%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (10 samples, 0.02%)</title><rect x="86.5819%" y="117" width="0.0177%" height="15" fill="rgb(248,9,4)" fg:x="48840" fg:w="10"/><text x="86.8319%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 0.34%)</title><rect x="86.2752%" y="133" width="0.3386%" height="15" fill="rgb(210,31,22)" fg:x="48667" fg:w="191"/><text x="86.5252%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (16 samples, 0.03%)</title><rect x="86.6316%" y="101" width="0.0284%" height="15" fill="rgb(239,54,39)" fg:x="48868" fg:w="16"/><text x="86.8816%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (16 samples, 0.03%)</title><rect x="86.6316%" y="85" width="0.0284%" height="15" fill="rgb(230,99,41)" fg:x="48868" fg:w="16"/><text x="86.8816%" y="95.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.04%)</title><rect x="86.6227%" y="133" width="0.0408%" height="15" fill="rgb(253,106,12)" fg:x="48863" fg:w="23"/><text x="86.8727%" y="143.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (23 samples, 0.04%)</title><rect x="86.6227%" y="117" width="0.0408%" height="15" fill="rgb(213,46,41)" fg:x="48863" fg:w="23"/><text x="86.8727%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (237 samples, 0.42%)</title><rect x="86.2628%" y="149" width="0.4201%" height="15" fill="rgb(215,133,35)" fg:x="48660" fg:w="237"/><text x="86.5128%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all (240 samples, 0.43%)</title><rect x="86.2628%" y="165" width="0.4255%" height="15" fill="rgb(213,28,5)" fg:x="48660" fg:w="240"/><text x="86.5128%" y="175.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.03%)</title><rect x="86.9365%" y="133" width="0.0319%" height="15" fill="rgb(215,77,49)" fg:x="49040" fg:w="18"/><text x="87.1865%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209393 (13 samples, 0.02%)</title><rect x="89.1436%" y="101" width="0.0230%" height="15" fill="rgb(248,100,22)" fg:x="50285" fg:w="13"/><text x="89.3936%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209399 (14 samples, 0.02%)</title><rect x="89.1755%" y="101" width="0.0248%" height="15" fill="rgb(208,67,9)" fg:x="50303" fg:w="14"/><text x="89.4255%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093a0 (9 samples, 0.02%)</title><rect x="89.2039%" y="101" width="0.0160%" height="15" fill="rgb(219,133,21)" fg:x="50319" fg:w="9"/><text x="89.4539%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093b2 (11 samples, 0.02%)</title><rect x="89.2234%" y="101" width="0.0195%" height="15" fill="rgb(246,46,29)" fg:x="50330" fg:w="11"/><text x="89.4734%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093ca (8 samples, 0.01%)</title><rect x="89.2446%" y="101" width="0.0142%" height="15" fill="rgb(246,185,52)" fg:x="50342" fg:w="8"/><text x="89.4946%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093d9 (7 samples, 0.01%)</title><rect x="89.2641%" y="101" width="0.0124%" height="15" fill="rgb(252,136,11)" fg:x="50353" fg:w="7"/><text x="89.5141%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (33 samples, 0.06%)</title><rect x="89.2765%" y="101" width="0.0585%" height="15" fill="rgb(219,138,53)" fg:x="50360" fg:w="33"/><text x="89.5265%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (143 samples, 0.25%)</title><rect x="89.3368%" y="101" width="0.2535%" height="15" fill="rgb(211,51,23)" fg:x="50394" fg:w="143"/><text x="89.5868%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093eb (17 samples, 0.03%)</title><rect x="89.5903%" y="101" width="0.0301%" height="15" fill="rgb(247,221,28)" fg:x="50537" fg:w="17"/><text x="89.8403%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093f8 (6 samples, 0.01%)</title><rect x="89.6205%" y="101" width="0.0106%" height="15" fill="rgb(251,222,45)" fg:x="50554" fg:w="6"/><text x="89.8705%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (31 samples, 0.05%)</title><rect x="89.6311%" y="101" width="0.0550%" height="15" fill="rgb(217,162,53)" fg:x="50560" fg:w="31"/><text x="89.8811%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20940a (10 samples, 0.02%)</title><rect x="89.6860%" y="101" width="0.0177%" height="15" fill="rgb(229,93,14)" fg:x="50591" fg:w="10"/><text x="89.9360%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209414 (12 samples, 0.02%)</title><rect x="89.7038%" y="101" width="0.0213%" height="15" fill="rgb(209,67,49)" fg:x="50601" fg:w="12"/><text x="89.9538%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20941b (25 samples, 0.04%)</title><rect x="89.7250%" y="101" width="0.0443%" height="15" fill="rgb(213,87,29)" fg:x="50613" fg:w="25"/><text x="89.9750%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20942b (8 samples, 0.01%)</title><rect x="89.7694%" y="101" width="0.0142%" height="15" fill="rgb(205,151,52)" fg:x="50638" fg:w="8"/><text x="90.0194%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209439 (8 samples, 0.01%)</title><rect x="89.7835%" y="101" width="0.0142%" height="15" fill="rgb(253,215,39)" fg:x="50646" fg:w="8"/><text x="90.0335%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209445 (14 samples, 0.02%)</title><rect x="89.8084%" y="101" width="0.0248%" height="15" fill="rgb(221,220,41)" fg:x="50660" fg:w="14"/><text x="90.0584%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (10 samples, 0.02%)</title><rect x="89.8332%" y="101" width="0.0177%" height="15" fill="rgb(218,133,21)" fg:x="50674" fg:w="10"/><text x="90.0832%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209467 (14 samples, 0.02%)</title><rect x="89.8509%" y="101" width="0.0248%" height="15" fill="rgb(221,193,43)" fg:x="50684" fg:w="14"/><text x="90.1009%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209484 (10 samples, 0.02%)</title><rect x="89.8757%" y="101" width="0.0177%" height="15" fill="rgb(240,128,52)" fg:x="50698" fg:w="10"/><text x="90.1257%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094a4 (7 samples, 0.01%)</title><rect x="89.9023%" y="101" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="50713" fg:w="7"/><text x="90.1523%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (55 samples, 0.10%)</title><rect x="89.9200%" y="101" width="0.0975%" height="15" fill="rgb(215,223,47)" fg:x="50723" fg:w="55"/><text x="90.1700%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094d9 (10 samples, 0.02%)</title><rect x="90.0229%" y="101" width="0.0177%" height="15" fill="rgb(248,225,23)" fg:x="50781" fg:w="10"/><text x="90.2729%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094e7 (8 samples, 0.01%)</title><rect x="90.0441%" y="101" width="0.0142%" height="15" fill="rgb(250,108,0)" fg:x="50793" fg:w="8"/><text x="90.2941%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ef (33 samples, 0.06%)</title><rect x="90.0583%" y="101" width="0.0585%" height="15" fill="rgb(228,208,7)" fg:x="50801" fg:w="33"/><text x="90.3083%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094fe (11 samples, 0.02%)</title><rect x="90.1221%" y="101" width="0.0195%" height="15" fill="rgb(244,45,10)" fg:x="50837" fg:w="11"/><text x="90.3721%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (99 samples, 0.18%)</title><rect x="90.1505%" y="101" width="0.1755%" height="15" fill="rgb(207,125,25)" fg:x="50853" fg:w="99"/><text x="90.4005%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095a4 (11 samples, 0.02%)</title><rect x="90.3420%" y="101" width="0.0195%" height="15" fill="rgb(210,195,18)" fg:x="50961" fg:w="11"/><text x="90.5920%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095ae (12 samples, 0.02%)</title><rect x="90.3615%" y="101" width="0.0213%" height="15" fill="rgb(249,80,12)" fg:x="50972" fg:w="12"/><text x="90.6115%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b9 (7 samples, 0.01%)</title><rect x="90.3845%" y="101" width="0.0124%" height="15" fill="rgb(221,65,9)" fg:x="50985" fg:w="7"/><text x="90.6345%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095d8 (8 samples, 0.01%)</title><rect x="90.4076%" y="101" width="0.0142%" height="15" fill="rgb(235,49,36)" fg:x="50998" fg:w="8"/><text x="90.6576%" y="111.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,556 samples, 2.76%)</title><rect x="87.6651%" y="117" width="2.7584%" height="15" fill="rgb(225,32,20)" fg:x="49451" fg:w="1556"/><text x="87.9151%" y="127.50">da..</text></g><g><title>dateo_fun_remover`__rdl_alloc (25 samples, 0.04%)</title><rect x="90.4235%" y="117" width="0.0443%" height="15" fill="rgb(215,141,46)" fg:x="51007" fg:w="25"/><text x="90.6735%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209350 (13 samples, 0.02%)</title><rect x="90.4749%" y="117" width="0.0230%" height="15" fill="rgb(250,160,47)" fg:x="51036" fg:w="13"/><text x="90.7249%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2095b5 (6 samples, 0.01%)</title><rect x="90.5086%" y="117" width="0.0106%" height="15" fill="rgb(216,222,40)" fg:x="51055" fg:w="6"/><text x="90.7586%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236fe (8 samples, 0.01%)</title><rect x="90.5210%" y="117" width="0.0142%" height="15" fill="rgb(234,217,39)" fg:x="51062" fg:w="8"/><text x="90.7710%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223705 (13 samples, 0.02%)</title><rect x="90.5387%" y="117" width="0.0230%" height="15" fill="rgb(207,178,40)" fg:x="51072" fg:w="13"/><text x="90.7887%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (7 samples, 0.01%)</title><rect x="90.5636%" y="117" width="0.0124%" height="15" fill="rgb(221,136,13)" fg:x="51086" fg:w="7"/><text x="90.8136%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (12 samples, 0.02%)</title><rect x="90.5760%" y="117" width="0.0213%" height="15" fill="rgb(249,199,10)" fg:x="51093" fg:w="12"/><text x="90.8260%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (6 samples, 0.01%)</title><rect x="90.5990%" y="117" width="0.0106%" height="15" fill="rgb(249,222,13)" fg:x="51106" fg:w="6"/><text x="90.8490%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (8 samples, 0.01%)</title><rect x="90.6114%" y="117" width="0.0142%" height="15" fill="rgb(244,185,38)" fg:x="51113" fg:w="8"/><text x="90.8614%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (9 samples, 0.02%)</title><rect x="90.6256%" y="117" width="0.0160%" height="15" fill="rgb(236,202,9)" fg:x="51121" fg:w="9"/><text x="90.8756%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223816 (8 samples, 0.01%)</title><rect x="90.6646%" y="117" width="0.0142%" height="15" fill="rgb(250,229,37)" fg:x="51143" fg:w="8"/><text x="90.9146%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223826 (8 samples, 0.01%)</title><rect x="90.6806%" y="117" width="0.0142%" height="15" fill="rgb(206,174,23)" fg:x="51152" fg:w="8"/><text x="90.9306%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223835 (15 samples, 0.03%)</title><rect x="90.6965%" y="117" width="0.0266%" height="15" fill="rgb(211,33,43)" fg:x="51161" fg:w="15"/><text x="90.9465%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223851 (11 samples, 0.02%)</title><rect x="90.7267%" y="117" width="0.0195%" height="15" fill="rgb(245,58,50)" fg:x="51178" fg:w="11"/><text x="90.9767%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22386d (7 samples, 0.01%)</title><rect x="90.7462%" y="117" width="0.0124%" height="15" fill="rgb(244,68,36)" fg:x="51189" fg:w="7"/><text x="90.9962%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223879 (12 samples, 0.02%)</title><rect x="90.7586%" y="117" width="0.0213%" height="15" fill="rgb(232,229,15)" fg:x="51196" fg:w="12"/><text x="91.0086%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223887 (10 samples, 0.02%)</title><rect x="90.7798%" y="117" width="0.0177%" height="15" fill="rgb(254,30,23)" fg:x="51208" fg:w="10"/><text x="91.0298%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (202 samples, 0.36%)</title><rect x="90.7993%" y="117" width="0.3581%" height="15" fill="rgb(235,160,14)" fg:x="51219" fg:w="202"/><text x="91.0493%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238e5 (10 samples, 0.02%)</title><rect x="91.1769%" y="117" width="0.0177%" height="15" fill="rgb(212,155,44)" fg:x="51432" fg:w="10"/><text x="91.4269%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2238f1 (6 samples, 0.01%)</title><rect x="91.1947%" y="117" width="0.0106%" height="15" fill="rgb(226,2,50)" fg:x="51442" fg:w="6"/><text x="91.4447%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (102 samples, 0.18%)</title><rect x="91.2106%" y="117" width="0.1808%" height="15" fill="rgb(234,177,6)" fg:x="51451" fg:w="102"/><text x="91.4606%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (96 samples, 0.17%)</title><rect x="91.2213%" y="101" width="0.1702%" height="15" fill="rgb(217,24,9)" fg:x="51457" fg:w="96"/><text x="91.4713%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223912 (17 samples, 0.03%)</title><rect x="91.4003%" y="117" width="0.0301%" height="15" fill="rgb(220,13,46)" fg:x="51558" fg:w="17"/><text x="91.6503%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (11 samples, 0.02%)</title><rect x="91.4393%" y="117" width="0.0195%" height="15" fill="rgb(239,221,27)" fg:x="51580" fg:w="11"/><text x="91.6893%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223947 (7 samples, 0.01%)</title><rect x="91.4588%" y="117" width="0.0124%" height="15" fill="rgb(222,198,25)" fg:x="51591" fg:w="7"/><text x="91.7088%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22395b (14 samples, 0.02%)</title><rect x="91.4712%" y="117" width="0.0248%" height="15" fill="rgb(211,99,13)" fg:x="51598" fg:w="14"/><text x="91.7212%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22396c (8 samples, 0.01%)</title><rect x="91.4960%" y="117" width="0.0142%" height="15" fill="rgb(232,111,31)" fg:x="51612" fg:w="8"/><text x="91.7460%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (48 samples, 0.09%)</title><rect x="91.5262%" y="117" width="0.0851%" height="15" fill="rgb(245,82,37)" fg:x="51629" fg:w="48"/><text x="91.7762%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (71 samples, 0.13%)</title><rect x="91.6201%" y="117" width="0.1259%" height="15" fill="rgb(227,149,46)" fg:x="51682" fg:w="71"/><text x="91.8701%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239a8 (9 samples, 0.02%)</title><rect x="91.7549%" y="117" width="0.0160%" height="15" fill="rgb(218,36,50)" fg:x="51758" fg:w="9"/><text x="92.0049%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239aa (6 samples, 0.01%)</title><rect x="91.7708%" y="117" width="0.0106%" height="15" fill="rgb(226,80,48)" fg:x="51767" fg:w="6"/><text x="92.0208%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (126 samples, 0.22%)</title><rect x="91.7815%" y="117" width="0.2234%" height="15" fill="rgb(238,224,15)" fg:x="51773" fg:w="126"/><text x="92.0315%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a39 (9 samples, 0.02%)</title><rect x="92.0190%" y="117" width="0.0160%" height="15" fill="rgb(241,136,10)" fg:x="51907" fg:w="9"/><text x="92.2690%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a40 (7 samples, 0.01%)</title><rect x="92.0350%" y="117" width="0.0124%" height="15" fill="rgb(208,32,45)" fg:x="51916" fg:w="7"/><text x="92.2850%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225cf1 (10 samples, 0.02%)</title><rect x="92.0580%" y="117" width="0.0177%" height="15" fill="rgb(207,135,9)" fg:x="51929" fg:w="10"/><text x="92.3080%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d04 (6 samples, 0.01%)</title><rect x="92.0793%" y="117" width="0.0106%" height="15" fill="rgb(206,86,44)" fg:x="51941" fg:w="6"/><text x="92.3293%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d0d (11 samples, 0.02%)</title><rect x="92.0899%" y="117" width="0.0195%" height="15" fill="rgb(245,177,15)" fg:x="51947" fg:w="11"/><text x="92.3399%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a225d28 (9 samples, 0.02%)</title><rect x="92.1218%" y="117" width="0.0160%" height="15" fill="rgb(206,64,50)" fg:x="51965" fg:w="9"/><text x="92.3718%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (12 samples, 0.02%)</title><rect x="92.1396%" y="117" width="0.0213%" height="15" fill="rgb(234,36,40)" fg:x="51975" fg:w="12"/><text x="92.3896%" y="127.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (9 samples, 0.02%)</title><rect x="92.1608%" y="117" width="0.0160%" height="15" fill="rgb(213,64,8)" fg:x="51987" fg:w="9"/><text x="92.4108%" y="127.50"></text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,951 samples, 5.23%)</title><rect x="86.9684%" y="133" width="5.2314%" height="15" fill="rgb(210,75,36)" fg:x="49058" fg:w="2951"/><text x="87.2184%" y="143.50">dateo_..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="92.1768%" y="117" width="0.0230%" height="15" fill="rgb(229,88,21)" fg:x="51996" fg:w="13"/><text x="92.4268%" y="127.50"></text></g><g><title>dateo_fun_remover`__rdl_dealloc (21 samples, 0.04%)</title><rect x="92.2051%" y="133" width="0.0372%" height="15" fill="rgb(252,204,47)" fg:x="52012" fg:w="21"/><text x="92.4551%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209f96 (7 samples, 0.01%)</title><rect x="92.3523%" y="101" width="0.0124%" height="15" fill="rgb(208,77,27)" fg:x="52095" fg:w="7"/><text x="92.6023%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a004 (36 samples, 0.06%)</title><rect x="92.3895%" y="101" width="0.0638%" height="15" fill="rgb(221,76,26)" fg:x="52116" fg:w="36"/><text x="92.6395%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c68b (6 samples, 0.01%)</title><rect x="92.5030%" y="85" width="0.0106%" height="15" fill="rgb(225,139,18)" fg:x="52180" fg:w="6"/><text x="92.7530%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a1cb (62 samples, 0.11%)</title><rect x="92.5650%" y="69" width="0.1099%" height="15" fill="rgb(230,137,11)" fg:x="52215" fg:w="62"/><text x="92.8150%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093dd (9 samples, 0.02%)</title><rect x="92.7263%" y="53" width="0.0160%" height="15" fill="rgb(212,28,1)" fg:x="52306" fg:w="9"/><text x="92.9763%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (29 samples, 0.05%)</title><rect x="92.7423%" y="53" width="0.0514%" height="15" fill="rgb(248,164,17)" fg:x="52315" fg:w="29"/><text x="92.9923%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209407 (9 samples, 0.02%)</title><rect x="92.7972%" y="53" width="0.0160%" height="15" fill="rgb(222,171,42)" fg:x="52346" fg:w="9"/><text x="93.0472%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209452 (7 samples, 0.01%)</title><rect x="92.8469%" y="53" width="0.0124%" height="15" fill="rgb(243,84,45)" fg:x="52374" fg:w="7"/><text x="93.0969%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (23 samples, 0.04%)</title><rect x="92.8717%" y="53" width="0.0408%" height="15" fill="rgb(252,49,23)" fg:x="52388" fg:w="23"/><text x="93.1217%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (11 samples, 0.02%)</title><rect x="92.9267%" y="53" width="0.0195%" height="15" fill="rgb(215,19,7)" fg:x="52419" fg:w="11"/><text x="93.1767%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c852 (145 samples, 0.26%)</title><rect x="92.7033%" y="69" width="0.2571%" height="15" fill="rgb(238,81,41)" fg:x="52293" fg:w="145"/><text x="92.9533%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c86f (15 samples, 0.03%)</title><rect x="92.9621%" y="69" width="0.0266%" height="15" fill="rgb(210,199,37)" fg:x="52439" fg:w="15"/><text x="93.2121%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.03%)</title><rect x="92.9621%" y="53" width="0.0266%" height="15" fill="rgb(244,192,49)" fg:x="52439" fg:w="15"/><text x="93.2121%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22387d (7 samples, 0.01%)</title><rect x="93.0401%" y="53" width="0.0124%" height="15" fill="rgb(226,211,11)" fg:x="52483" fg:w="7"/><text x="93.2901%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (34 samples, 0.06%)</title><rect x="93.0543%" y="53" width="0.0603%" height="15" fill="rgb(236,162,54)" fg:x="52491" fg:w="34"/><text x="93.3043%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (19 samples, 0.03%)</title><rect x="93.1323%" y="53" width="0.0337%" height="15" fill="rgb(220,229,9)" fg:x="52535" fg:w="19"/><text x="93.3823%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="93.1358%" y="37" width="0.0301%" height="15" fill="rgb(250,87,22)" fg:x="52537" fg:w="17"/><text x="93.3858%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (10 samples, 0.02%)</title><rect x="93.1961%" y="53" width="0.0177%" height="15" fill="rgb(239,43,17)" fg:x="52571" fg:w="10"/><text x="93.4461%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (31 samples, 0.05%)</title><rect x="93.2280%" y="53" width="0.0550%" height="15" fill="rgb(231,177,25)" fg:x="52589" fg:w="31"/><text x="93.4780%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c87c (171 samples, 0.30%)</title><rect x="92.9923%" y="69" width="0.3031%" height="15" fill="rgb(219,179,1)" fg:x="52456" fg:w="171"/><text x="93.2423%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c884 (6 samples, 0.01%)</title><rect x="93.2954%" y="69" width="0.0106%" height="15" fill="rgb(238,219,53)" fg:x="52627" fg:w="6"/><text x="93.5454%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20c698 (462 samples, 0.82%)</title><rect x="92.5136%" y="85" width="0.8190%" height="15" fill="rgb(232,167,36)" fg:x="52186" fg:w="462"/><text x="92.7636%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="93.3220%" y="69" width="0.0106%" height="15" fill="rgb(244,19,51)" fg:x="52642" fg:w="6"/><text x="93.5720%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b235 (490 samples, 0.87%)</title><rect x="92.4906%" y="101" width="0.8687%" height="15" fill="rgb(224,6,22)" fg:x="52173" fg:w="490"/><text x="92.7406%" y="111.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::finish_grow (607 samples, 1.08%)</title><rect x="92.2920%" y="117" width="1.0761%" height="15" fill="rgb(224,145,5)" fg:x="52061" fg:w="607"/><text x="92.5420%" y="127.50"></text></g><g><title>dateo_fun_remover`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (635 samples, 1.13%)</title><rect x="92.2459%" y="133" width="1.1257%" height="15" fill="rgb(234,130,49)" fg:x="52035" fg:w="635"/><text x="92.4959%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f20470 (160 samples, 0.28%)</title><rect x="93.3734%" y="133" width="0.2836%" height="15" fill="rgb(254,6,2)" fg:x="52671" fg:w="160"/><text x="93.6234%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007ff825f22aa0 (271 samples, 0.48%)</title><rect x="93.6570%" y="133" width="0.4804%" height="15" fill="rgb(208,96,46)" fg:x="52831" fg:w="271"/><text x="93.9070%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2093e7 (11 samples, 0.02%)</title><rect x="94.1676%" y="133" width="0.0195%" height="15" fill="rgb(239,3,39)" fg:x="53119" fg:w="11"/><text x="94.4176%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2094ce (6 samples, 0.01%)</title><rect x="94.2226%" y="133" width="0.0106%" height="15" fill="rgb(233,210,1)" fg:x="53150" fg:w="6"/><text x="94.4726%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209509 (18 samples, 0.03%)</title><rect x="94.2421%" y="133" width="0.0319%" height="15" fill="rgb(244,137,37)" fg:x="53161" fg:w="18"/><text x="94.4921%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (12 samples, 0.02%)</title><rect x="94.2828%" y="133" width="0.0213%" height="15" fill="rgb(240,136,2)" fg:x="53184" fg:w="12"/><text x="94.5328%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (8 samples, 0.01%)</title><rect x="94.3059%" y="133" width="0.0142%" height="15" fill="rgb(239,18,37)" fg:x="53197" fg:w="8"/><text x="94.5559%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (8 samples, 0.01%)</title><rect x="94.3236%" y="133" width="0.0142%" height="15" fill="rgb(218,185,22)" fg:x="53207" fg:w="8"/><text x="94.5736%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (11 samples, 0.02%)</title><rect x="94.3413%" y="133" width="0.0195%" height="15" fill="rgb(225,218,4)" fg:x="53217" fg:w="11"/><text x="94.5913%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (11 samples, 0.02%)</title><rect x="94.3608%" y="133" width="0.0195%" height="15" fill="rgb(230,182,32)" fg:x="53228" fg:w="11"/><text x="94.6108%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (10 samples, 0.02%)</title><rect x="94.3856%" y="133" width="0.0177%" height="15" fill="rgb(242,56,43)" fg:x="53242" fg:w="10"/><text x="94.6356%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (7 samples, 0.01%)</title><rect x="94.4051%" y="133" width="0.0124%" height="15" fill="rgb(233,99,24)" fg:x="53253" fg:w="7"/><text x="94.6551%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (11 samples, 0.02%)</title><rect x="94.4176%" y="133" width="0.0195%" height="15" fill="rgb(234,209,42)" fg:x="53260" fg:w="11"/><text x="94.6676%" y="143.50"></text></g><g><title>dateo_fun_remover`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,369 samples, 7.75%)</title><rect x="86.6989%" y="149" width="7.7452%" height="15" fill="rgb(227,7,12)" fg:x="48906" fg:w="4369"/><text x="86.9489%" y="159.50">dateo_fun_r..</text></g><g><title>dateo_fun_remover`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="94.4441%" y="149" width="0.0266%" height="15" fill="rgb(245,203,43)" fg:x="53275" fg:w="15"/><text x="94.6941%" y="159.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::operation::Operation::apply_all_rev (4,405 samples, 7.81%)</title><rect x="86.6883%" y="165" width="7.8090%" height="15" fill="rgb(238,205,33)" fg:x="48900" fg:w="4405"/><text x="86.9383%" y="175.50">dateo_fun_r..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (26 samples, 0.05%)</title><rect x="94.5381%" y="165" width="0.0461%" height="15" fill="rgb(231,56,7)" fg:x="53328" fg:w="26"/><text x="94.7881%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (9 samples, 0.02%)</title><rect x="94.5895%" y="165" width="0.0160%" height="15" fill="rgb(244,186,29)" fg:x="53357" fg:w="9"/><text x="94.8395%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="94.5895%" y="149" width="0.0160%" height="15" fill="rgb(234,111,31)" fg:x="53357" fg:w="9"/><text x="94.8395%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (19 samples, 0.03%)</title><rect x="94.6179%" y="165" width="0.0337%" height="15" fill="rgb(241,149,10)" fg:x="53373" fg:w="19"/><text x="94.8679%" y="175.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_node (5,972 samples, 10.59%)</title><rect x="84.0983%" y="181" width="10.5870%" height="15" fill="rgb(249,206,44)" fg:x="47439" fg:w="5972"/><text x="84.3483%" y="191.50">dateo_fun_remov..</text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (16 samples, 0.03%)</title><rect x="94.6852%" y="181" width="0.0284%" height="15" fill="rgb(251,153,30)" fg:x="53411" fg:w="16"/><text x="94.9352%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (9 samples, 0.02%)</title><rect x="94.7136%" y="181" width="0.0160%" height="15" fill="rgb(239,152,38)" fg:x="53427" fg:w="9"/><text x="94.9636%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (8 samples, 0.01%)</title><rect x="94.7296%" y="181" width="0.0142%" height="15" fill="rgb(249,139,47)" fg:x="53436" fg:w="8"/><text x="94.9796%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e57 (10 samples, 0.02%)</title><rect x="94.7508%" y="181" width="0.0177%" height="15" fill="rgb(244,64,35)" fg:x="53448" fg:w="10"/><text x="95.0008%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (12 samples, 0.02%)</title><rect x="94.7686%" y="181" width="0.0213%" height="15" fill="rgb(216,46,15)" fg:x="53458" fg:w="12"/><text x="95.0186%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (15 samples, 0.03%)</title><rect x="94.7987%" y="181" width="0.0266%" height="15" fill="rgb(250,74,19)" fg:x="53475" fg:w="15"/><text x="95.0487%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21da5f (158 samples, 0.28%)</title><rect x="94.8306%" y="181" width="0.2801%" height="15" fill="rgb(249,42,33)" fg:x="53493" fg:w="158"/><text x="95.0806%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a21468c (156 samples, 0.28%)</title><rect x="94.8342%" y="165" width="0.2766%" height="15" fill="rgb(242,149,17)" fg:x="53495" fg:w="156"/><text x="95.0842%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a215ce7 (156 samples, 0.28%)</title><rect x="94.8342%" y="149" width="0.2766%" height="15" fill="rgb(244,29,21)" fg:x="53495" fg:w="156"/><text x="95.0842%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (156 samples, 0.28%)</title><rect x="94.8342%" y="133" width="0.2766%" height="15" fill="rgb(220,130,37)" fg:x="53495" fg:w="156"/><text x="95.0842%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (12 samples, 0.02%)</title><rect x="95.1107%" y="181" width="0.0213%" height="15" fill="rgb(211,67,2)" fg:x="53651" fg:w="12"/><text x="95.3607%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22370f (7 samples, 0.01%)</title><rect x="95.1586%" y="181" width="0.0124%" height="15" fill="rgb(235,68,52)" fg:x="53678" fg:w="7"/><text x="95.4086%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22372f (7 samples, 0.01%)</title><rect x="95.1710%" y="181" width="0.0124%" height="15" fill="rgb(246,142,3)" fg:x="53685" fg:w="7"/><text x="95.4210%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22374f (10 samples, 0.02%)</title><rect x="95.1887%" y="181" width="0.0177%" height="15" fill="rgb(241,25,7)" fg:x="53695" fg:w="10"/><text x="95.4387%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237e0 (6 samples, 0.01%)</title><rect x="95.2064%" y="181" width="0.0106%" height="15" fill="rgb(242,119,39)" fg:x="53705" fg:w="6"/><text x="95.4564%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237f2 (9 samples, 0.02%)</title><rect x="95.2206%" y="181" width="0.0160%" height="15" fill="rgb(241,98,45)" fg:x="53713" fg:w="9"/><text x="95.4706%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2237ff (12 samples, 0.02%)</title><rect x="95.2366%" y="181" width="0.0213%" height="15" fill="rgb(254,28,30)" fg:x="53722" fg:w="12"/><text x="95.4866%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22383d (7 samples, 0.01%)</title><rect x="95.2968%" y="181" width="0.0124%" height="15" fill="rgb(241,142,54)" fg:x="53756" fg:w="7"/><text x="95.5468%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (180 samples, 0.32%)</title><rect x="95.3607%" y="181" width="0.3191%" height="15" fill="rgb(222,85,15)" fg:x="53792" fg:w="180"/><text x="95.6107%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (52 samples, 0.09%)</title><rect x="95.7028%" y="181" width="0.0922%" height="15" fill="rgb(210,85,47)" fg:x="53985" fg:w="52"/><text x="95.9528%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (52 samples, 0.09%)</title><rect x="95.7028%" y="165" width="0.0922%" height="15" fill="rgb(224,206,25)" fg:x="53985" fg:w="52"/><text x="95.9528%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22390f (19 samples, 0.03%)</title><rect x="95.8003%" y="181" width="0.0337%" height="15" fill="rgb(243,201,19)" fg:x="54040" fg:w="19"/><text x="96.0503%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223934 (8 samples, 0.01%)</title><rect x="95.8553%" y="181" width="0.0142%" height="15" fill="rgb(236,59,4)" fg:x="54071" fg:w="8"/><text x="96.1053%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223992 (64 samples, 0.11%)</title><rect x="95.9191%" y="181" width="0.1135%" height="15" fill="rgb(254,179,45)" fg:x="54107" fg:w="64"/><text x="96.1691%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (36 samples, 0.06%)</title><rect x="96.0325%" y="181" width="0.0638%" height="15" fill="rgb(226,14,10)" fg:x="54171" fg:w="36"/><text x="96.2825%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (38 samples, 0.07%)</title><rect x="96.1070%" y="181" width="0.0674%" height="15" fill="rgb(244,27,41)" fg:x="54213" fg:w="38"/><text x="96.3570%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239f4 (10 samples, 0.02%)</title><rect x="96.1832%" y="181" width="0.0177%" height="15" fill="rgb(235,35,32)" fg:x="54256" fg:w="10"/><text x="96.4332%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (14 samples, 0.02%)</title><rect x="96.2187%" y="181" width="0.0248%" height="15" fill="rgb(218,68,31)" fg:x="54276" fg:w="14"/><text x="96.4687%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a48 (13 samples, 0.02%)</title><rect x="96.2435%" y="181" width="0.0230%" height="15" fill="rgb(207,120,37)" fg:x="54290" fg:w="13"/><text x="96.4935%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22c472 (6 samples, 0.01%)</title><rect x="96.2683%" y="181" width="0.0106%" height="15" fill="rgb(227,98,0)" fg:x="54304" fg:w="6"/><text x="96.5183%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (8 samples, 0.01%)</title><rect x="96.2790%" y="181" width="0.0142%" height="15" fill="rgb(207,7,3)" fg:x="54310" fg:w="8"/><text x="96.5290%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (15 samples, 0.03%)</title><rect x="96.2931%" y="181" width="0.0266%" height="15" fill="rgb(206,98,19)" fg:x="54318" fg:w="15"/><text x="96.5431%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="96.3197%" y="181" width="0.0142%" height="15" fill="rgb(217,5,26)" fg:x="54333" fg:w="8"/><text x="96.5697%" y="191.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::Arena::solve::rec (19,351 samples, 34.30%)</title><rect x="65.2077%" y="197" width="34.3048%" height="15" fill="rgb(235,190,38)" fg:x="36783" fg:w="19351"/><text x="65.4577%" y="207.50">dateo_fun_remover`dateo_fun_remover::finder::tree::Arena..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,793 samples, 3.18%)</title><rect x="96.3339%" y="181" width="3.1786%" height="15" fill="rgb(247,86,24)" fg:x="54341" fg:w="1793"/><text x="96.5839%" y="191.50">lib..</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::tree::expand_funcs (17 samples, 0.03%)</title><rect x="99.5125%" y="197" width="0.0301%" height="15" fill="rgb(205,101,16)" fg:x="56134" fg:w="17"/><text x="99.7625%" y="207.50"></text></g><g><title>dateo_fun_remover`hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="99.5444%" y="197" width="0.0124%" height="15" fill="rgb(246,168,33)" fg:x="56152" fg:w="7"/><text x="99.7944%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e2b (9 samples, 0.02%)</title><rect x="99.5692%" y="197" width="0.0160%" height="15" fill="rgb(231,114,1)" fg:x="56166" fg:w="9"/><text x="99.8192%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e3a (6 samples, 0.01%)</title><rect x="99.5852%" y="197" width="0.0106%" height="15" fill="rgb(207,184,53)" fg:x="56175" fg:w="6"/><text x="99.8352%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e45 (10 samples, 0.02%)</title><rect x="99.5994%" y="197" width="0.0177%" height="15" fill="rgb(224,95,51)" fg:x="56183" fg:w="10"/><text x="99.8494%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e60 (7 samples, 0.01%)</title><rect x="99.6348%" y="197" width="0.0124%" height="15" fill="rgb(212,188,45)" fg:x="56203" fg:w="7"/><text x="99.8848%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a209e70 (21 samples, 0.04%)</title><rect x="99.6561%" y="197" width="0.0372%" height="15" fill="rgb(223,154,38)" fg:x="56215" fg:w="21"/><text x="99.9061%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20b7de (9 samples, 0.02%)</title><rect x="99.7270%" y="181" width="0.0160%" height="15" fill="rgb(251,22,52)" fg:x="56255" fg:w="9"/><text x="99.9770%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20a464 (25 samples, 0.04%)</title><rect x="99.7039%" y="197" width="0.0443%" height="15" fill="rgb(229,209,22)" fg:x="56242" fg:w="25"/><text x="99.9539%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a20e006 (17 samples, 0.03%)</title><rect x="99.7660%" y="197" width="0.0301%" height="15" fill="rgb(234,138,34)" fg:x="56277" fg:w="17"/><text x="100.0160%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2236f8 (10 samples, 0.02%)</title><rect x="99.8156%" y="197" width="0.0177%" height="15" fill="rgb(212,95,11)" fg:x="56305" fg:w="10"/><text x="100.0656%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223891 (17 samples, 0.03%)</title><rect x="99.8546%" y="197" width="0.0301%" height="15" fill="rgb(240,179,47)" fg:x="56327" fg:w="17"/><text x="100.1046%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223901 (8 samples, 0.01%)</title><rect x="99.8901%" y="197" width="0.0142%" height="15" fill="rgb(240,163,11)" fg:x="56347" fg:w="8"/><text x="100.1401%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="99.8901%" y="181" width="0.0142%" height="15" fill="rgb(236,37,12)" fg:x="56347" fg:w="8"/><text x="100.1401%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a22399e (6 samples, 0.01%)</title><rect x="99.9202%" y="197" width="0.0106%" height="15" fill="rgb(232,164,16)" fg:x="56364" fg:w="6"/><text x="100.1702%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a2239b7 (9 samples, 0.02%)</title><rect x="99.9362%" y="197" width="0.0160%" height="15" fill="rgb(244,205,15)" fg:x="56373" fg:w="9"/><text x="100.1862%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`0x7ff81a223a47 (9 samples, 0.02%)</title><rect x="99.9539%" y="197" width="0.0160%" height="15" fill="rgb(223,117,47)" fg:x="56383" fg:w="9"/><text x="100.2039%" y="207.50"></text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve (56,399 samples, 99.98%)</title><rect x="0.0053%" y="213" width="99.9823%" height="15" fill="rgb(244,107,35)" fg:x="3" fg:w="56399"/><text x="0.2553%" y="223.50">dateo_fun_remover`dateo_fun_remover::finder::joiner::Joiner::solve</text></g><g><title>all (56,409 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="351.50"></text></g><g><title>dyld`start (56,409 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="335.50">dyld`start</text></g><g><title>dateo_fun_remover`main (56,409 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="319.50">dateo_fun_remover`main</text></g><g><title>dateo_fun_remover`std::rt::lang_start_internal (56,409 samples, 100.00%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="303.50">dateo_fun_remover`std::rt::lang_start_internal</text></g><g><title>dateo_fun_remover`std::rt::lang_start::_{{closure}} (56,409 samples, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="287.50">dateo_fun_remover`std::rt::lang_start::_{{closure}}</text></g><g><title>dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace (56,409 samples, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(214,194,35)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="271.50">dateo_fun_remover`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dateo_fun_remover`dateo_fun_remover::main (56,409 samples, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="255.50">dateo_fun_remover`dateo_fun_remover::main</text></g><g><title>dateo_fun_remover`dateo_fun_remover::finder::solve (56,409 samples, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="56409"/><text x="0.2500%" y="239.50">dateo_fun_remover`dateo_fun_remover::finder::solve</text></g></svg></svg>